[
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a \\ lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a & (lst(any, x1) | lst(tuple0)) where x1 = lst(tuple0 | (any, x1))"
      ],
      [
        "'a & (lst(any, x1) | lst(tuple0)) where x1 = lst(tuple0 | (any, x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(any, x1) where x1 = lst(tuple0 | (any, x1))",
        "lst(any, 'b & lst(x1)) where x1 = tuple0 | (any, lst(x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(any, lst(x1)) \\ lst(any, 'b & lst(x1))) where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "'a \\ (lst(any, lst(x1)) \\ lst(any, 'b & lst(x1))) where x1 = tuple0 | (any, lst(x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a", "any" ], [ "1", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "('a, 1) -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "empty" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a", "int -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & (int -> 'b)" ], [ "'a & (int -> 'b)", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "'b", "'a & lst(x1) -> 'c where x1 = tuple0 | (any, lst(x1))" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b", "'b & ('a & lst(x1) -> 'c) where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "'b & ('a & lst(x1) -> 'c) where x1 = tuple0 | (any, lst(x1))", "'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [],
    "constr": [
      [
        "'b & int -> 'a & (lst(any, 'd & lst(x1)) | lst(tuple0)) -> 'b & int | 'f where x1 = tuple0 | (any, lst(x1))",
        "'c & (int -> 'e & ('d & lst(x1) -> 'f)) where x1 = tuple0 | (any, lst(x1))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'b & (lst(x1) | lst(tuple0)) | 'a where x1 = any, 'b & (lst(x1) | lst(tuple0))"
      ],
      [
        "'b & (lst(x1) | lst(tuple0)) | 'a where x1 = any, 'b & (lst(x1) | lst(tuple0))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "(int -> 'c & (lst(any, x1) | lst(tuple0)) | 'a & (lst(any, x1) | lst(tuple0)) -> any) | 'b where x1 = 'c & (lst(any, x1) | lst(tuple0))"
      ],
      [
        "(int -> 'c & (lst(any, x1) | lst(tuple0)) | 'a & (lst(any, x1) | lst(tuple0)) -> any) | 'b where x1 = 'c & (lst(any, x1) | lst(tuple0))",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(x1) & ~lst(x2) & ~lst(tuple0)) where x1 = tuple0 | (any, lst(x1)) and x2 = any, 'a & (lst(x2) | lst(tuple0))"
      ],
      [
        "'a \\ (lst(x1) & ~lst(x2) & ~lst(tuple0)) where x1 = tuple0 | (any, lst(x1)) and x2 = any, 'a & (lst(x2) | lst(tuple0))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "('b & (lst(any, x1) | lst(tuple0)) | 'a & (lst(any, x1) | lst(tuple0)) -> any) | 'c where x1 = 'b & (lst(any, x1) | lst(tuple0))"
      ],
      [
        "('b & (lst(any, x1) | lst(tuple0)) | 'a & (lst(any, x1) | lst(tuple0)) -> any) | 'c where x1 = 'b & (lst(any, x1) | lst(tuple0))",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "(int -> 'a & lst(tuple0) -> int | 'c) | 'b" ],
      [ "(int -> 'a & lst(tuple0) -> int | 'c) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "('a & lst(tuple0) -> int | 'c) | 'b" ],
      [ "('a & lst(tuple0) -> int | 'c) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'b & (lst(x1) | lst(tuple0)) | 'a where x1 = any, 'b & (lst(x1) | lst(tuple0))"
      ],
      [
        "'b & (lst(x1) | lst(tuple0)) | 'a where x1 = any, 'b & (lst(x1) | lst(tuple0))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "(int -> 'c & (lst(any, x1) | lst(tuple0)) | 'a & (lst(any, x1) | lst(tuple0)) -> int | 'd) | 'b where x1 = 'c & (lst(any, x1) | lst(tuple0))"
      ],
      [
        "(int -> 'c & (lst(any, x1) | lst(tuple0)) | 'a & (lst(any, x1) | lst(tuple0)) -> int | 'd) | 'b where x1 = 'c & (lst(any, x1) | lst(tuple0))",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(x2) & ~lst(x1) & ~lst(tuple0)) where x1 = any, 'a & (lst(x1) | lst(tuple0)) and x2 = tuple0 | (any, lst(x2))"
      ],
      [
        "'a \\ (lst(x1) & ~lst(x2) & ~lst(tuple0)) where x1 = tuple0 | (any, lst(x1)) and x2 = any, 'a & (lst(x2) | lst(tuple0))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "('b & (lst(any, x1) | lst(tuple0)) | 'a & (lst(any, x1) | lst(tuple0)) -> int | 'd) | 'c where x1 = 'b & (lst(any, x1) | lst(tuple0))"
      ],
      [
        "('b & (lst(any, x1) | lst(tuple0)) | 'a & (lst(any, x1) | lst(tuple0)) -> int | 'd) | 'c where x1 = 'b & (lst(any, x1) | lst(tuple0))",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int -> lst(tuple0) -> int",
        "int -> lst(any, x1) | lst(tuple0) -> int where x1 = lst(any, x1) | lst(tuple0)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int -> lst(any, x1) | lst(tuple0) -> any where x1 = lst(any, x1) | lst(tuple0)",
        "int -> lst(any, x1) | lst(tuple0) -> int where x1 = lst(any, x1) | lst(tuple0)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int -> lst(any, x1) | lst(tuple0) -> int where x1 = lst(any, x1) | lst(tuple0)",
        "int -> lst(tuple0) -> int"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int -> lst(any, x1) | lst(tuple0) -> int where x1 = lst(any, x1) | lst(tuple0)",
        "int -> lst(any, x1) | lst(tuple0) -> any where x1 = lst(any, x1) | lst(tuple0)"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "int -> x1 -> int where x1 = lst(tuple0 | (any, x1))", "0 -> 'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "(x1 -> int) | 'a where x1 = lst(tuple0 | (any, x1))" ],
      [ "(x1 -> int) | 'a where x1 = lst(tuple0 | (any, x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [ "x1 -> int where x1 = lst(tuple0 | (any, x1))", "'a -> 'b" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a & lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "empty" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [ "'a & lst(x1) -> int where x1 = tuple0 | (any, lst(x1))", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b", "('a & lst(x1) -> int) | 'b where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "('a & lst(x1) -> int) | 'b where x1 = tuple0 | (any, lst(x1))", "'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "str(enum) -> empty", "str(_hd) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a \\ lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a & (lst(any, x1) | lst(tuple0)) where x1 = lst(tuple0 | (any, x1))"
      ],
      [
        "'a & (lst(any, x1) | lst(tuple0)) where x1 = lst(tuple0 | (any, x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(any, x1) where x1 = lst(tuple0 | (any, x1))",
        "lst('b, x1) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(any, x1) \\ lst('b, x1)) where x1 = lst(tuple0 | (any, x1))"
      ],
      [
        "'a \\ (lst(any, x1) \\ lst('b, x1)) where x1 = lst(tuple0 | (any, x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "'a & (lst('c, x1) | lst(tuple0)) -> 'c where x1 = lst(tuple0 | (any, x1))",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "('a & (lst('c, x1) | lst(tuple0)) -> 'c) | 'b where x1 = lst(tuple0 | (any, x1))"
      ],
      [
        "('a & (lst('c, x1) | lst(tuple0)) -> 'c) | 'b where x1 = lst(tuple0 | (any, x1))",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a", "lst(any, x1) where x1 = lst(tuple0 | (any, x1))" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & lst(any, x1) where x1 = lst(tuple0 | (any, x1))" ],
      [ "'a & lst(any, x1) where x1 = lst(tuple0 | (any, x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(any, x1) where x1 = lst(tuple0 | (any, x1))",
        "lst('b, x1) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(any, x1) \\ lst('b, x1)) where x1 = lst(tuple0 | (any, x1))"
      ],
      [
        "'a \\ (lst(any, x1) \\ lst('b, x1)) where x1 = lst(tuple0 | (any, x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "'a & lst('c, x1) -> 'c where x1 = lst(tuple0 | (any, x1))", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "('a & lst('c, x1) -> 'c) | 'b where x1 = lst(tuple0 | (any, x1))"
      ],
      [
        "('a & lst('c, x1) -> 'c) | 'b where x1 = lst(tuple0 | (any, x1))",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "str(enum) -> empty", "str(_tl) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a \\ lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a & (lst(any, x1) | lst(tuple0)) where x1 = lst(tuple0 | (any, x1))"
      ],
      [
        "'a & (lst(any, x1) | lst(tuple0)) where x1 = lst(tuple0 | (any, x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(any, x1) where x1 = lst(tuple0 | (any, x1))",
        "lst(any, 'b & lst(x1)) where x1 = tuple0 | (any, lst(x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(any, lst(x1)) \\ lst(any, 'b & lst(x1))) where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "'a \\ (lst(any, lst(x1)) \\ lst(any, 'b & lst(x1))) where x1 = tuple0 | (any, lst(x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "'a & (lst(any, 'c & lst(x1)) | lst(tuple0)) -> 'c & lst(x1) where x1 = tuple0 | (any, lst(x1))",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "('a & (lst(any, 'c & lst(x1)) | lst(tuple0)) -> 'c & lst(x1)) | 'b where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "('a & (lst(any, 'c & lst(x1)) | lst(tuple0)) -> 'c & lst(x1)) | 'b where x1 = tuple0 | (any, lst(x1))",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a", "lst(any, x1) where x1 = lst(tuple0 | (any, x1))" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & lst(any, x1) where x1 = lst(tuple0 | (any, x1))" ],
      [ "'a & lst(any, x1) where x1 = lst(tuple0 | (any, x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(any, x1) where x1 = lst(tuple0 | (any, x1))",
        "lst(any, 'b & lst(x1)) where x1 = tuple0 | (any, lst(x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(any, lst(x1)) \\ lst(any, 'b & lst(x1))) where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "'a \\ (lst(any, lst(x1)) \\ lst(any, 'b & lst(x1))) where x1 = tuple0 | (any, lst(x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(any, 'c & lst(x1)) -> 'c & lst(x1) where x1 = tuple0 | (any, lst(x1))",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "('a & lst(any, 'c & lst(x1)) -> 'c & lst(x1)) | 'b where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "('a & lst(any, 'c & lst(x1)) -> 'c & lst(x1)) | 'b where x1 = tuple0 | (any, lst(x1))",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('b, 'b) -> bool(true | false)", "'a -> ~bool(true)" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('b, 'b) -> bool(true | false)", "'a -> bool(true)" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "str(enum) -> empty", "str(_nth) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a \\ lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a & (lst(any, x1) | lst(tuple0)) where x1 = lst(tuple0 | (any, x1))"
      ],
      [
        "'a & (lst(any, x1) | lst(tuple0)) where x1 = lst(tuple0 | (any, x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(any, x1) where x1 = lst(tuple0 | (any, x1))",
        "lst(any, 'b & lst(x1)) where x1 = tuple0 | (any, lst(x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(any, lst(x1)) \\ lst(any, 'b & lst(x1))) where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "'a \\ (lst(any, lst(x1)) \\ lst(any, 'b & lst(x1))) where x1 = tuple0 | (any, lst(x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(any, 'b & lst(x1)) where x1 = tuple0 | (any, lst(x1))",
        "lst('c, x1) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(any, 'b & lst(x2)) \\ lst('c, x1)) where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2))"
      ],
      [
        "'a \\ (lst(any, 'b & lst(x2)) \\ lst('c, x1)) where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a", "any" ], [ "0", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "('b, 'b) -> bool(true | false)", "('a, 0) -> 'c" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "0 | 'b | 'a" ], [ "0 | 'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "bool(true | false)", "empty" ] ] },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "'a", "'b & lst(x1) -> 'c where x1 = tuple0 | (any, lst(x1))" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'a", "'a & ('b & lst(x1) -> 'c) where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "'a & ('b & lst(x1) -> 'c) where x1 = tuple0 | (any, lst(x1))", "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a", "any" ], [ "1", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "('a, 1) -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "empty" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a", "int -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & (int -> 'b)" ], [ "'a & (int -> 'b)", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g" ],
    "mono": [],
    "constr": [
      [
        "'b & (lst('e, x1) & lst(any, 'd & lst(x2)) | lst(tuple0)) -> 'a & int -> 'g | 'e where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2))",
        "'c & ('d & lst(x1) -> 'f & (int -> 'g)) where x1 = tuple0 | (any, lst(x1))"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'b & (lst(x2) & lst(x3) | lst(tuple0)) | 'a where x1 = lst(tuple0 | (any, x1)) and x2 = 'd & 'c, x1 and x3 = any, 'b & (lst(x2) & lst(x3) | lst(tuple0))"
      ],
      [
        "'b & (lst(x2) & lst(x3) | lst(tuple0)) | 'a where x1 = lst(tuple0 | (any, x1)) and x2 = 'd & 'c, x1 and x3 = any, 'b & (lst(x2) & lst(x3) | lst(tuple0))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "('c & (lst(x2) & lst(any, x4) | lst(tuple0)) | 'a & (lst(x2) & lst(any, x4) | lst(tuple0)) -> int -> 'e) | 'b where x1 = lst(tuple0 | (any, x1)) and x2 = 'e & 'd, x1 and x3 = lst(tuple0 | (any, x3)) and x4 = 'c & (lst('e & 'd, x3) & lst(any, x4) | lst(tuple0))"
      ],
      [
        "('c & (lst(x4) & lst(any, x2) | lst(tuple0)) | 'a & (lst(x4) & lst(any, x2) | lst(tuple0)) -> int -> 'e) | 'b where x1 = lst(tuple0 | (any, x1)) and x2 = 'c & (lst('e & 'd, x1) & lst(any, x2) | lst(tuple0)) and x3 = lst(tuple0 | (any, x3)) and x4 = 'e & 'd, x3",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(x4) & ~lst(x3) & ~lst(tuple0) | lst(x4) & ~lst(x2) & ~lst(tuple0)) where x1 = lst(tuple0 | (any, x1)) and x2 = 'c & 'b, x1 and x3 = any, 'a & (lst(x2) & lst(x3) | lst(tuple0)) and x4 = tuple0 | (any, lst(x4))"
      ],
      [
        "'a \\ (lst(x4) & ~lst(x3) & ~lst(tuple0) | lst(x4) & ~lst(x2) & ~lst(tuple0)) where x1 = lst(tuple0 | (any, x1)) and x2 = 'c & 'b, x1 and x3 = any, 'a & (lst(x2) & lst(x3) | lst(tuple0)) and x4 = tuple0 | (any, lst(x4))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'b & 'a" ], [ "'b & 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "(int -> 'b) | 'a" ], [ "(int -> 'b) | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'b & (lst(x2) & lst('c, x1) | lst(tuple0)) | 'a where x1 = lst(tuple0 | (any, x1)) and x2 = any, 'b & (lst(x2) & lst('c, x1) | lst(tuple0))"
      ],
      [
        "'b & (lst(x1) & lst('c, x2) | lst(tuple0)) | 'a where x1 = any, 'b & (lst(x1) & lst('c, x2) | lst(tuple0)) and x2 = lst(tuple0 | (any, x2))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "('c & (lst(any, x2) & lst('d, x3) | lst(tuple0)) | 'a & (lst(any, x2) & lst('d, x3) | lst(tuple0)) -> int -> any) | 'b where x1 = lst(tuple0 | (any, x1)) and x2 = 'c & (lst(any, x2) & lst('d, x1) | lst(tuple0)) and x3 = lst(tuple0 | (any, x3))"
      ],
      [
        "('c & (lst(any, x3) & lst('d, x1) | lst(tuple0)) | 'a & (lst(any, x3) & lst('d, x1) | lst(tuple0)) -> int -> any) | 'b where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = 'c & (lst(any, x3) & lst('d, x2) | lst(tuple0))",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(x1) & ~lst('b, x2) & ~lst(tuple0) | lst(x1) & ~lst(x3) & ~lst(tuple0)) where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = any, 'a & (lst(x3) & lst('b, x2) | lst(tuple0))"
      ],
      [
        "'a \\ (lst(x1) & ~lst('b, x2) & ~lst(tuple0) | lst(x1) & ~lst(x3) & ~lst(tuple0)) where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = any, 'a & (lst(x3) & lst('b, x2) | lst(tuple0))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "(int -> any) | 'a" ], [ "(int -> any) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'c" ],
    "constr": [
      [ "'c", "('b & lst(tuple0) -> 'a & int -> 'e | 'd) | 'c" ],
      [ "('b & lst(tuple0) -> 'a & int -> 'e | 'd) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "lst(any, x1) | lst(tuple0) -> int -> any where x1 = lst(tuple0 | (any, x1))",
        "lst(tuple0) -> int -> empty"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "lst(any, x3) & lst('a, x1) | lst(tuple0) -> int -> 'a where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = lst(any, x3) & lst('a, x2) | lst(tuple0)",
        "lst(tuple0) -> int -> empty"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "lst(any, x3) & lst('a, x1) | lst(tuple0) -> int -> 'a where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = lst(any, x3) & lst('a, x2) | lst(tuple0)",
        "lst(any, x1) | lst(tuple0) -> int -> any where x1 = lst(tuple0 | (any, x1))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('b, 'b) -> bool(true | false)", "'a -> ~bool(true)" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('b, 'b) -> bool(true | false)", "'a -> bool(true)" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a", "any" ], [ "0", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "('b, 'b) -> bool(true | false)", "('a, 0) -> 'c" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "0 | 'b | 'a" ], [ "0 | 'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "bool(true | false)", "empty" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "str(enum) -> empty", "str(_nth) -> 'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "x1 -> int -> 'b where x1 = lst(tuple0 | ('b, x1))", "'a -> 'c" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & lst(x1) where x1 = tuple0 | ('b, lst(x1))" ],
      [ "'a & lst(x1) where x1 = tuple0 | ('b, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [ [ "'b", "(int -> 'a) | 'b" ], [ "(int -> 'a) | 'b", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  { "vars": [ "'a" ], "mono": [], "constr": [ [ "int -> 'a", "empty" ] ] },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "int -> 'b", "'a -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "'a", "empty" ] ] },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [
        "'b & lst(x1) -> 'a & int -> 'd where x1 = tuple0 | ('d, lst(x1))",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "('b & lst(x1) -> 'a & int -> 'd) | 'c where x1 = tuple0 | ('d, lst(x1))"
      ],
      [
        "('b & lst(x1) -> 'a & int -> 'd) | 'c where x1 = tuple0 | ('d, lst(x1))",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a \\ lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a & (lst(any, x1) | lst(tuple0)) where x1 = lst(tuple0 | (any, x1))"
      ],
      [
        "'a & (lst(any, x1) | lst(tuple0)) where x1 = lst(tuple0 | (any, x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(any, x1) where x1 = lst(tuple0 | (any, x1))",
        "lst(any, 'b & lst(x1)) where x1 = tuple0 | (any, lst(x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(any, lst(x1)) \\ lst(any, 'b & lst(x1))) where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "'a \\ (lst(any, lst(x1)) \\ lst(any, 'b & lst(x1))) where x1 = tuple0 | (any, lst(x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(any, 'b & lst(x1)) where x1 = tuple0 | (any, lst(x1))",
        "lst('c, x1) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(any, 'b & lst(x2)) \\ lst('c, x1)) where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2))"
      ],
      [
        "'a \\ (lst(any, 'b & lst(x2)) \\ lst('c, x1)) where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "'a", "'b & lst(x1) -> 'c where x1 = tuple0 | (any, lst(x1))" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'a", "'a & ('b & lst(x1) -> 'c) where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "'a & ('b & lst(x1) -> 'c) where x1 = tuple0 | (any, lst(x1))", "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'b", "'a -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b & ('a -> 'c)" ], [ "'b & ('a -> 'c)", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [ "'a", "any" ], [ "'b", "x1 where x1 = lst(tuple0 | (any, x1))" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a & lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g" ],
    "mono": [],
    "constr": [
      [
        "'b & (lst('e, x1) & lst(any, 'd & lst(x2)) | lst(tuple0)) -> ('a -> lst('e, 'g & lst(x3))) | ('a -> 'a) where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = tuple0 | (any, lst(x3))",
        "'c & ('d & lst(x1) -> 'f & ('a -> 'g & lst(x2))) where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, lst(x2))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a & lst(x2) | 'c & 'a & lst(x3) where x1 = tuple0 | (any, lst(x1)) and x2 = 'b, lst(x2) | 'c & lst(x1) and x3 = tuple0 | (any, lst(x3))"
      ],
      [
        "'a & lst(x3) | 'c & 'a & lst(x2) where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = 'b, lst(x3) | 'c & lst(x1)",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'b & (lst(x2) & lst('c, x1) | lst(tuple0)) | 'a where x1 = lst(tuple0 | (any, x1)) and x2 = any, 'b & (lst(x2) & lst('c, x1) | lst(tuple0))"
      ],
      [
        "'b & (lst(x2) & lst('c, x1) | lst(tuple0)) | 'a where x1 = lst(tuple0 | (any, x1)) and x2 = any, 'b & (lst(x2) & lst('c, x1) | lst(tuple0))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "('d & (lst(any, x7) & lst('e, x8) | lst(tuple0)) | 'b & (lst(any, x7) & lst('e, x8) | lst(tuple0)) -> (x5 -> x5) | (x5 -> lst('e, lst(x3) | 'f & lst(x1)))) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = 'e, lst(x3) | 'f & lst(x2) and x4 = tuple0 | (any, lst(x4)) and x5 = 'a & lst(x3) | 'f & 'a & lst(x4) and x6 = lst(tuple0 | (any, x6)) and x7 = 'd & (lst(any, x7) & lst('e, x6) | lst(tuple0)) and x8 = lst(tuple0 | (any, x8))"
      ],
      [
        "('d & (lst(any, x4) & lst('e, x5) | lst(tuple0)) | 'b & (lst(any, x4) & lst('e, x5) | lst(tuple0)) -> (x8 -> x8) | (x8 -> lst('e, lst(x7) | 'f & lst(x1)))) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = tuple0 | (any, lst(x3)) and x4 = 'd & (lst(any, x4) & lst('e, x2) | lst(tuple0)) and x5 = lst(tuple0 | (any, x5)) and x6 = tuple0 | (any, lst(x6)) and x7 = 'e, lst(x7) | 'f & lst(x3) and x8 = 'a & lst(x7) | 'f & 'a & lst(x6)",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(x2) & ~lst('b, x1) & ~lst(tuple0) | lst(x2) & ~lst(x3) & ~lst(tuple0)) where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = any, 'a & (lst(x3) & lst('b, x1) | lst(tuple0))"
      ],
      [
        "'a \\ (lst(x2) & ~lst('b, x1) & ~lst(tuple0) | lst(x2) & ~lst(x3) & ~lst(tuple0)) where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = any, 'a & (lst(x3) & lst('b, x1) | lst(tuple0))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "(x5 -> x5) | (x5 -> lst('b, lst(x4) | 'd & lst(x1))) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = tuple0 | (any, lst(x3)) and x4 = 'b, lst(x4) | 'd & lst(x3) and x5 = 'a & lst(x4) | 'd & 'a & lst(x2)"
      ],
      [
        "(x4 -> x4) | (x4 -> lst('b, lst(x5) | 'd & lst(x1))) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = tuple0 | (any, lst(x3)) and x4 = 'a & lst(x5) | 'd & 'a & lst(x3) and x5 = 'b, lst(x5) | 'd & lst(x2)",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "lst(x2) | 'b where x1 = tuple0 | (any, lst(x1)) and x2 = 'a, lst(x2) | 'b & lst(x1)"
      ],
      [
        "lst(x2) | 'b where x1 = tuple0 | (any, lst(x1)) and x2 = 'a, lst(x2) | 'b & lst(x1)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'b & (lst(x2) & lst('c, x1) | lst(tuple0)) | 'a where x1 = lst(tuple0 | (any, x1)) and x2 = any, 'b & (lst(x2) & lst('c, x1) | lst(tuple0))"
      ],
      [
        "'b & (lst(x2) & lst('c, x1) | lst(tuple0)) | 'a where x1 = lst(tuple0 | (any, x1)) and x2 = any, 'b & (lst(x2) & lst('c, x1) | lst(tuple0))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "('c & (lst(any, x3) & lst('d, x1) | lst(tuple0)) | 'a & (lst(any, x3) & lst('d, x1) | lst(tuple0)) -> arrow) | 'b where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = 'c & (lst(any, x3) & lst('d, x2) | lst(tuple0))"
      ],
      [
        "('c & (lst(any, x2) & lst('d, x3) | lst(tuple0)) | 'a & (lst(any, x2) & lst('d, x3) | lst(tuple0)) -> arrow) | 'b where x1 = lst(tuple0 | (any, x1)) and x2 = 'c & (lst(any, x2) & lst('d, x1) | lst(tuple0)) and x3 = lst(tuple0 | (any, x3))",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(x2) & ~lst('b, x1) & ~lst(tuple0) | lst(x2) & ~lst(x3) & ~lst(tuple0)) where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = any, 'a & (lst(x3) & lst('b, x1) | lst(tuple0))"
      ],
      [
        "'a \\ (lst(x2) & ~lst('b, x3) & ~lst(tuple0) | lst(x2) & ~lst(x1) & ~lst(tuple0)) where x1 = any, 'a & (lst(x1) & lst('b, x3) | lst(tuple0)) and x2 = tuple0 | (any, lst(x2)) and x3 = lst(tuple0 | (any, x3))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "arrow | 'a" ], [ "arrow | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "('b & lst(tuple0) -> ('a -> lst('d, 'e & lst(x1))) | ('a -> 'a)) | 'c where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "('b & lst(tuple0) -> ('a -> lst('d, 'e & lst(x1))) | ('a -> 'a)) | 'c where x1 = tuple0 | (any, lst(x1))",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "lst(any, x1) | lst(tuple0) -> arrow where x1 = lst(tuple0 | (any, x1))",
        "lst(tuple0) -> 'a -> 'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "lst(any, x2) & lst('b, x9) | lst(tuple0) -> (x5 -> lst('b, lst(x7) | 'c & lst(x8))) | (x5 -> x5) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(any, x2) & lst('b, x1) | lst(tuple0) and x3 = tuple0 | (any, lst(x3)) and x4 = 'b, lst(x4) | 'c & lst(x6) and x5 = 'a & lst(x4) | 'c & 'a & lst(x3) and x6 = tuple0 | (any, lst(x6)) and x7 = 'b, lst(x7) | 'c & lst(x6) and x8 = tuple0 | (any, lst(x8)) and x9 = lst(tuple0 | (any, x9))",
        "lst(tuple0) -> 'a -> 'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "lst(tuple0) -> 'a -> 'a",
        "lst(any, x1) | lst(tuple0) -> arrow where x1 = lst(tuple0 | (any, x1))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "lst(any, x4) & lst('b, x9) | lst(tuple0) -> (x8 -> lst('b, lst(x2) | 'c & lst(x3))) | (x8 -> x8) where x1 = lst(tuple0 | (any, x1)) and x2 = 'b, lst(x2) | 'c & lst(x5) and x3 = tuple0 | (any, lst(x3)) and x4 = lst(any, x4) & lst('b, x1) | lst(tuple0) and x5 = tuple0 | (any, lst(x5)) and x6 = 'b, lst(x6) | 'c & lst(x5) and x7 = tuple0 | (any, lst(x7)) and x8 = 'a & lst(x6) | 'c & 'a & lst(x7) and x9 = lst(tuple0 | (any, x9))",
        "lst(any, x1) | lst(tuple0) -> arrow where x1 = lst(tuple0 | (any, x1))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [
        "lst(tuple0) -> 'a -> 'a",
        "lst(any, x2) & lst('b, x3) | lst(tuple0) -> (x9 -> lst('b, lst(x4) | 'c & lst(x6))) | (x9 -> x9) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(any, x2) & lst('b, x1) | lst(tuple0) and x3 = lst(tuple0 | (any, x3)) and x4 = 'b, lst(x4) | 'c & lst(x5) and x5 = tuple0 | (any, lst(x5)) and x6 = tuple0 | (any, lst(x6)) and x7 = tuple0 | (any, lst(x7)) and x8 = 'b, lst(x8) | 'c & lst(x5) and x9 = 'a & lst(x8) | 'c & 'a & lst(x7)"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a", "tuple2" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & tuple2" ], [ "'a & tuple2", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a & tuple2", "any, 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ (tuple2 \\ (any, 'b))" ],
      [ "'a \\ (tuple2 \\ (any, 'b))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'a & (any, 'b)", "'c, any" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'a", "'a \\ ((any, 'b) \\ ('c, any))" ],
      [ "'a \\ ((any, 'b) \\ ('c, any))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [
      [
        "(x4 -> (x3 -> lst(x2)) | (x3 -> x3)) & (lst(tuple0) -> 'b -> 'b) where x1 = tuple0 | (any, lst(x1)) and x2 = 'c, lst(x2) | 'd & lst(x1) and x3 = 'b & lst(x2) | 'd & 'b & lst(x1) and x4 = lst(tuple0 | ('c, x4))",
        "'a -> 'e"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & lst(x1) where x1 = tuple0 | ('b, lst(x1))" ],
      [ "'a & lst(x1) where x1 = tuple0 | ('b, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'d" ],
    "constr": [
      [
        "'d",
        "(x2 -> lst(x3)) | (x2 -> x2) | 'd where x1 = tuple0 | (any, lst(x1)) and x2 = 'a & lst(x3) | 'c & 'a & lst(x1) and x3 = 'b, lst(x3) | 'c & lst(x1)"
      ],
      [
        "(x1 -> lst(x3)) | (x1 -> x1) | 'd where x1 = 'a & lst(x3) | 'c & 'a & lst(x2) and x2 = tuple0 | (any, lst(x2)) and x3 = 'b, lst(x3) | 'c & lst(x2)",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & lst(tuple0)" ], [ "'a & lst(tuple0)", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'d" ],
    "constr": [
      [
        "'d",
        "(x3 -> x3) & ('a -> 'a) | 'd where x1 = tuple0 | (any, lst(x1)) and x2 = 'b, lst(x2) | 'c & lst(x1) and x3 = 'a & lst(x2) | 'c & 'a & lst(x1)"
      ],
      [
        "(x3 -> x3) & ('a -> 'a) | 'd where x1 = 'b, lst(x1) | 'c & lst(x2) and x2 = tuple0 | (any, lst(x2)) and x3 = 'a & lst(x1) | 'c & 'a & lst(x2)",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "(x3 -> x3) & ('a -> 'a) where x1 = tuple0 | (any, lst(x1)) and x2 = 'b, lst(x2) | 'c & lst(x1) and x3 = 'a & lst(x2) | 'c & 'a & lst(x1)",
        "empty"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "(x3 -> lst(x1)) | (x3 -> x3) where x1 = 'b, lst(x1) | 'c & lst(x2) and x2 = tuple0 | (any, lst(x2)) and x3 = 'a & lst(x1) | 'c & 'a & lst(x2)",
        "empty"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [
        "(x3 -> lst(x1)) | (x3 -> x3) where x1 = 'b, lst(x1) | 'c & lst(x2) and x2 = tuple0 | (any, lst(x2)) and x3 = 'a & lst(x1) | 'c & 'a & lst(x2)",
        "(x3 -> x3) & ('a -> 'a) where x1 = 'b, lst(x1) | 'c & lst(x2) and x2 = tuple0 | (any, lst(x2)) and x3 = 'a & lst(x1) | 'c & 'a & lst(x2)"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [
      [
        "(x3 -> x3) & ('b -> 'b) where x1 = tuple0 | (any, lst(x1)) and x2 = 'c, lst(x2) | 'd & lst(x1) and x3 = 'b & lst(x2) | 'd & 'b & lst(x1)",
        "'a -> 'e"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'c & 'b | 'a" ], [ "'c & 'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a & lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "'b & ~'d & ~lst(x1) | 'b \\ lst(x2) | 'e & 'b | 'a & lst(x3) where x1 = 'c, lst(x1) | 'd & lst(x2) | 'a & lst(x2) and x2 = tuple0 | (any, lst(x2)) and x3 = tuple0 | (any, lst(x3))"
      ],
      [
        "'b & ~'d & ~lst(x2) | 'b \\ lst(x1) | 'e & 'b | 'a & lst(x3) where x1 = tuple0 | (any, lst(x1)) and x2 = 'c, lst(x2) | 'd & lst(x1) | 'a & lst(x1) and x3 = tuple0 | (any, lst(x3))",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "'a & lst(x3) & ~lst(x2) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = 'b, lst(x2) | 'c & lst(x1) | 'a & lst(x1) and x3 = tuple0 | (any, lst(x3))"
      ],
      [
        "'a & lst(x3) & ~lst(x2) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = 'b, lst(x2) | 'c & lst(x1) | 'a & lst(x1) and x3 = tuple0 | (any, lst(x3))",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "'a & lst(x1) | 'b where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a & lst(x1) | 'b where x1 = tuple0 | (any, lst(x1))", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a & lst(x1) where x1 = tuple0 | (any, lst(x1))",
        "'a & lst(x1) where x1 = tuple0 | (any, lst(x1))"
      ]
    ]
  },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "any", "'a" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "empty", "empty" ] ] },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "'a", "any" ] ] },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [
      [
        "(x3 -> lst(x1)) | (x3 -> x3) where x1 = 'c, lst(x1) | 'd & lst(x2) and x2 = tuple0 | (any, lst(x2)) and x3 = 'b & lst(x1) | 'd & 'b & lst(x2)",
        "'a -> 'e"
      ]
    ],
    "prio": [ "'a", "'c" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a & lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "'a & lst(x1) | 'b where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a & lst(x1) | 'b where x1 = tuple0 | (any, lst(x1))", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [
        "'c",
        "'a & lst(x3) & ~lst(x2) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = 'b, lst(x2) | 'c & lst(x1) | 'a & lst(x1) and x3 = tuple0 | (any, lst(x3))"
      ],
      [
        "'a & lst(x3) & ~lst(x2) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = 'b, lst(x2) | 'c & lst(x1) | 'a & lst(x1) and x3 = tuple0 | (any, lst(x3))",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a & lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [
        "'b",
        "'b \\ 'd | 'b \\ (lst(x3) \\ lst(x4)) | 'e & 'b | 'a & lst(x1) where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = tuple0 | (any, lst(x3)) and x4 = 'c, lst(x4) | 'd & lst(x2) | 'a & lst(x2)"
      ],
      [
        "'b \\ 'd | 'b \\ (lst(x3) \\ lst(x4)) | 'e & 'b | 'a & lst(x1) where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = tuple0 | (any, lst(x3)) and x4 = 'c, lst(x4) | 'd & lst(x2) | 'a & lst(x2)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [
        "'c",
        "'a & lst(x1) & ~lst(x3) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = 'b, lst(x3) | 'c & lst(x2) | 'a & lst(x2)"
      ],
      [
        "'a & lst(x1) & ~lst(x3) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = 'b, lst(x3) | 'c & lst(x2) | 'a & lst(x2)",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b", "'d" ],
    "constr": [
      [
        "'d",
        "lst(x2) | 'a & lst(x1) | 'd where x1 = tuple0 | (any, lst(x1)) and x2 = 'b, lst(x2) | 'c & lst(x1) | 'a & lst(x1)"
      ],
      [
        "lst(x2) | 'a & lst(x1) | 'd where x1 = tuple0 | (any, lst(x1)) and x2 = 'b, lst(x2) | 'c & lst(x1) | 'a & lst(x1)",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "any",
        "x2 where x1 = tuple0 | (any, lst(x1)) and x2 = lst('b, x2) | 'a & lst(x1)"
      ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "empty", "empty" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "x2 where x1 = tuple0 | (any, lst(x1)) and x2 = lst('b, x2) | 'a & lst(x1)",
        "any"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [
      [
        "('a & ('d & lst(x4), any) & (any, 'c & lst(x3)) -> x2) & ('a & ('d & lst(tuple0), any) & (any, 'c) -> 'c) where x1 = tuple0 | (any, lst(x1)) and x2 = lst('e, x2) | 'c & lst(x1) and x3 = tuple0 | (any, lst(x3)) and x4 = tuple0 | ('e, lst(x4))",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "('a & ('d & lst(x4), any) & (any, 'c & lst(x3)) -> x2) & ('a & ('d & lst(tuple0), any) & (any, 'c) -> 'c) | 'b where x1 = tuple0 | (any, lst(x1)) and x2 = lst('e, x2) | 'c & lst(x1) and x3 = tuple0 | (any, lst(x3)) and x4 = tuple0 | ('e, lst(x4))"
      ],
      [
        "('a & ('d & lst(x2), any) & (any, 'c & lst(x1)) -> x4) & ('a & ('d & lst(tuple0), any) & (any, 'c) -> 'c) | 'b where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | ('e, lst(x2)) and x3 = tuple0 | (any, lst(x3)) and x4 = lst('e, x4) | 'c & lst(x3)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a \\ lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a & (lst(any, x1) | lst(tuple0)) where x1 = lst(tuple0 | (any, x1))"
      ],
      [
        "'a & (lst(any, x1) | lst(tuple0)) where x1 = lst(tuple0 | (any, x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(any, x1) where x1 = lst(tuple0 | (any, x1))",
        "lst(any, 'b & lst(x1)) where x1 = tuple0 | (any, lst(x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(any, lst(x1)) \\ lst(any, 'b & lst(x1))) where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "'a \\ (lst(any, lst(x1)) \\ lst(any, 'b & lst(x1))) where x1 = tuple0 | (any, lst(x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(any, 'b & lst(x1)) where x1 = tuple0 | (any, lst(x1))",
        "lst('c, x1) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(any, 'b & lst(x1)) \\ lst('c, x2)) where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2))"
      ],
      [
        "'a \\ (lst(any, 'b & lst(x2)) \\ lst('c, x1)) where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "'a", "'b & lst(x1) -> 'c where x1 = tuple0 | (any, lst(x1))" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'a", "'a & ('b & lst(x1) -> 'c) where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "'a & ('b & lst(x1) -> 'c) where x1 = tuple0 | (any, lst(x1))", "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [ "'b", "any" ], [ "'a", "x1 where x1 = lst(tuple0 | (any, x1))" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a & lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [
        "'c",
        "lst('b, 'a & lst(x1)) -> 'd where x1 = tuple0 | (any, lst(x1))"
      ]
    ],
    "prio": [ "'a", "'b", "'c" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [
        "'c",
        "'c & (lst('b, 'a & lst(x1)) -> 'd) where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "'c & (lst('b, 'a & lst(x1)) -> 'd) where x1 = tuple0 | (any, lst(x1))",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g" ],
    "mono": [],
    "constr": [
      [
        "'b & (lst('e, x2) & lst(any, 'd & lst(x1)) | lst(tuple0)) -> ('a & lst(x3) -> 'g) | ('a -> 'a) where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = tuple0 | (any, lst(x3))",
        "'c & ('d & lst(x2) -> 'f & (lst('e, 'a & lst(x1)) -> 'g)) where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, lst(x2))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'b & lst(tuple0) | 'a" ], [ "'b & lst(tuple0) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "('d & lst(tuple0) | 'b & lst(tuple0) -> ('a & lst(x1) -> 'e) | ('a -> 'a)) | 'c where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "('d & lst(tuple0) | 'b & lst(tuple0) -> ('a & lst(x1) -> 'e) | ('a -> 'a)) | 'c where x1 = tuple0 | (any, lst(x1))",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(x1) \\ lst(tuple0)) where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "'a \\ (lst(x1) \\ lst(tuple0)) where x1 = tuple0 | (any, lst(x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "('a & lst(x1) -> 'c) | ('a -> 'a) | 'b where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "('a & lst(x1) -> 'c) | ('a -> 'a) | 'b where x1 = tuple0 | (any, lst(x1))",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "lst(x2) | 'a where x1 = tuple0 | (any, lst(x1)) and x2 = 'b, lst(x2) | 'a & lst(x1)"
      ],
      [
        "lst(x2) | 'a where x1 = tuple0 | (any, lst(x1)) and x2 = 'b, lst(x2) | 'a & lst(x1)",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'b & (lst(x1) & lst('c, x2) | lst(tuple0)) | 'a where x1 = any, 'b & (lst(x1) & lst('c, x2) | lst(tuple0)) and x2 = lst(tuple0 | (any, x2))"
      ],
      [
        "'b & (lst(x1) & lst('c, x2) | lst(tuple0)) | 'a where x1 = any, 'b & (lst(x1) & lst('c, x2) | lst(tuple0)) and x2 = lst(tuple0 | (any, x2))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "('d & (lst(any, x5) & lst('e, x6) | lst(tuple0)) | 'b & (lst(any, x5) & lst('e, x6) | lst(tuple0)) -> lst(x2) | 'a & lst(x3) -> any) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = 'e, lst(x2) | 'a & lst(x1) and x3 = tuple0 | (any, lst(x3)) and x4 = lst(tuple0 | (any, x4)) and x5 = 'd & (lst(any, x5) & lst('e, x4) | lst(tuple0)) and x6 = lst(tuple0 | (any, x6))"
      ],
      [
        "('d & (lst(any, x4) & lst('e, x1) | lst(tuple0)) | 'b & (lst(any, x4) & lst('e, x1) | lst(tuple0)) -> lst(x6) | 'a & lst(x5) -> any) | 'c where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = lst(tuple0 | (any, x3)) and x4 = 'd & (lst(any, x4) & lst('e, x3) | lst(tuple0)) and x5 = tuple0 | (any, lst(x5)) and x6 = 'e, lst(x6) | 'a & lst(x2)",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(x1) & ~lst('b, x2) & ~lst(tuple0) | lst(x1) & ~lst(x3) & ~lst(tuple0)) where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = any, 'a & (lst(x3) & lst('b, x2) | lst(tuple0))"
      ],
      [
        "'a \\ (lst(x1) & ~lst('b, x2) & ~lst(tuple0) | lst(x1) & ~lst(x3) & ~lst(tuple0)) where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = any, 'a & (lst(x3) & lst('b, x2) | lst(tuple0))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "(lst(x3) | 'a & lst(x1) -> any) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = 'b, lst(x3) | 'a & lst(x2)"
      ],
      [
        "(lst(x3) | 'a & lst(x1) -> any) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = 'b, lst(x3) | 'a & lst(x2)",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'b & (lst(x2) & lst('c, x1) | lst(tuple0)) | 'a where x1 = lst(tuple0 | (any, x1)) and x2 = any, 'b & (lst(x2) & lst('c, x1) | lst(tuple0))"
      ],
      [
        "'b & (lst(x2) & lst('c, x1) | lst(tuple0)) | 'a where x1 = lst(tuple0 | (any, x1)) and x2 = any, 'b & (lst(x2) & lst('c, x1) | lst(tuple0))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "('c & (lst(any, x2) & lst('d, x3) | lst(tuple0)) | 'a & (lst(any, x2) & lst('d, x3) | lst(tuple0)) -> arrow) | 'b where x1 = lst(tuple0 | (any, x1)) and x2 = 'c & (lst(any, x2) & lst('d, x1) | lst(tuple0)) and x3 = lst(tuple0 | (any, x3))"
      ],
      [
        "('c & (lst(any, x2) & lst('d, x3) | lst(tuple0)) | 'a & (lst(any, x2) & lst('d, x3) | lst(tuple0)) -> arrow) | 'b where x1 = lst(tuple0 | (any, x1)) and x2 = 'c & (lst(any, x2) & lst('d, x1) | lst(tuple0)) and x3 = lst(tuple0 | (any, x3))",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(x3) & ~lst('b, x1) & ~lst(tuple0) | lst(x3) & ~lst(x2) & ~lst(tuple0)) where x1 = lst(tuple0 | (any, x1)) and x2 = any, 'a & (lst(x2) & lst('b, x1) | lst(tuple0)) and x3 = tuple0 | (any, lst(x3))"
      ],
      [
        "'a \\ (lst(x3) & ~lst('b, x1) & ~lst(tuple0) | lst(x3) & ~lst(x2) & ~lst(tuple0)) where x1 = lst(tuple0 | (any, x1)) and x2 = any, 'a & (lst(x2) & lst('b, x1) | lst(tuple0)) and x3 = tuple0 | (any, lst(x3))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "arrow | 'a" ], [ "arrow | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "lst(x2) | 'c & 'a where x1 = tuple0 | (any, lst(x1)) and x2 = 'b, lst(x2) | 'c & 'a & lst(x1)"
      ],
      [
        "lst(x2) | 'c & 'a where x1 = tuple0 | (any, lst(x1)) and x2 = 'b, lst(x2) | 'c & 'a & lst(x1)",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'b & (lst(x1) & lst('c, x2) | lst(tuple0)) | 'a where x1 = any, 'b & (lst(x1) & lst('c, x2) | lst(tuple0)) and x2 = lst(tuple0 | (any, x2))"
      ],
      [
        "'b & (lst(x2) & lst('c, x1) | lst(tuple0)) | 'a where x1 = lst(tuple0 | (any, x1)) and x2 = any, 'b & (lst(x2) & lst('c, x1) | lst(tuple0))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "('d & (lst(any, x3) & lst('e, x2) | lst(tuple0)) | 'b & (lst(any, x3) & lst('e, x2) | lst(tuple0)) -> lst(x5) | 'f & 'a & lst(x6) -> lst(x5) | 'f) | 'c where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = 'd & (lst(any, x3) & lst('e, x1) | lst(tuple0)) and x4 = tuple0 | (any, lst(x4)) and x5 = 'e, lst(x5) | 'f & 'a & lst(x4) and x6 = tuple0 | (any, lst(x6))"
      ],
      [
        "('d & (lst(any, x3) & lst('e, x1) | lst(tuple0)) | 'b & (lst(any, x3) & lst('e, x1) | lst(tuple0)) -> lst(x6) | 'f & 'a & lst(x4) -> lst(x6) | 'f) | 'c where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = 'd & (lst(any, x3) & lst('e, x2) | lst(tuple0)) and x4 = tuple0 | (any, lst(x4)) and x5 = tuple0 | (any, lst(x5)) and x6 = 'e, lst(x6) | 'f & 'a & lst(x5)",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(x3) & ~lst('b, x2) & ~lst(tuple0) | lst(x3) & ~lst(x1) & ~lst(tuple0)) where x1 = any, 'a & (lst(x1) & lst('b, x2) | lst(tuple0)) and x2 = lst(tuple0 | (any, x2)) and x3 = tuple0 | (any, lst(x3))"
      ],
      [
        "'a \\ (lst(x3) & ~lst('b, x2) & ~lst(tuple0) | lst(x3) & ~lst(x1) & ~lst(tuple0)) where x1 = any, 'a & (lst(x1) & lst('b, x2) | lst(tuple0)) and x2 = lst(tuple0 | (any, x2)) and x3 = tuple0 | (any, lst(x3))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "(lst(x3) | 'd & 'a & lst(x1) -> lst(x3) | 'd) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = 'b, lst(x3) | 'd & 'a & lst(x2)"
      ],
      [
        "(lst(x2) | 'd & 'a & lst(x3) -> lst(x2) | 'd) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = 'b, lst(x2) | 'd & 'a & lst(x1) and x3 = tuple0 | (any, lst(x3))",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "lst(x2) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = 'b, lst(x2) | 'c & 'a & lst(x1)"
      ],
      [
        "lst(x2) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = 'b, lst(x2) | 'c & 'a & lst(x1)",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "('b & lst(tuple0) -> ('a & lst(x1) -> 'd) | ('a -> 'a)) | 'c where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "('b & lst(tuple0) -> ('a & lst(x1) -> 'd) | ('a -> 'a)) | 'c where x1 = tuple0 | (any, lst(x1))",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "lst(any, x8) & lst('b, x9) | lst(tuple0) -> ~'c & lst(x3) | lst(x2) -> ~'c | lst('b, ~'c & lst(x7) | lst(x6)) where x1 = tuple0 | (any, lst(x1)) and x2 = 'b, ~'c & lst(x1) | lst(x2) and x3 = tuple0 | (any, lst(x3)) and x4 = lst(tuple0 | (any, x4)) and x5 = tuple0 | (any, lst(x5)) and x6 = 'b, ~'c & lst(x5) | lst(x6) and x7 = tuple0 | (any, lst(x7)) and x8 = lst(any, x8) & lst('b, x4) | lst(tuple0) and x9 = lst(tuple0 | (any, x9))",
        "lst(tuple0) -> ('a & lst(x1) -> empty) | ('a -> 'a) where x1 = tuple0 | (any, lst(x1))"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "lst(any, x1) | lst(tuple0) -> arrow where x1 = lst(tuple0 | (any, x1))",
        "lst(tuple0) -> ('a & lst(x1) -> empty) | ('a -> 'a) where x1 = tuple0 | (any, lst(x1))"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "lst(any, x1) | lst(tuple0) -> x2 -> any where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2))",
        "lst(tuple0) -> ('a & lst(x1) -> empty) | ('a -> 'a) where x1 = tuple0 | (any, lst(x1))"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "lst(tuple0) -> ('a & lst(x1) -> empty) | ('a -> 'a) where x1 = tuple0 | (any, lst(x1))",
        "lst(tuple0) -> ('a & lst(x1) -> empty) | ('a -> 'a) where x1 = tuple0 | (any, lst(x1))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "lst(any, x1) | lst(tuple0) -> arrow where x1 = lst(tuple0 | (any, x1))",
        "lst(any, x5) & lst('a, x9) | lst(tuple0) -> ~'b & lst(x8) | lst(x7) -> ~'b | lst('a, ~'b & lst(x3) | lst(x2)) where x1 = tuple0 | (any, lst(x1)) and x2 = 'a, ~'b & lst(x1) | lst(x2) and x3 = tuple0 | (any, lst(x3)) and x4 = lst(tuple0 | (any, x4)) and x5 = lst(any, x5) & lst('a, x4) | lst(tuple0) and x6 = tuple0 | (any, lst(x6)) and x7 = 'a, ~'b & lst(x6) | lst(x7) and x8 = tuple0 | (any, lst(x8)) and x9 = lst(tuple0 | (any, x9))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "lst(any, x1) | lst(tuple0) -> x2 -> any where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2))",
        "lst(any, x6) & lst('a, x9) | lst(tuple0) -> ~'b & lst(x4) | lst(x3) -> ~'b | lst('a, ~'b & lst(x8) | lst(x7)) where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = 'a, ~'b & lst(x2) | lst(x3) and x4 = tuple0 | (any, lst(x4)) and x5 = tuple0 | (any, lst(x5)) and x6 = lst(any, x6) & lst('a, x1) | lst(tuple0) and x7 = 'a, ~'b & lst(x5) | lst(x7) and x8 = tuple0 | (any, lst(x8)) and x9 = lst(tuple0 | (any, x9))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'b", "'c" ],
    "constr": [
      [
        "lst(tuple0) -> ('a & lst(x1) -> empty) | ('a -> 'a) where x1 = tuple0 | (any, lst(x1))",
        "lst(any, x5) & lst('b, x1) | lst(tuple0) -> ~'c & lst(x9) | lst(x3) -> ~'c | lst('b, ~'c & lst(x7) | lst(x8)) where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = 'b, ~'c & lst(x2) | lst(x3) and x4 = lst(tuple0 | (any, x4)) and x5 = lst(any, x5) & lst('b, x4) | lst(tuple0) and x6 = tuple0 | (any, lst(x6)) and x7 = tuple0 | (any, lst(x7)) and x8 = 'b, ~'c & lst(x6) | lst(x8) and x9 = tuple0 | (any, lst(x9))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "lst(any, x2) & lst('a, x9) | lst(tuple0) -> ~'b & lst(x8) | lst(x7) -> ~'b | lst('a, ~'b & lst(x5) | lst(x4)) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(any, x2) & lst('a, x1) | lst(tuple0) and x3 = tuple0 | (any, lst(x3)) and x4 = 'a, ~'b & lst(x3) | lst(x4) and x5 = tuple0 | (any, lst(x5)) and x6 = tuple0 | (any, lst(x6)) and x7 = 'a, ~'b & lst(x6) | lst(x7) and x8 = tuple0 | (any, lst(x8)) and x9 = lst(tuple0 | (any, x9))",
        "lst(any, x1) | lst(tuple0) -> arrow where x1 = lst(tuple0 | (any, x1))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "lst(any, x8) & lst('a, x9) | lst(tuple0) -> ~'b & lst(x5) | lst(x4) -> ~'b | lst('a, ~'b & lst(x6) | lst(x2)) where x1 = tuple0 | (any, lst(x1)) and x2 = 'a, ~'b & lst(x1) | lst(x2) and x3 = tuple0 | (any, lst(x3)) and x4 = 'a, ~'b & lst(x3) | lst(x4) and x5 = tuple0 | (any, lst(x5)) and x6 = tuple0 | (any, lst(x6)) and x7 = lst(tuple0 | (any, x7)) and x8 = lst(any, x8) & lst('a, x7) | lst(tuple0) and x9 = lst(tuple0 | (any, x9))",
        "lst(any, x1) | lst(tuple0) -> x2 -> any where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "lst(any, x2) & lst('b, x6) | lst(tuple0) -> ~'c & lst(x9) | lst(x8) -> ~'c | lst('b, ~'c & lst(x3) | lst(x5)) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(any, x2) & lst('b, x1) | lst(tuple0) and x3 = tuple0 | (any, lst(x3)) and x4 = tuple0 | (any, lst(x4)) and x5 = 'b, ~'c & lst(x4) | lst(x5) and x6 = lst(tuple0 | (any, x6)) and x7 = tuple0 | (any, lst(x7)) and x8 = 'b, ~'c & lst(x7) | lst(x8) and x9 = tuple0 | (any, lst(x9))",
        "lst(tuple0) -> ('a & lst(x1) -> empty) | ('a -> 'a) where x1 = tuple0 | (any, lst(x1))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "'a \\ lst(tuple0)",
        "lst(any, 'b & lst(x1)) where x1 = tuple0 | (any, lst(x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a & (lst(any, 'b & lst(x1)) | lst(tuple0)) where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "'a & (lst(any, 'b & lst(x1)) | lst(tuple0)) where x1 = tuple0 | (any, lst(x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "'a", "'b & lst(x1) -> 'c where x1 = tuple0 | (any, lst(x1))" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'a", "'a & ('b & lst(x1) -> 'c) where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "'a & ('b & lst(x1) -> 'c) where x1 = tuple0 | (any, lst(x1))", "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(any, 'b & lst(x1)) where x1 = tuple0 | (any, lst(x1))",
        "lst('c, x1) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(any, 'b & lst(x2)) \\ lst('c, x1)) where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2))"
      ],
      [
        "'a \\ (lst(any, 'b & lst(x1)) \\ lst('c, x2)) where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "'a", "any" ],
      [ "lst(tuple0)", "x1 where x1 = lst(tuple0 | (any, x1))" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a", "any" ], [ "lst('b, lst(tuple0))", "any" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [
      [
        "((x1, 'a & lst(x2)) -> x3) & ((lst(tuple0), 'a) -> 'a) where x1 = lst(tuple0 | ('b, x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = lst('b, x3) | 'a & lst(x2)",
        "('c, lst('d, lst(tuple0))) -> 'e"
      ]
    ],
    "prio": [ "'c", "'d" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'a", "lst('b, lst(tuple0)) | 'a" ],
      [ "lst('b, lst(tuple0)) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "'b & lst(x1) where x1 = tuple0 | ('a, lst(x1))" ],
      [ "'b & lst(x1) where x1 = tuple0 | ('a, lst(x1))", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'a",
        "lst('c, lst(tuple0)) | 'a \\ (lst(x1) & ~lst(x3) & ~lst('c, lst(tuple0))) | 'd & 'a where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = 'b, lst(x3) | lst('c, lst(tuple0)) | 'd & 'a & lst(x2)"
      ],
      [
        "lst('c, lst(tuple0)) | 'a \\ (lst(x1) & ~lst(x3) & ~lst('c, lst(tuple0))) | 'd & 'a where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = 'b, lst(x3) | lst('c, lst(tuple0)) | 'd & 'a & lst(x2)",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "'b & lst(x1) where x1 = tuple0 | ('a, lst(x1))" ],
      [ "'b & lst(x1) where x1 = tuple0 | ('a, lst(x1))", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'c", "'d" ],
    "constr": [
      [
        "'d",
        "lst(x2) | lst('c, lst(tuple0)) | 'd where x1 = tuple0 | (any, lst(x1)) and x2 = 'b, lst(x2) | lst('c, lst(tuple0)) | 'd & 'a & lst(x1)"
      ],
      [
        "lst(x2) | lst('c, lst(tuple0)) | 'd where x1 = tuple0 | (any, lst(x1)) and x2 = 'b, lst(x2) | lst('c, lst(tuple0)) | 'd & 'a & lst(x1)",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'a",
        "lst('b, lst(tuple0)) | 'a \\ (lst(x1) \\ lst('b, lst(tuple0))) | 'c & 'a where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "lst('b, lst(tuple0)) | 'a \\ (lst(x1) \\ lst('b, lst(tuple0))) | 'c & 'a where x1 = tuple0 | (any, lst(x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & lst(tuple0)" ], [ "'a & lst(tuple0)", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "lst('a, lst(tuple0)) | 'b" ],
      [ "lst('a, lst(tuple0)) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "lst('a, lst(tuple0))", "empty" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "lst(x1) | lst('b, lst(tuple0)) where x1 = 'a, lst(x1) | lst('b, lst(tuple0))",
        "empty"
      ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "any", "empty" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "lst(x1) | lst('b, lst(tuple0)) where x1 = 'a, lst(x1) | lst('b, lst(tuple0))",
        "lst('b, lst(tuple0))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "any",
        "lst(x1) | lst('b, lst(tuple0)) where x1 = 'a, lst(x1) | lst('b, lst(tuple0))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "lst(x1) | lst('b, lst(tuple0)) where x1 = 'a, lst(x1) | lst('b, lst(tuple0))",
        "any"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [],
    "constr": [
      [
        "'a & (lst('f, x1) & lst(any, 'd & lst(x3)) | lst(tuple0)) -> lst(x2) | lst('f, lst(tuple0)) | lst(tuple0) where x1 = lst(tuple0 | (any, x1)) and x2 = 'c, lst(x2) | lst('f, lst(tuple0)) and x3 = tuple0 | (any, lst(x3))",
        "'b & ('d & lst(x1) -> 'e & lst(x2)) where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | ('c, lst(x2))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'b & (lst(x2) & lst('c, x1) | lst(tuple0)) | 'a where x1 = lst(tuple0 | (any, x1)) and x2 = any, 'b & (lst(x2) & lst('c, x1) | lst(tuple0))"
      ],
      [
        "'b & (lst(x2) & lst('c, x1) | lst(tuple0)) | 'a where x1 = lst(tuple0 | (any, x1)) and x2 = any, 'b & (lst(x2) & lst('c, x1) | lst(tuple0))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "('d & (lst(any, x2) & lst('e, x3) | lst(tuple0)) | 'a & (lst(any, x2) & lst('e, x3) | lst(tuple0)) -> lst(x4) | lst('e, lst(tuple0)) | lst(tuple0)) | 'b where x1 = lst(tuple0 | (any, x1)) and x2 = 'd & (lst(any, x2) & lst('e, x1) | lst(tuple0)) and x3 = lst(tuple0 | (any, x3)) and x4 = 'e | 'c, lst(x4) | lst('e, lst(tuple0))"
      ],
      [
        "('d & (lst(any, x4) & lst('e, x1) | lst(tuple0)) | 'a & (lst(any, x4) & lst('e, x1) | lst(tuple0)) -> lst(x2) | lst('e, lst(tuple0)) | lst(tuple0)) | 'b where x1 = lst(tuple0 | (any, x1)) and x2 = 'e | 'c, lst(x2) | lst('e, lst(tuple0)) and x3 = lst(tuple0 | (any, x3)) and x4 = 'd & (lst(any, x4) & lst('e, x3) | lst(tuple0))",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'b | 'a" ], [ "'b | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(x3) & ~lst('b, x1) & ~lst(tuple0) | lst(x3) & ~lst(x2) & ~lst(tuple0)) where x1 = lst(tuple0 | (any, x1)) and x2 = any, 'a & (lst(x2) & lst('b, x1) | lst(tuple0)) and x3 = tuple0 | (any, lst(x3))"
      ],
      [
        "'a \\ (lst(x2) & ~lst('b, x1) & ~lst(tuple0) | lst(x2) & ~lst(x3) & ~lst(tuple0)) where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = any, 'a & (lst(x3) & lst('b, x1) | lst(tuple0))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "lst(x1) | lst('c, lst(tuple0)) | lst(tuple0) | 'b where x1 = 'c | 'a, lst(x1) | lst('c, lst(tuple0))"
      ],
      [
        "lst(x1) | lst('c, lst(tuple0)) | lst(tuple0) | 'b where x1 = 'c | 'a, lst(x1) | lst('c, lst(tuple0))",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'b & lst(tuple0) | 'a" ], [ "'b & lst(tuple0) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "('c & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0)) | 'b" ],
      [ "('c & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0)) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(x1) \\ lst(tuple0)) where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "'a \\ (lst(x1) \\ lst(tuple0)) where x1 = tuple0 | (any, lst(x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "lst(tuple0) | 'a" ], [ "lst(tuple0) | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "('a & lst(tuple0) -> lst(x1) | lst('d, lst(tuple0)) | lst(tuple0)) | 'b where x1 = 'c, lst(x1) | lst('d, lst(tuple0))"
      ],
      [
        "('a & lst(tuple0) -> lst(x1) | lst('d, lst(tuple0)) | lst(tuple0)) | 'b where x1 = 'c, lst(x1) | lst('d, lst(tuple0))",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "lst(tuple0) -> lst(tuple0)", "lst(tuple0) -> lst(tuple0)" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "lst(any, x3) & lst('a, x4) | lst(tuple0) -> lst(x1) | lst('a, lst(tuple0)) | lst(tuple0) where x1 = 'a, lst(x1) | lst('a, lst(tuple0)) and x2 = lst(tuple0 | (any, x2)) and x3 = lst(any, x3) & lst('a, x2) | lst(tuple0) and x4 = lst(tuple0 | (any, x4))",
        "lst(tuple0) -> lst(tuple0)"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a \\ lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a & (lst(any, x1) | lst(tuple0)) where x1 = lst(tuple0 | (any, x1))"
      ],
      [
        "'a & (lst(any, x1) | lst(tuple0)) where x1 = lst(tuple0 | (any, x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(any, x1) where x1 = lst(tuple0 | (any, x1))",
        "lst(any, 'b & lst(x1)) where x1 = tuple0 | (any, lst(x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(any, lst(x1)) \\ lst(any, 'b & lst(x1))) where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "'a \\ (lst(any, lst(x1)) \\ lst(any, 'b & lst(x1))) where x1 = tuple0 | (any, lst(x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(any, 'b & lst(x1)) where x1 = tuple0 | (any, lst(x1))",
        "lst('c, x1) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(any, 'b & lst(x2)) \\ lst('c, x1)) where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2))"
      ],
      [
        "'a \\ (lst(any, 'b & lst(x2)) \\ lst('c, x1)) where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "'a", "'b & lst(x1) -> 'c where x1 = tuple0 | (any, lst(x1))" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'a", "'a & ('b & lst(x1) -> 'c) where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "'a & ('b & lst(x1) -> 'c) where x1 = tuple0 | (any, lst(x1))", "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a", "any" ], [ "'b", "any" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [
      [
        "((x3, 'b & lst(x1)) -> x2) & ((lst(tuple0), 'b) -> 'b) where x1 = tuple0 | (any, lst(x1)) and x2 = lst('c, x2) | 'b & lst(x1) and x3 = lst(tuple0 | ('c, x3))",
        "('a, 'd) -> 'e"
      ]
    ],
    "prio": [ "'a", "'d" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & lst(tuple0)" ], [ "'a & lst(tuple0)", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'a", "'b | 'a" ], [ "'b | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & lst(tuple0)" ], [ "'a & lst(tuple0)", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'a", "'c & 'a | 'b" ], [ "'c & 'a | 'b", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & lst(x1) where x1 = tuple0 | ('b, lst(x1))" ],
      [ "'a & lst(x1) where x1 = tuple0 | ('b, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'a", "'b & lst(x1) | 'a where x1 = tuple0 | (any, lst(x1))" ],
      [ "'b & lst(x1) | 'a where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a & lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & lst(x1) where x1 = tuple0 | ('b, lst(x1))" ],
      [ "'a & lst(x1) where x1 = tuple0 | ('b, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'a",
        "'c & lst(x4) | 'a \\ (lst(x3) \\ lst(x2)) | 'd & 'a where x1 = tuple0 | (any, lst(x1)) and x2 = 'b, lst(x2) | 'd & 'a & lst(x1) | 'c & lst(x1) and x3 = tuple0 | (any, lst(x3)) and x4 = tuple0 | (any, lst(x4))"
      ],
      [
        "'c & lst(x4) | 'a \\ (lst(x2) \\ lst(x3)) | 'd & 'a where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = 'b, lst(x3) | 'd & 'a & lst(x1) | 'c & lst(x1) and x4 = tuple0 | (any, lst(x4))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a & lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'c", "'d" ],
    "constr": [
      [
        "'d",
        "lst(x1) | 'c & lst(x2) | 'd where x1 = 'b, lst(x1) | 'd & 'a & lst(x2) | 'c & lst(x2) and x2 = tuple0 | (any, lst(x2))"
      ],
      [
        "lst(x2) | 'c & lst(x1) | 'd where x1 = tuple0 | (any, lst(x1)) and x2 = 'b, lst(x2) | 'd & 'a & lst(x1) | 'c & lst(x1)",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & lst(tuple0)" ], [ "'a & lst(tuple0)", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'a",
        "'b & lst(x1) | 'a \\ lst(x2) | 'c & 'a where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, lst(x2))"
      ],
      [
        "'b & lst(x1) | 'a \\ lst(x2) | 'c & 'a where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, lst(x2))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a & lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "'a & lst(x1) | 'b where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a & lst(x1) | 'b where x1 = tuple0 | (any, lst(x1))", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "'a", "empty" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "any", "empty" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "x2 where x1 = tuple0 | (any, lst(x1)) and x2 = lst('a, x2) | 'b & lst(x1)",
        "'b & lst(x1) where x1 = tuple0 | (any, lst(x1))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "any",
        "x2 where x1 = tuple0 | (any, lst(x1)) and x2 = lst('a, x2) | 'b & lst(x1)"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "x2 where x1 = tuple0 | (any, lst(x1)) and x2 = lst('a, x2) | 'b & lst(x1)",
        "any"
      ]
    ]
  },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "any", "'a" ] ] },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "'a", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [],
    "constr": [
      [
        "'a & (lst('d & lst(x1), x2) & lst(any, 'c & lst(x3)) | lst(tuple0)) -> lst(x4) | lst(tuple0) | 'f & lst(x5) where x1 = tuple0 | ('e, lst(x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = tuple0 | (any, lst(x3)) and x4 = 'e, lst(x4) | 'f & lst(x5) and x5 = tuple0 | (any, lst(x5))",
        "'b & ('c & lst(x1) -> 'f & lst(x2)) where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, lst(x2))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'b & (lst(x1) & lst(x4) | lst(tuple0)) | 'a where x1 = any, 'b & (lst(x1) & lst(x4) | lst(tuple0)) and x2 = tuple0 | ('d, lst(x2)) and x3 = lst(tuple0 | (any, x3)) and x4 = 'c & lst(x2), x3"
      ],
      [
        "'b & (lst(x2) & lst(x4) | lst(tuple0)) | 'a where x1 = tuple0 | ('d, lst(x1)) and x2 = any, 'b & (lst(x2) & lst(x4) | lst(tuple0)) and x3 = lst(tuple0 | (any, x3)) and x4 = 'c & lst(x1), x3",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "('c & (lst(any, x4) & lst(x9) | lst(tuple0)) | 'a & (lst(any, x4) & lst(x9) | lst(tuple0)) -> lst(x5) | lst(tuple0) | 'f & lst(x6)) | 'b where x1 = tuple0 | ('e, lst(x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = lst(tuple0 | (any, x3)) and x4 = 'c & (lst(any, x4) & lst('d & lst(x1), x3) | lst(tuple0)) and x5 = 'e, lst(x5) | lst(tuple0) | 'f & lst(x2) and x6 = tuple0 | (any, lst(x6)) and x7 = lst(tuple0 | (any, x7)) and x8 = tuple0 | ('e, lst(x8)) and x9 = 'd & lst(x8), x7"
      ],
      [
        "('c & (lst(any, x5) & lst(x7) | lst(tuple0)) | 'a & (lst(any, x5) & lst(x7) | lst(tuple0)) -> lst(x9) | lst(tuple0) | 'f & lst(x8)) | 'b where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | ('e, lst(x2)) and x3 = tuple0 | ('e, lst(x3)) and x4 = lst(tuple0 | (any, x4)) and x5 = 'c & (lst(any, x5) & lst('d & lst(x3), x4) | lst(tuple0)) and x6 = lst(tuple0 | (any, x6)) and x7 = 'd & lst(x2), x6 and x8 = tuple0 | (any, lst(x8)) and x9 = 'e, lst(x9) | lst(tuple0) | 'f & lst(x1)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(x4) & ~lst(x3) & ~lst(tuple0) | lst(x4) & ~lst(x5) & ~lst(tuple0)) where x1 = tuple0 | ('c, lst(x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = 'b & lst(x1), x2 and x4 = tuple0 | (any, lst(x4)) and x5 = any, 'a & (lst(x5) & lst(x3) | lst(tuple0))"
      ],
      [
        "'a \\ (lst(x4) & ~lst(x3) & ~lst(tuple0) | lst(x4) & ~lst(x5) & ~lst(tuple0)) where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | ('c, lst(x2)) and x3 = 'b & lst(x2), x1 and x4 = tuple0 | (any, lst(x4)) and x5 = any, 'a & (lst(x5) & lst(x3) | lst(tuple0))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "lst(x2) | lst(tuple0) | 'b where x1 = tuple0 | (any, lst(x1)) and x2 = 'a, lst(x2) | lst(tuple0) | 'b & lst(x1)"
      ],
      [
        "lst(x2) | lst(tuple0) | 'b where x1 = tuple0 | (any, lst(x1)) and x2 = 'a, lst(x2) | lst(tuple0) | 'b & lst(x1)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "('a & lst(tuple0) -> lst(x1) | lst(tuple0) | 'd & lst(x2)) | 'b where x1 = 'c, lst(x1) | 'd & lst(x2) and x2 = tuple0 | (any, lst(x2))"
      ],
      [
        "('a & lst(tuple0) -> lst(x2) | lst(tuple0) | 'd & lst(x1)) | 'b where x1 = tuple0 | (any, lst(x1)) and x2 = 'c, lst(x2) | 'd & lst(x1)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "lst(any, x6) & lst(x2, x1) | lst(tuple0) -> lst(x3) | lst(tuple0) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | ('a, x2)) and x3 = 'a, lst(x3) | lst(tuple0) and x4 = lst(tuple0 | ('a, x4)) and x5 = lst(tuple0 | (any, x5)) and x6 = lst(any, x6) & lst(x4, x5) | lst(tuple0)",
        "lst(tuple0) -> lst(tuple0)"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [
      [
        "'a & (lst('d & lst(tuple0), x1) & lst(any, 'c & lst(x2)) | lst(tuple0)) -> lst(tuple0) | 'e where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2))",
        "'b & ('c & lst(x1) -> 'e) where x1 = tuple0 | (any, lst(x1))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'b & (lst(x3) & lst(x2) | lst(tuple0)) | 'a where x1 = lst(tuple0 | (any, x1)) and x2 = 'c & lst(tuple0), x1 and x3 = any, 'b & (lst(x3) & lst(x2) | lst(tuple0))"
      ],
      [
        "'b & (lst(x3) & lst(x2) | lst(tuple0)) | 'a where x1 = lst(tuple0 | (any, x1)) and x2 = 'c & lst(tuple0), x1 and x3 = any, 'b & (lst(x3) & lst(x2) | lst(tuple0))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "('c & (lst(any, x2) & lst(x4) | lst(tuple0)) | 'a & (lst(any, x2) & lst(x4) | lst(tuple0)) -> lst(tuple0) | 'e) | 'b where x1 = lst(tuple0 | (any, x1)) and x2 = 'c & (lst(any, x2) & lst('d & lst(tuple0), x1) | lst(tuple0)) and x3 = lst(tuple0 | (any, x3)) and x4 = 'd & lst(tuple0), x3"
      ],
      [
        "('c & (lst(any, x2) & lst(x4) | lst(tuple0)) | 'a & (lst(any, x2) & lst(x4) | lst(tuple0)) -> lst(tuple0) | 'e) | 'b where x1 = lst(tuple0 | (any, x1)) and x2 = 'c & (lst(any, x2) & lst('d & lst(tuple0), x1) | lst(tuple0)) and x3 = lst(tuple0 | (any, x3)) and x4 = 'd & lst(tuple0), x3",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(x1) & ~lst(x4) & ~lst(tuple0) | lst(x1) & ~lst(x2) & ~lst(tuple0)) where x1 = tuple0 | (any, lst(x1)) and x2 = any, 'a & (lst(x2) & lst(x4) | lst(tuple0)) and x3 = lst(tuple0 | (any, x3)) and x4 = 'b & lst(tuple0), x3"
      ],
      [
        "'a \\ (lst(x1) & ~lst(x4) & ~lst(tuple0) | lst(x1) & ~lst(x2) & ~lst(tuple0)) where x1 = tuple0 | (any, lst(x1)) and x2 = any, 'a & (lst(x2) & lst(x4) | lst(tuple0)) and x3 = lst(tuple0 | (any, x3)) and x4 = 'b & lst(tuple0), x3",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "lst(tuple0) | 'a" ], [ "lst(tuple0) | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "('a & lst(tuple0) -> lst(tuple0) | 'c) | 'b" ],
      [ "('a & lst(tuple0) -> lst(tuple0) | 'c) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "lst(any, x2) & lst(lst(tuple0), x3) | lst(tuple0) -> lst(tuple0) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(any, x2) & lst(lst(tuple0), x1) | lst(tuple0) and x3 = lst(tuple0 | (any, x3))",
        "lst(tuple0) -> lst(tuple0)"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "(x2 -> x1) & (x3 -> lst(tuple0)) where x1 = lst(tuple0 | ('b, x1)) and x2 = lst(tuple0 | (x1, x2)) and x3 = lst(tuple0 | (lst(tuple0), x3))",
        "'a -> 'c"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & lst(x1) where x1 = tuple0 | (lst(tuple0), lst(x1))" ],
      [ "'a & lst(x1) where x1 = tuple0 | (lst(tuple0), lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "lst(tuple0) | 'a" ], [ "lst(tuple0) | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a & lst(x2) where x1 = lst(tuple0 | ('b, x1)) and x2 = tuple0 | (x1, lst(x2))"
      ],
      [
        "'a & lst(x2) where x1 = lst(tuple0 | ('b, x1)) and x2 = tuple0 | (x1, lst(x2))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "lst(x1) | 'b where x1 = tuple0 | ('a, lst(x1))" ],
      [ "lst(x1) | 'b where x1 = tuple0 | ('a, lst(x1))", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "x1 where x1 = lst(tuple0 | ('a, x1))", "empty" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "lst(tuple0)", "empty" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "x1 where x1 = lst(tuple0 | ('a, x1))", "lst(tuple0)" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(x3) -> x1 where x1 = lst(tuple0 | ('c, x1)) and x2 = lst(tuple0 | ('c, x2)) and x3 = tuple0 | (x2, lst(x3))",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "('a & lst(x2) -> x3) | 'b where x1 = lst(tuple0 | ('c, x1)) and x2 = tuple0 | (x1, lst(x2)) and x3 = lst(tuple0 | ('c, x3))"
      ],
      [
        "('a & lst(x2) -> x3) | 'b where x1 = lst(tuple0 | ('c, x1)) and x2 = tuple0 | (x1, lst(x2)) and x3 = lst(tuple0 | ('c, x3))",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a \\ lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a & (lst(any, x1) | lst(tuple0)) where x1 = lst(tuple0 | (any, x1))"
      ],
      [
        "'a & (lst(any, x1) | lst(tuple0)) where x1 = lst(tuple0 | (any, x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(any, x1) where x1 = lst(tuple0 | (any, x1))",
        "lst(any, 'b & lst(x1)) where x1 = tuple0 | (any, lst(x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(any, lst(x1)) \\ lst(any, 'b & lst(x1))) where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "'a \\ (lst(any, lst(x1)) \\ lst(any, 'b & lst(x1))) where x1 = tuple0 | (any, lst(x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(any, 'b & lst(x1)) where x1 = tuple0 | (any, lst(x1))",
        "lst('c, x1) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(any, 'b & lst(x2)) \\ lst('c, x1)) where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2))"
      ],
      [
        "'a \\ (lst(any, 'b & lst(x2)) \\ lst('c, x1)) where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'a", "'b -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'a", "'a & ('b -> 'c)" ], [ "'a & ('b -> 'c)", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [ [ "'b", "'a & ('c -> 'd) -> 'e" ] ],
    "prio": [ "'a", "'b", "'c", "'d" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'b", "'c", "'d" ],
    "constr": [
      [ "'b", "'b & ('a & ('c -> 'd) -> 'e)" ],
      [ "'b & ('a & ('c -> 'd) -> 'e)", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "'b", "'a & lst(x1) -> 'c where x1 = tuple0 | (any, lst(x1))" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b", "'b & ('a & lst(x1) -> 'c) where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "'b & ('a & lst(x1) -> 'c) where x1 = tuple0 | (any, lst(x1))", "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [ "'a", "any" ], [ "'b", "x1 where x1 = lst(tuple0 | (any, x1))" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a & lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g", "'h" ],
    "mono": [],
    "constr": [
      [
        "'b & ('e -> 'f) -> 'a & (lst('e, x2) & lst(any, 'd & lst(x3)) | lst(tuple0)) -> lst('f, 'h & lst(x1)) | lst(tuple0) where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = tuple0 | (any, lst(x3))",
        "'c & ('b & ('e -> 'f) -> 'g & ('d & lst(x2) -> 'h & lst(x1))) where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, lst(x2))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'b & (lst(x2) & lst('c, x1) | lst(tuple0)) | 'a where x1 = lst(tuple0 | (any, x1)) and x2 = any, 'b & (lst(x2) & lst('c, x1) | lst(tuple0))"
      ],
      [
        "'b & (lst(x2) & lst('c, x1) | lst(tuple0)) | 'a where x1 = lst(tuple0 | (any, x1)) and x2 = any, 'b & (lst(x2) & lst('c, x1) | lst(tuple0))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "('b & ('e -> 'f) -> 'd & (lst(any, x5) & lst('e, x6) | lst(tuple0)) | 'a & (lst(any, x5) & lst('e, x6) | lst(tuple0)) -> lst('f, lst(x2) | lst(tuple0) | 'g & lst(x3)) | lst(tuple0)) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = 'f, lst(x2) | lst(tuple0) | 'g & lst(x1) and x3 = tuple0 | (any, lst(x3)) and x4 = lst(tuple0 | (any, x4)) and x5 = 'd & (lst(any, x5) & lst('e, x4) | lst(tuple0)) and x6 = lst(tuple0 | (any, x6))"
      ],
      [
        "('b & ('e -> 'f) -> 'd & (lst(any, x6) & lst('e, x3) | lst(tuple0)) | 'a & (lst(any, x6) & lst('e, x3) | lst(tuple0)) -> lst('f, lst(x4) | lst(tuple0) | 'g & lst(x5)) | lst(tuple0)) | 'c where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = lst(tuple0 | (any, x3)) and x4 = 'f, lst(x4) | lst(tuple0) | 'g & lst(x2) and x5 = tuple0 | (any, lst(x5)) and x6 = 'd & (lst(any, x6) & lst('e, x1) | lst(tuple0))",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(x2) & ~lst('b, x1) & ~lst(tuple0) | lst(x2) & ~lst(x3) & ~lst(tuple0)) where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = any, 'a & (lst(x3) & lst('b, x1) | lst(tuple0))"
      ],
      [
        "'a \\ (lst(x2) & ~lst('b, x1) & ~lst(tuple0) | lst(x2) & ~lst(x3) & ~lst(tuple0)) where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = any, 'a & (lst(x3) & lst('b, x1) | lst(tuple0))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'e" ],
    "constr": [
      [
        "'e",
        "('b & (lst(any, x5) & lst('c, x1) | lst(tuple0)) | 'a & (lst(any, x5) & lst('c, x1) | lst(tuple0)) -> lst('d, lst(x3) | lst(tuple0) | 'f & lst(x6)) | lst(tuple0)) | 'e where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = 'd, lst(x3) | lst(tuple0) | 'f & lst(x2) and x4 = lst(tuple0 | (any, x4)) and x5 = 'b & (lst(any, x5) & lst('c, x4) | lst(tuple0)) and x6 = tuple0 | (any, lst(x6))"
      ],
      [
        "('b & (lst(any, x6) & lst('c, x4) | lst(tuple0)) | 'a & (lst(any, x6) & lst('c, x4) | lst(tuple0)) -> lst('d, lst(x2) | lst(tuple0) | 'f & lst(x3)) | lst(tuple0)) | 'e where x1 = tuple0 | (any, lst(x1)) and x2 = 'd, lst(x2) | lst(tuple0) | 'f & lst(x1) and x3 = tuple0 | (any, lst(x3)) and x4 = lst(tuple0 | (any, x4)) and x5 = lst(tuple0 | (any, x5)) and x6 = 'b & (lst(any, x6) & lst('c, x5) | lst(tuple0))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "lst(x2) | lst(tuple0) | 'b where x1 = tuple0 | (any, lst(x1)) and x2 = 'a, lst(x2) | lst(tuple0) | 'b & lst(x1)"
      ],
      [
        "lst(x2) | lst(tuple0) | 'b where x1 = tuple0 | (any, lst(x1)) and x2 = 'a, lst(x2) | lst(tuple0) | 'b & lst(x1)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "('b & ('d -> 'e) -> 'a & lst(tuple0) -> lst('e, 'f & lst(x1)) | lst(tuple0)) | 'c where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "('b & ('d -> 'e) -> 'a & lst(tuple0) -> lst('e, 'f & lst(x1)) | lst(tuple0)) | 'c where x1 = tuple0 | (any, lst(x1))",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "('a & lst(tuple0) -> lst('b, 'd & lst(x1)) | lst(tuple0)) | 'c where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "('a & lst(tuple0) -> lst('b, 'd & lst(x1)) | lst(tuple0)) | 'c where x1 = tuple0 | (any, lst(x1))",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ ('b -> 'c)" ], [ "'a \\ ('b -> 'c)", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "arrow | 'a" ], [ "arrow | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "arrow -> lst(tuple0) -> lst(tuple0)", "arrow" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "('a -> 'b) -> lst(any, x4) & lst('a, x1) | lst(tuple0) -> lst('b, x3) | lst(tuple0) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = lst('b, x3) | lst(tuple0) and x4 = lst(any, x4) & lst('a, x2) | lst(tuple0)",
        "arrow -> lst(tuple0) -> lst(tuple0)"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a \\ lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a & (lst(any, x1) | lst(tuple0)) where x1 = lst(tuple0 | (any, x1))"
      ],
      [
        "'a & (lst(any, x1) | lst(tuple0)) where x1 = lst(tuple0 | (any, x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(any, x1) where x1 = lst(tuple0 | (any, x1))",
        "lst(any, 'b & lst(x1)) where x1 = tuple0 | (any, lst(x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(any, lst(x1)) \\ lst(any, 'b & lst(x1))) where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "'a \\ (lst(any, lst(x1)) \\ lst(any, 'b & lst(x1))) where x1 = tuple0 | (any, lst(x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(any, 'b & lst(x1)) where x1 = tuple0 | (any, lst(x1))",
        "lst('c, x1) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(any, 'b & lst(x2)) \\ lst('c, x1)) where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2))"
      ],
      [
        "'a \\ (lst(any, 'b & lst(x2)) \\ lst('c, x1)) where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'a", "'b -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'a", "'a & ('b -> 'c)" ], [ "'a & ('b -> 'c)", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'b", "'a -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b & ('a -> 'c)" ], [ "'b & ('a -> 'c)", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a", "any" ], [ "1", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "('a, 1) -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "empty" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a", "int -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & (int -> 'b)" ], [ "'a & (int -> 'b)", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g" ],
    "mono": [],
    "constr": [ [ "'f", "'a & ('b & int -> 'd & ('c -> 'e)) -> 'g" ] ],
    "prio": [ "'a", "'b", "'c", "'d", "'e", "'f" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g" ],
    "mono": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "constr": [
      [ "'f", "'f & ('a & ('b & int -> 'd & ('c -> 'e)) -> 'g)" ],
      [ "'f & ('a & ('b & int -> 'd & ('c -> 'e)) -> 'g)", "'f" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "'b", "'a & lst(x1) -> 'c where x1 = tuple0 | (any, lst(x1))" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b", "'b & ('a & lst(x1) -> 'c) where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "'b & ('a & lst(x1) -> 'c) where x1 = tuple0 | (any, lst(x1))", "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [ "'a", "any" ], [ "'b", "x1 where x1 = lst(tuple0 | (any, x1))" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a & lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [
      "'a", "'b", "'c", "'d", "'e", "'f", "'g", "'h", "'i", "'j", "'k"
    ],
    "mono": [],
    "constr": [
      [
        "'c & int -> 'b & ('c & int -> 'g & ('f -> 'h)) -> 'a & (lst('f, x1) & lst(any, 'e & lst(x2)) | lst(tuple0)) -> lst('h, 'k & lst(x3)) | lst(tuple0) where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = tuple0 | (any, lst(x3))",
        "'d & (int -> 'i & ('b & ('c & int -> 'g & ('f -> 'h)) -> 'j & ('e & lst(x1) -> 'k & lst(x2)))) where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, lst(x2))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'b & (lst(x1) & lst('c, x2) | lst(tuple0)) | 'a where x1 = any, 'b & (lst(x1) & lst('c, x2) | lst(tuple0)) and x2 = lst(tuple0 | (any, x2))"
      ],
      [
        "'b & (lst(x2) & lst('c, x1) | lst(tuple0)) | 'a where x1 = lst(tuple0 | (any, x1)) and x2 = any, 'b & (lst(x2) & lst('c, x1) | lst(tuple0))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g", "'h" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "(int -> 'b & (int -> 'f & ('e -> 'g)) -> 'd & (lst(any, x5) & lst('e, x6) | lst(tuple0)) | 'a & (lst(any, x5) & lst('e, x6) | lst(tuple0)) -> lst('g, lst(x2) | lst(tuple0) | 'h & lst(x3)) | lst(tuple0)) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = 'g, lst(x2) | lst(tuple0) | 'h & lst(x1) and x3 = tuple0 | (any, lst(x3)) and x4 = lst(tuple0 | (any, x4)) and x5 = 'd & (lst(any, x5) & lst('e, x4) | lst(tuple0)) and x6 = lst(tuple0 | (any, x6))"
      ],
      [
        "(int -> 'b & (int -> 'f & ('e -> 'g)) -> 'd & (lst(any, x5) & lst('e, x6) | lst(tuple0)) | 'a & (lst(any, x5) & lst('e, x6) | lst(tuple0)) -> lst('g, lst(x2) | lst(tuple0) | 'h & lst(x3)) | lst(tuple0)) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = 'g, lst(x2) | lst(tuple0) | 'h & lst(x1) and x3 = tuple0 | (any, lst(x3)) and x4 = lst(tuple0 | (any, x4)) and x5 = 'd & (lst(any, x5) & lst('e, x4) | lst(tuple0)) and x6 = lst(tuple0 | (any, x6))",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(x3) & ~lst('b, x1) & ~lst(tuple0) | lst(x3) & ~lst(x2) & ~lst(tuple0)) where x1 = lst(tuple0 | (any, x1)) and x2 = any, 'a & (lst(x2) & lst('b, x1) | lst(tuple0)) and x3 = tuple0 | (any, lst(x3))"
      ],
      [
        "'a \\ (lst(x3) & ~lst('b, x2) & ~lst(tuple0) | lst(x3) & ~lst(x1) & ~lst(tuple0)) where x1 = any, 'a & (lst(x1) & lst('b, x2) | lst(tuple0)) and x2 = lst(tuple0 | (any, x2)) and x3 = tuple0 | (any, lst(x3))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g", "'h" ],
    "mono": [ "'g" ],
    "constr": [
      [
        "'g",
        "('b & (int -> 'e & ('d -> 'f)) -> 'c & (lst(any, x4) & lst('d, x1) | lst(tuple0)) | 'a & (lst(any, x4) & lst('d, x1) | lst(tuple0)) -> lst('f, lst(x5) | lst(tuple0) | 'h & lst(x6)) | lst(tuple0)) | 'g where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = lst(tuple0 | (any, x3)) and x4 = 'c & (lst(any, x4) & lst('d, x3) | lst(tuple0)) and x5 = 'f, lst(x5) | lst(tuple0) | 'h & lst(x2) and x6 = tuple0 | (any, lst(x6))"
      ],
      [
        "('b & (int -> 'e & ('d -> 'f)) -> 'c & (lst(any, x3) & lst('d, x1) | lst(tuple0)) | 'a & (lst(any, x3) & lst('d, x1) | lst(tuple0)) -> lst('f, lst(x5) | lst(tuple0) | 'h & lst(x6)) | lst(tuple0)) | 'g where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = 'c & (lst(any, x3) & lst('d, x2) | lst(tuple0)) and x4 = tuple0 | (any, lst(x4)) and x5 = 'f, lst(x5) | lst(tuple0) | 'h & lst(x4) and x6 = tuple0 | (any, lst(x6))",
        "'g"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'e" ],
    "constr": [
      [
        "'e",
        "('b & (lst(any, x5) & lst('c, x6) | lst(tuple0)) | 'a & (lst(any, x5) & lst('c, x6) | lst(tuple0)) -> lst('d, lst(x2) | lst(tuple0) | 'f & lst(x3)) | lst(tuple0)) | 'e where x1 = tuple0 | (any, lst(x1)) and x2 = 'd, lst(x2) | lst(tuple0) | 'f & lst(x1) and x3 = tuple0 | (any, lst(x3)) and x4 = lst(tuple0 | (any, x4)) and x5 = 'b & (lst(any, x5) & lst('c, x4) | lst(tuple0)) and x6 = lst(tuple0 | (any, x6))"
      ],
      [
        "('b & (lst(any, x6) & lst('c, x4) | lst(tuple0)) | 'a & (lst(any, x6) & lst('c, x4) | lst(tuple0)) -> lst('d, lst(x2) | lst(tuple0) | 'f & lst(x3)) | lst(tuple0)) | 'e where x1 = tuple0 | (any, lst(x1)) and x2 = 'd, lst(x2) | lst(tuple0) | 'f & lst(x1) and x3 = tuple0 | (any, lst(x3)) and x4 = lst(tuple0 | (any, x4)) and x5 = lst(tuple0 | (any, x5)) and x6 = 'b & (lst(any, x6) & lst('c, x5) | lst(tuple0))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "lst(x2) | lst(tuple0) | 'b where x1 = tuple0 | (any, lst(x1)) and x2 = 'a, lst(x2) | lst(tuple0) | 'b & lst(x1)"
      ],
      [
        "lst(x2) | lst(tuple0) | 'b where x1 = tuple0 | (any, lst(x1)) and x2 = 'a, lst(x2) | lst(tuple0) | 'b & lst(x1)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "(int -> 'b & (int -> 'e & ('d -> 'f)) -> 'a & lst(tuple0) -> lst('f, 'g & lst(x1)) | lst(tuple0)) | 'c where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "(int -> 'b & (int -> 'e & ('d -> 'f)) -> 'a & lst(tuple0) -> lst('f, 'g & lst(x1)) | lst(tuple0)) | 'c where x1 = tuple0 | (any, lst(x1))",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g" ],
    "mono": [ "'f" ],
    "constr": [
      [
        "'f",
        "('b & (int -> 'd & ('c -> 'e)) -> 'a & lst(tuple0) -> lst('e, 'g & lst(x1)) | lst(tuple0)) | 'f where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "('b & (int -> 'd & ('c -> 'e)) -> 'a & lst(tuple0) -> lst('e, 'g & lst(x1)) | lst(tuple0)) | 'f where x1 = tuple0 | (any, lst(x1))",
        "'f"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "('a & lst(tuple0) -> lst('b, 'd & lst(x1)) | lst(tuple0)) | 'c where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "('a & lst(tuple0) -> lst('b, 'd & lst(x1)) | lst(tuple0)) | 'c where x1 = tuple0 | (any, lst(x1))",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ (int -> 'c & ('b -> 'd))" ],
      [ "'a \\ (int -> 'c & ('b -> 'd))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "(int -> arrow) | 'a" ], [ "(int -> arrow) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "arrow | 'a" ], [ "arrow | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int -> (int -> arrow) -> lst(tuple0) -> lst(tuple0)", "int -> arrow"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "int -> (int -> 'a -> 'b) -> lst(any, x4) & lst('a, x3) | lst(tuple0) -> lst('b, x2) | lst(tuple0) where x1 = lst(tuple0 | (any, x1)) and x2 = lst('b, x2) | lst(tuple0) and x3 = lst(tuple0 | (any, x3)) and x4 = lst(any, x4) & lst('a, x1) | lst(tuple0)",
        "int -> (int -> arrow) -> lst(tuple0) -> lst(tuple0)"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "int -> (int -> 'a -> 'b) -> x1 -> x2 where x1 = lst(tuple0 | ('a, x1)) and x2 = lst(tuple0 | ('b, x2))",
        "0 -> 'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "((int -> 'a -> 'b) -> x1 -> x2) | 'c where x1 = lst(tuple0 | ('a, x1)) and x2 = lst(tuple0 | ('b, x2))"
      ],
      [
        "((int -> 'a -> 'b) -> x1 -> x2) | 'c where x1 = lst(tuple0 | ('a, x1)) and x2 = lst(tuple0 | ('b, x2))",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [
        "(int -> 'b -> 'c) -> x1 -> x2 where x1 = lst(tuple0 | ('b, x1)) and x2 = lst(tuple0 | ('c, x2))",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (int -> 'b -> 'c)" ], [ "'a & (int -> 'b -> 'c)", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "(x2 -> x1) | 'c where x1 = lst(tuple0 | ('b, x1)) and x2 = lst(tuple0 | ('a, x2))"
      ],
      [
        "(x2 -> x1) | 'c where x1 = lst(tuple0 | ('b, x1)) and x2 = lst(tuple0 | ('a, x2))",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "x2 -> x1 where x1 = lst(tuple0 | ('b, x1)) and x2 = lst(tuple0 | ('a, x2))",
        "empty"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [
        "x2 -> x1 where x1 = lst(tuple0 | ('c, x1)) and x2 = lst(tuple0 | ('b, x2))",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a", "'b", "'c" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'a", "'a & lst(x1) where x1 = tuple0 | ('b, lst(x1))" ],
      [ "'a & lst(x1) where x1 = tuple0 | ('b, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "lst(x1) | 'b where x1 = tuple0 | ('a, lst(x1))" ],
      [ "lst(x1) | 'b where x1 = tuple0 | ('a, lst(x1))", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "x1 where x1 = lst(tuple0 | ('a, x1))", "empty" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [
      [
        "'b & (int -> 'd -> 'e) -> 'a & lst(x1) -> x2 where x1 = tuple0 | ('d, lst(x1)) and x2 = lst(tuple0 | ('e, x2))",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "('b & (int -> 'd -> 'e) -> 'a & lst(x1) -> x2) | 'c where x1 = tuple0 | ('d, lst(x1)) and x2 = lst(tuple0 | ('e, x2))"
      ],
      [
        "('b & (int -> 'd -> 'e) -> 'a & lst(x1) -> x2) | 'c where x1 = tuple0 | ('d, lst(x1)) and x2 = lst(tuple0 | ('e, x2))",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a \\ lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a & (lst(any, x1) | lst(tuple0)) where x1 = lst(tuple0 | (any, x1))"
      ],
      [
        "'a & (lst(any, x1) | lst(tuple0)) where x1 = lst(tuple0 | (any, x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(any, x1) where x1 = lst(tuple0 | (any, x1))",
        "lst(any, 'b & lst(x1)) where x1 = tuple0 | (any, lst(x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(any, lst(x1)) \\ lst(any, 'b & lst(x1))) where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "'a \\ (lst(any, lst(x1)) \\ lst(any, 'b & lst(x1))) where x1 = tuple0 | (any, lst(x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(any, 'b & lst(x1)) where x1 = tuple0 | (any, lst(x1))",
        "lst('c, x1) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(any, 'b & lst(x1)) \\ lst('c, x2)) where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2))"
      ],
      [
        "'a \\ (lst(any, 'b & lst(x2)) \\ lst('c, x1)) where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'b", "'a -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b & ('a -> 'c)" ], [ "'b & ('a -> 'c)", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "'b", "'a & lst(x1) -> 'c where x1 = tuple0 | (any, lst(x1))" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b", "'b & ('a & lst(x1) -> 'c) where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "'b & ('a & lst(x1) -> 'c) where x1 = tuple0 | (any, lst(x1))", "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'b", "'a -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b & ('a -> 'c)" ], [ "'b & ('a -> 'c)", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'b", "'a -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b & ('a -> 'c)" ], [ "'b & ('a -> 'c)", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'a", "'b -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'a", "'a & ('b -> 'c)" ], [ "'a & ('b -> 'c)", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [
      "'a", "'b", "'c", "'d", "'e", "'f", "'g", "'h", "'i", "'j", "'k"
    ],
    "mono": [],
    "constr": [
      [
        "'c & ('a -> 'i & ('f -> 'j)) -> 'b & (lst('f, x2) & lst(any, 'e & lst(x1)) | lst(tuple0)) -> ('a -> 'k) | ('a -> 'a) where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2))",
        "'d & ('c & ('a -> 'i & ('f -> 'j)) -> 'g & ('e & lst(x1) -> 'h & ('j -> 'k))) where x1 = tuple0 | (any, lst(x1))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'b & (lst(x2) & lst('c, x1) | lst(tuple0)) | 'a where x1 = lst(tuple0 | (any, x1)) and x2 = any, 'b & (lst(x2) & lst('c, x1) | lst(tuple0))"
      ],
      [
        "'b & (lst(x2) & lst('c, x1) | lst(tuple0)) | 'a where x1 = lst(tuple0 | (any, x1)) and x2 = any, 'b & (lst(x2) & lst('c, x1) | lst(tuple0))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g", "'h" ],
    "mono": [ "'d" ],
    "constr": [
      [
        "'d",
        "('c & ('a -> 'g & ('f -> empty)) -> 'e & (lst(any, x2) & lst('f, x3) | lst(tuple0)) | 'b & (lst(any, x2) & lst('f, x3) | lst(tuple0)) -> ('a -> 'a) | ('a -> 'h)) | 'd where x1 = lst(tuple0 | (any, x1)) and x2 = 'e & (lst(any, x2) & lst('f, x1) | lst(tuple0)) and x3 = lst(tuple0 | (any, x3))"
      ],
      [
        "('c & ('a -> 'g & ('f -> empty)) -> 'e & (lst(any, x3) & lst('f, x2) | lst(tuple0)) | 'b & (lst(any, x3) & lst('f, x2) | lst(tuple0)) -> ('a -> 'a) | ('a -> 'h)) | 'd where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = 'e & (lst(any, x3) & lst('f, x1) | lst(tuple0))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(x1) & ~lst('b, x2) & ~lst(tuple0) | lst(x1) & ~lst(x3) & ~lst(tuple0)) where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = any, 'a & (lst(x3) & lst('b, x2) | lst(tuple0))"
      ],
      [
        "'a \\ (lst(x1) & ~lst('b, x2) & ~lst(tuple0) | lst(x1) & ~lst(x3) & ~lst(tuple0)) where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = any, 'a & (lst(x3) & lst('b, x2) | lst(tuple0))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'e" ],
    "constr": [
      [
        "'e",
        "('c & (lst(any, x3) & lst('d, x2) | lst(tuple0)) | 'b & (lst(any, x3) & lst('d, x2) | lst(tuple0)) -> ('a -> 'a) | ('a -> 'f)) | 'e where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = 'c & (lst(any, x3) & lst('d, x1) | lst(tuple0))"
      ],
      [
        "('c & (lst(any, x2) & lst('d, x3) | lst(tuple0)) | 'b & (lst(any, x2) & lst('d, x3) | lst(tuple0)) -> ('a -> 'a) | ('a -> 'f)) | 'e where x1 = lst(tuple0 | (any, x1)) and x2 = 'c & (lst(any, x2) & lst('d, x1) | lst(tuple0)) and x3 = lst(tuple0 | (any, x3))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "('a -> 'a) | ('a -> 'c) | 'b" ],
      [ "('a -> 'a) | ('a -> 'c) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'b | 'a" ], [ "'b | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'b & (lst(x2) & lst('c, x1) | lst(tuple0)) | 'a where x1 = lst(tuple0 | (any, x1)) and x2 = any, 'b & (lst(x2) & lst('c, x1) | lst(tuple0))"
      ],
      [
        "'b & (lst(x2) & lst('c, x1) | lst(tuple0)) | 'a where x1 = lst(tuple0 | (any, x1)) and x2 = any, 'b & (lst(x2) & lst('c, x1) | lst(tuple0))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g", "'h" ],
    "mono": [ "'d" ],
    "constr": [
      [
        "'d",
        "('c & ('h | 'a -> 'g & ('f -> 'h)) -> 'e & (lst(any, x2) & lst('f, x3) | lst(tuple0)) | 'b & (lst(any, x2) & lst('f, x3) | lst(tuple0)) -> 'h | 'a -> any) | 'd where x1 = lst(tuple0 | (any, x1)) and x2 = 'e & (lst(any, x2) & lst('f, x1) | lst(tuple0)) and x3 = lst(tuple0 | (any, x3))"
      ],
      [
        "('c & ('h | 'a -> 'g & ('f -> 'h)) -> 'e & (lst(any, x3) & lst('f, x1) | lst(tuple0)) | 'b & (lst(any, x3) & lst('f, x1) | lst(tuple0)) -> 'h | 'a -> any) | 'd where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = 'e & (lst(any, x3) & lst('f, x2) | lst(tuple0))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(x2) & ~lst('b, x1) & ~lst(tuple0) | lst(x2) & ~lst(x3) & ~lst(tuple0)) where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = any, 'a & (lst(x3) & lst('b, x1) | lst(tuple0))"
      ],
      [
        "'a \\ (lst(x3) & ~lst('b, x1) & ~lst(tuple0) | lst(x3) & ~lst(x2) & ~lst(tuple0)) where x1 = lst(tuple0 | (any, x1)) and x2 = any, 'a & (lst(x2) & lst('b, x1) | lst(tuple0)) and x3 = tuple0 | (any, lst(x3))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'e" ],
    "constr": [
      [
        "'e",
        "('c & (lst(any, x2) & lst('d, x3) | lst(tuple0)) | 'b & (lst(any, x2) & lst('d, x3) | lst(tuple0)) -> 'f | 'a -> any) | 'e where x1 = lst(tuple0 | (any, x1)) and x2 = 'c & (lst(any, x2) & lst('d, x1) | lst(tuple0)) and x3 = lst(tuple0 | (any, x3))"
      ],
      [
        "('c & (lst(any, x2) & lst('d, x3) | lst(tuple0)) | 'b & (lst(any, x2) & lst('d, x3) | lst(tuple0)) -> 'f | 'a -> any) | 'e where x1 = lst(tuple0 | (any, x1)) and x2 = 'c & (lst(any, x2) & lst('d, x1) | lst(tuple0)) and x3 = lst(tuple0 | (any, x3))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "('c | 'a -> any) | 'b" ], [ "('c | 'a -> any) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'c & 'b | 'c & 'a" ], [ "'c & 'b | 'c & 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'b & (lst(x2) & lst('c, x1) | lst(tuple0)) | 'a where x1 = lst(tuple0 | (any, x1)) and x2 = any, 'b & (lst(x2) & lst('c, x1) | lst(tuple0))"
      ],
      [
        "'b & (lst(x1) & lst('c, x2) | lst(tuple0)) | 'a where x1 = any, 'b & (lst(x1) & lst('c, x2) | lst(tuple0)) and x2 = lst(tuple0 | (any, x2))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g", "'h", "'i" ],
    "mono": [ "'d" ],
    "constr": [
      [
        "'d",
        "('c & (x4 -> 'g & ('f -> 'i & 'h)) -> 'e & (lst(any, x3) & lst('f, x2) | lst(tuple0)) | 'b & (lst(any, x3) & lst('f, x2) | lst(tuple0)) -> x4 -> 'i) | 'd where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = 'e & (lst(any, x3) & lst('f, x1) | lst(tuple0)) and x4 = 'i & 'h | 'i & 'a"
      ],
      [
        "('c & (x4 -> 'g & ('f -> 'i & 'h)) -> 'e & (lst(any, x3) & lst('f, x1) | lst(tuple0)) | 'b & (lst(any, x3) & lst('f, x1) | lst(tuple0)) -> x4 -> 'i) | 'd where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = 'e & (lst(any, x3) & lst('f, x2) | lst(tuple0)) and x4 = 'i & 'h | 'i & 'a",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(x1) & ~lst('b, x2) & ~lst(tuple0) | lst(x1) & ~lst(x3) & ~lst(tuple0)) where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = any, 'a & (lst(x3) & lst('b, x2) | lst(tuple0))"
      ],
      [
        "'a \\ (lst(x1) & ~lst('b, x2) & ~lst(tuple0) | lst(x1) & ~lst(x3) & ~lst(tuple0)) where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = any, 'a & (lst(x3) & lst('b, x2) | lst(tuple0))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g" ],
    "mono": [ "'e" ],
    "constr": [
      [
        "'e",
        "('c & (lst(any, x2) & lst('d, x3) | lst(tuple0)) | 'b & (lst(any, x2) & lst('d, x3) | lst(tuple0)) -> 'g & 'f | 'g & 'a -> 'g) | 'e where x1 = lst(tuple0 | (any, x1)) and x2 = 'c & (lst(any, x2) & lst('d, x1) | lst(tuple0)) and x3 = lst(tuple0 | (any, x3))"
      ],
      [
        "('c & (lst(any, x2) & lst('d, x3) | lst(tuple0)) | 'b & (lst(any, x2) & lst('d, x3) | lst(tuple0)) -> 'g & 'f | 'g & 'a -> 'g) | 'e where x1 = lst(tuple0 | (any, x1)) and x2 = 'c & (lst(any, x2) & lst('d, x1) | lst(tuple0)) and x3 = lst(tuple0 | (any, x3))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "('d & 'c | 'd & 'a -> 'd) | 'b" ],
      [ "('d & 'c | 'd & 'a -> 'd) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'b & 'a" ], [ "'b & 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g", "'h" ],
    "mono": [ "'d" ],
    "constr": [
      [
        "'d",
        "('c & ('a -> 'f & ('e -> 'g)) -> 'b & lst(tuple0) -> ('a -> 'h) | ('a -> 'a)) | 'd"
      ],
      [
        "('c & ('a -> 'f & ('e -> 'g)) -> 'b & lst(tuple0) -> ('a -> 'h) | ('a -> 'a)) | 'd",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'c" ],
    "constr": [
      [ "'c", "('b & lst(tuple0) -> ('a -> 'd) | ('a -> 'a)) | 'c" ],
      [ "('b & lst(tuple0) -> ('a -> 'd) | ('a -> 'a)) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "'b \\ ('a -> 'd & ('c -> 'e))" ],
      [ "'b \\ ('a -> 'd & ('c -> 'e))", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "arrow | 'a" ], [ "arrow | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "('a -> arrow) -> lst(tuple0) -> 'a -> 'a", "arrow" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "('a -> 'b -> 'a) -> lst(any, x2) & lst('b, x3) | lst(tuple0) -> 'a -> 'a where x1 = lst(tuple0 | (any, x1)) and x2 = lst(any, x2) & lst('b, x1) | lst(tuple0) and x3 = lst(tuple0 | (any, x3))",
        "('a -> arrow) -> lst(tuple0) -> 'a -> 'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "('a -> 'b -> 'a) -> lst(any, x3) & lst('b, x1) | lst(tuple0) -> 'a -> any where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = lst(any, x3) & lst('b, x2) | lst(tuple0)",
        "('a -> 'b -> 'a) -> lst(any, x2) & lst('b, x3) | lst(tuple0) -> 'a -> 'a where x1 = lst(tuple0 | (any, x1)) and x2 = lst(any, x2) & lst('b, x1) | lst(tuple0) and x3 = lst(tuple0 | (any, x3))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "('a -> 'b -> empty) -> lst(any, x3) & lst('b, x2) | lst(tuple0) -> 'a -> 'a where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = lst(any, x3) & lst('b, x1) | lst(tuple0)",
        "('a -> 'b -> 'a) -> lst(any, x3) & lst('b, x1) | lst(tuple0) -> 'a -> 'a where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = lst(any, x3) & lst('b, x2) | lst(tuple0)"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "('a -> 'b -> 'a) -> lst(any, x2) & lst('b, x3) | lst(tuple0) -> 'a -> 'a where x1 = lst(tuple0 | (any, x1)) and x2 = lst(any, x2) & lst('b, x1) | lst(tuple0) and x3 = lst(tuple0 | (any, x3))",
        "('a -> 'b -> 'a) -> lst(any, x2) & lst('b, x3) | lst(tuple0) -> 'a -> any where x1 = lst(tuple0 | (any, x1)) and x2 = lst(any, x2) & lst('b, x1) | lst(tuple0) and x3 = lst(tuple0 | (any, x3))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "('a -> 'b -> 'a) -> lst(any, x3) & lst('b, x2) | lst(tuple0) -> 'a -> 'a where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = lst(any, x3) & lst('b, x1) | lst(tuple0)",
        "('a -> 'b -> empty) -> lst(any, x2) & lst('b, x3) | lst(tuple0) -> 'a -> 'a where x1 = lst(tuple0 | (any, x1)) and x2 = lst(any, x2) & lst('b, x1) | lst(tuple0) and x3 = lst(tuple0 | (any, x3))"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a \\ lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a & (lst(any, x1) | lst(tuple0)) where x1 = lst(tuple0 | (any, x1))"
      ],
      [
        "'a & (lst(any, x1) | lst(tuple0)) where x1 = lst(tuple0 | (any, x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(any, x1) where x1 = lst(tuple0 | (any, x1))",
        "lst(any, 'b & lst(x1)) where x1 = tuple0 | (any, lst(x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(any, lst(x1)) \\ lst(any, 'b & lst(x1))) where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "'a \\ (lst(any, lst(x1)) \\ lst(any, 'b & lst(x1))) where x1 = tuple0 | (any, lst(x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(any, 'b & lst(x1)) where x1 = tuple0 | (any, lst(x1))",
        "lst('c, x1) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(any, 'b & lst(x2)) \\ lst('c, x1)) where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2))"
      ],
      [
        "'a \\ (lst(any, 'b & lst(x2)) \\ lst('c, x1)) where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'a", "'b -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'a", "'a & ('b -> 'c)" ], [ "'a & ('b -> 'c)", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [ [ "'b", "'a & ('c -> 'd) -> 'e" ] ],
    "prio": [ "'a", "'b", "'c", "'d" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'b", "'c", "'d" ],
    "constr": [
      [ "'b", "'b & ('a & ('c -> 'd) -> 'e)" ],
      [ "'b & ('a & ('c -> 'd) -> 'e)", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'b", "'a -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b & ('a -> 'c)" ], [ "'b & ('a -> 'c)", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "'b", "'a & lst(x1) -> 'c where x1 = tuple0 | (any, lst(x1))" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b", "'b & ('a & lst(x1) -> 'c) where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "'b & ('a & lst(x1) -> 'c) where x1 = tuple0 | (any, lst(x1))", "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'a", "'b -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'a", "'a & ('b -> 'c)" ], [ "'a & ('b -> 'c)", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [
      "'a", "'b", "'c", "'d", "'e", "'f", "'g", "'h", "'i", "'j", "'k"
    ],
    "mono": [],
    "constr": [
      [
        "'c & ('f -> 'g & ('j -> 'k)) -> 'b -> 'a & (lst('f, x1) & lst(any, 'e & lst(x2)) | lst(tuple0)) -> 'k | 'b where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2))",
        "'d & ('c & ('f -> 'g & ('j -> 'k)) -> 'h & ('b -> 'i & ('e & lst(x1) -> 'j))) where x1 = tuple0 | (any, lst(x1))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'b & (lst(x2) & lst('c, x1) | lst(tuple0)) | 'a where x1 = lst(tuple0 | (any, x1)) and x2 = any, 'b & (lst(x2) & lst('c, x1) | lst(tuple0))"
      ],
      [
        "'b & (lst(x1) & lst('c, x2) | lst(tuple0)) | 'a where x1 = any, 'b & (lst(x1) & lst('c, x2) | lst(tuple0)) and x2 = lst(tuple0 | (any, x2))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'c & 'a | 'b & 'a" ], [ "'c & 'a | 'b & 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g", "'h", "'i" ],
    "mono": [ "'d" ],
    "constr": [
      [
        "'d",
        "('c & ('f -> 'g & ('i | 'h -> 'i)) -> 'i & 'b | 'h & 'b -> 'e & (lst(any, x2) & lst('f, x3) | lst(tuple0)) | 'a & (lst(any, x2) & lst('f, x3) | lst(tuple0)) -> 'i | 'h & 'b) | 'd where x1 = lst(tuple0 | (any, x1)) and x2 = 'e & (lst(any, x2) & lst('f, x1) | lst(tuple0)) and x3 = lst(tuple0 | (any, x3))"
      ],
      [
        "('c & ('f -> 'g & ('i | 'h -> 'i)) -> 'i & 'b | 'h & 'b -> 'e & (lst(any, x3) & lst('f, x1) | lst(tuple0)) | 'a & (lst(any, x3) & lst('f, x1) | lst(tuple0)) -> 'i | 'h & 'b) | 'd where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = 'e & (lst(any, x3) & lst('f, x2) | lst(tuple0))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(x3) & ~lst('b, x2) & ~lst(tuple0) | lst(x3) & ~lst(x1) & ~lst(tuple0)) where x1 = any, 'a & (lst(x1) & lst('b, x2) | lst(tuple0)) and x2 = lst(tuple0 | (any, x2)) and x3 = tuple0 | (any, lst(x3))"
      ],
      [
        "'a \\ (lst(x3) & ~lst('b, x1) & ~lst(tuple0) | lst(x3) & ~lst(x2) & ~lst(tuple0)) where x1 = lst(tuple0 | (any, x1)) and x2 = any, 'a & (lst(x2) & lst('b, x1) | lst(tuple0)) and x3 = tuple0 | (any, lst(x3))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g" ],
    "mono": [ "'e" ],
    "constr": [
      [
        "'e",
        "('g & 'b | 'f & 'b -> 'c & (lst(any, x2) & lst('d, x3) | lst(tuple0)) | 'a & (lst(any, x2) & lst('d, x3) | lst(tuple0)) -> 'g | 'f & 'b) | 'e where x1 = lst(tuple0 | (any, x1)) and x2 = 'c & (lst(any, x2) & lst('d, x1) | lst(tuple0)) and x3 = lst(tuple0 | (any, x3))"
      ],
      [
        "('g & 'b | 'f & 'b -> 'c & (lst(any, x2) & lst('d, x3) | lst(tuple0)) | 'a & (lst(any, x2) & lst('d, x3) | lst(tuple0)) -> 'g | 'f & 'b) | 'e where x1 = lst(tuple0 | (any, x1)) and x2 = 'c & (lst(any, x2) & lst('d, x1) | lst(tuple0)) and x3 = lst(tuple0 | (any, x3))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g" ],
    "mono": [ "'e" ],
    "constr": [
      [
        "'e",
        "('c & (lst(any, x3) & lst('d, x1) | lst(tuple0)) | 'a & (lst(any, x3) & lst('d, x1) | lst(tuple0)) -> 'g | 'f & 'b) | 'e where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = 'c & (lst(any, x3) & lst('d, x2) | lst(tuple0))"
      ],
      [
        "('c & (lst(any, x3) & lst('d, x1) | lst(tuple0)) | 'a & (lst(any, x3) & lst('d, x1) | lst(tuple0)) -> 'g | 'f & 'b) | 'e where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = 'c & (lst(any, x3) & lst('d, x2) | lst(tuple0))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'b | 'a" ], [ "'b | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'b & (lst(x2) & lst('c, x1) | lst(tuple0)) | 'a where x1 = lst(tuple0 | (any, x1)) and x2 = any, 'b & (lst(x2) & lst('c, x1) | lst(tuple0))"
      ],
      [
        "'b & (lst(x2) & lst('c, x1) | lst(tuple0)) | 'a where x1 = lst(tuple0 | (any, x1)) and x2 = any, 'b & (lst(x2) & lst('c, x1) | lst(tuple0))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g", "'h" ],
    "mono": [ "'d" ],
    "constr": [
      [
        "'d",
        "('c & ('f -> 'g & (any -> 'h)) -> 'b -> 'e & (lst(any, x2) & lst('f, x3) | lst(tuple0)) | 'a & (lst(any, x2) & lst('f, x3) | lst(tuple0)) -> 'h | 'b) | 'd where x1 = lst(tuple0 | (any, x1)) and x2 = 'e & (lst(any, x2) & lst('f, x1) | lst(tuple0)) and x3 = lst(tuple0 | (any, x3))"
      ],
      [
        "('c & ('f -> 'g & (any -> 'h)) -> 'b -> 'e & (lst(any, x3) & lst('f, x2) | lst(tuple0)) | 'a & (lst(any, x3) & lst('f, x2) | lst(tuple0)) -> 'h | 'b) | 'd where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = 'e & (lst(any, x3) & lst('f, x1) | lst(tuple0))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(x2) & ~lst('b, x1) & ~lst(tuple0) | lst(x2) & ~lst(x3) & ~lst(tuple0)) where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = any, 'a & (lst(x3) & lst('b, x1) | lst(tuple0))"
      ],
      [
        "'a \\ (lst(x2) & ~lst('b, x1) & ~lst(tuple0) | lst(x2) & ~lst(x3) & ~lst(tuple0)) where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = any, 'a & (lst(x3) & lst('b, x1) | lst(tuple0))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'e" ],
    "constr": [
      [
        "'e",
        "('b -> 'c & (lst(any, x2) & lst('d, x3) | lst(tuple0)) | 'a & (lst(any, x2) & lst('d, x3) | lst(tuple0)) -> 'f | 'b) | 'e where x1 = lst(tuple0 | (any, x1)) and x2 = 'c & (lst(any, x2) & lst('d, x1) | lst(tuple0)) and x3 = lst(tuple0 | (any, x3))"
      ],
      [
        "('b -> 'c & (lst(any, x3) & lst('d, x1) | lst(tuple0)) | 'a & (lst(any, x3) & lst('d, x1) | lst(tuple0)) -> 'f | 'b) | 'e where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = 'c & (lst(any, x3) & lst('d, x2) | lst(tuple0))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'e" ],
    "constr": [
      [
        "'e",
        "('c & (lst(any, x3) & lst('d, x1) | lst(tuple0)) | 'a & (lst(any, x3) & lst('d, x1) | lst(tuple0)) -> 'f | 'b) | 'e where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = 'c & (lst(any, x3) & lst('d, x2) | lst(tuple0))"
      ],
      [
        "('c & (lst(any, x2) & lst('d, x3) | lst(tuple0)) | 'a & (lst(any, x2) & lst('d, x3) | lst(tuple0)) -> 'f | 'b) | 'e where x1 = lst(tuple0 | (any, x1)) and x2 = 'c & (lst(any, x2) & lst('d, x1) | lst(tuple0)) and x3 = lst(tuple0 | (any, x3))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g", "'h" ],
    "mono": [ "'d" ],
    "constr": [
      [
        "'d",
        "('c & ('e -> 'f & ('g -> 'h)) -> 'b -> 'a & lst(tuple0) -> 'h | 'b) | 'd"
      ],
      [
        "('c & ('e -> 'f & ('g -> 'h)) -> 'b -> 'a & lst(tuple0) -> 'h | 'b) | 'd",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'c" ],
    "constr": [
      [ "'c", "('b -> 'a & lst(tuple0) -> 'd | 'b) | 'c" ],
      [ "('b -> 'a & lst(tuple0) -> 'd | 'b) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'c" ],
    "constr": [
      [ "'c", "('a & lst(tuple0) -> 'd | 'b) | 'c" ],
      [ "('a & lst(tuple0) -> 'd | 'b) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "('a & ('c -> 'd & ('e -> 'f)) -> arrow) | 'b" ],
      [ "('a & ('c -> 'd & ('e -> 'f)) -> arrow) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "arrow | 'a" ], [ "arrow | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ ('b -> 'c & ('d -> 'e))" ],
      [ "'a \\ ('b -> 'c & ('d -> 'e))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "arrow | 'a" ], [ "arrow | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "arrow -> arrow", "arrow" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [ "arrow -> 'a -> lst(tuple0) -> 'b | 'a", "arrow -> arrow" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "('b -> any -> 'c) -> 'a -> lst(any, x2) & lst('b, x3) | lst(tuple0) -> 'c | 'a where x1 = lst(tuple0 | (any, x1)) and x2 = lst(any, x2) & lst('b, x1) | lst(tuple0) and x3 = lst(tuple0 | (any, x3))",
        "arrow -> 'a -> lst(tuple0) -> 'c | 'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b", "'d" ],
    "constr": [
      [
        "('b -> 'c | 'a -> 'c) -> 'a -> lst(any, x2) & lst('b, x3) | lst(tuple0) -> 'c | 'a where x1 = lst(tuple0 | (any, x1)) and x2 = lst(any, x2) & lst('b, x1) | lst(tuple0) and x3 = lst(tuple0 | (any, x3))",
        "('b -> any -> 'd) -> 'a -> lst(any, x3) & lst('b, x2) | lst(tuple0) -> 'd | 'a where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = lst(any, x3) & lst('b, x1) | lst(tuple0)"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Nil | Node(tuple5)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "any, any, any, any, 'b"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "any" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "Nil | Node(tuple5)" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "x1 -> int where x1 = Nil | Node(x1, Key, 'a, x1, int)", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b", "(x1 -> int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1 -> int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)", "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('b, 'b) -> bool(true | false)", "'a -> ~bool(true)" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('b, 'b) -> bool(true | false)", "'a -> bool(true)" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "x1 -> int where x1 = Nil | Node(x1, Key, any, x1, int)", "'a -> 'b"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a & (Nil | Node(x1)) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int"
      ],
      [
        "'a & (Nil | Node(x1)) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "empty" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "x1 -> int where x1 = Nil | Node(x1, Key, any, x1, int)", "'a -> 'b"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a & (Nil | Node(x1)) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int"
      ],
      [
        "'a & (Nil | Node(x1)) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "empty" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int", "any" ], [ "int", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('a, 'a) -> bool(true | false)", "(int, int) -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ], [ "1", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(int, 1) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ], [ "1", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(int, 1) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [
        "'d & (Nil | Node(x1)) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int",
        "any"
      ],
      [ "'c", "any" ],
      [ "'b", "any" ],
      [
        "'a & (Nil | Node(x1)) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int",
        "any"
      ],
      [ "int", "any" ]
    ],
    "prio": [ "'a", "'b", "'c", "'d" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [
        "'d & (Nil | Node(x2)), 'c, 'b, 'a & (Nil | Node(x1)), int where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int",
        "any"
      ]
    ],
    "prio": [ "'a", "'b", "'c", "'d" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [
      [
        "x4 -> 'c -> 'b -> x2 -> Node(x4, 'c, 'b, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'a & (Nil | Node(x1)) and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int and x4 = 'd & (Nil | Node(x3))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'e" ],
    "constr": [
      [
        "'e",
        "(x4 -> 'c -> 'b -> x3 -> Node(x4, 'c, 'b, x3, int)) | 'e where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'a & (Nil | Node(x2)) and x4 = 'd & (Nil | Node(x1))"
      ],
      [
        "(x4 -> 'c -> 'b -> x3 -> Node(x4, 'c, 'b, x3, int)) | 'e where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'a & (Nil | Node(x2)) and x4 = 'd & (Nil | Node(x1))",
        "'e"
      ]
    ]
  },
  { "vars": [], "mono": [], "constr": [] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)", "'b" ],
      [ "'b", "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)" ],
      [ "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)", "'b" ],
      [ "'b", "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "Key", "'a" ], [ "'a", "Key" ], [ "Key", "'a" ], [ "'a", "Key" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'b" ], [ "'b", "'a" ], [ "'a", "'b" ], [ "'b", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)", "'b" ],
      [ "'b", "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)" ],
      [ "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)", "'b" ],
      [ "'b", "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('b, 'b) -> bool(true | false)", "'a -> ~bool(true)" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('b, 'b) -> bool(true | false)", "'a -> bool(true)" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('b, 'b) -> bool(true | false)", "'a -> ~bool(true)" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('b, 'b) -> bool(true | false)", "'a -> bool(true)" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('b, 'b) -> bool(true | false)", "'a -> ~bool(true)" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('b, 'b) -> bool(true | false)", "'a -> bool(true)" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('b, 'b) -> bool(true | false)", "'a -> ~bool(true)" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('b, 'b) -> bool(true | false)", "'a -> bool(true)" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('b, 'b) -> bool(true | false)", "'a -> ~bool(true)" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('b, 'b) -> bool(true | false)", "'a -> bool(true)" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "Nil | Node(tuple5)" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "Nil | Node(tuple5)" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "0", "any" ], [ "2", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(0, 2) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "0", "any" ], [ "int", "any" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('a, 'a) -> bool(true | false)", "(0, int) -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "Nil | Node(tuple5)" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "str(enum) -> empty", "str(_Map_bal) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "empty", "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)" ]
    ],
    "prio": [ "'a" ]
  },
  { "vars": [], "mono": [], "constr": [ [ "0", "any" ], [ "2", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(0, 2) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "0", "any" ], [ "int", "any" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('a, 'a) -> bool(true | false)", "(0, int) -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "Nil | Node(tuple5)" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "str(enum) -> empty", "str(_Map_bal) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "empty", "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)" ]
    ],
    "prio": [ "'a" ]
  },
  { "vars": [], "mono": [], "constr": [ [ "0", "any" ], [ "0", "any" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('a, 'a) -> bool(true | false)", "(0, 0) -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "0 | 'a" ], [ "0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "0", "any" ], [ "1", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(0, 1) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "0", "any" ], [ "1", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(0, 1) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "Nil", "any" ],
      [ "Key", "any" ],
      [ "'a", "any" ],
      [ "Nil", "any" ],
      [ "int", "any" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "Nil, Key, 'a, Nil, int", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(Nil, Key, 'a, Nil, int)",
        "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "Nil | Node(tuple5)" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(~Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Nil | Node(tuple5)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(~Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, any, any, any, 'b"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ], [ "2", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(int, 2) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "0", "any" ], [ "int", "any" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('a, 'a) -> bool(true | false)", "(0, int) -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "Nil | Node(tuple5)" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "str(enum) -> empty", "str(_Map_bal) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "empty", "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)" ]
    ],
    "prio": [ "'a" ]
  },
  { "vars": [], "mono": [], "constr": [ [ "0", "any" ], [ "2", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(0, 2) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int", "any" ], [ "int", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('a, 'a) -> bool(true | false)", "(int, int) -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(~Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Nil | Node(tuple5)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(~Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, any, any, 'b, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(~Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, any, 'b, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(~Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, 'b, any, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(~Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b, any, any, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 -> int where x1 = Nil | Node(x1, Key, any, x1, int)",
        "x1 -> 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 -> int where x1 = Nil | Node(x1, Key, any, x1, int)",
        "Node(x1) -> 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int", "any" ], [ "int", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('a, 'a) -> bool(true | false)", "(int, int) -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [
      [
        "x3 -> 'c -> 'b -> x1 -> Node(x3, 'c, 'b, x1, int) where x1 = 'a & (Nil | Node(x2)) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'd & (Nil | Node(x2))",
        "Nil -> 'e"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Nil | 'a" ], [ "Nil | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'e" ],
    "constr": [
      [
        "'e",
        "('c -> 'b -> x2 -> Node(Nil | 'd & (Nil | Node(x1)), 'c, 'b, x2, int)) | 'e where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'a & (Nil | Node(x1))"
      ],
      [
        "('c -> 'b -> x2 -> Node(Nil | 'd & (Nil | Node(x1)), 'c, 'b, x2, int)) | 'e where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'a & (Nil | Node(x1))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [
        "'c -> 'b -> x2 -> Node(Nil, 'c, 'b, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'a & (Nil | Node(x1))",
        "Key -> 'd"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'d" ],
    "constr": [
      [
        "'d",
        "('b -> x2 -> Node(Nil, Key | 'c, 'b, x2, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'a & (Nil | Node(x1))"
      ],
      [
        "('b -> x2 -> Node(Nil, Key | 'c, 'b, x2, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'a & (Nil | Node(x1))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x2 -> Node(Nil, Key, 'c, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1))",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x2 -> Node(Nil, Key, 'c | 'a, x2, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1))"
      ],
      [
        "(x2 -> Node(Nil, Key, 'c | 'a, x2, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x2 -> Node(Nil, Key, 'a, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1))",
        "Node(x1) -> 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(Nil, Key, 'a, Node(x1) | 'b & (Nil | Node(x2)), int) | 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int"
      ],
      [
        "Node(Nil, Key, 'a, Node(x1) | 'b & (Nil | Node(x2)), int) | 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> 'd -> 'c -> x2 -> Node(x3, 'd, 'c, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = 'e & (Nil | Node(x1))",
        "Node(Nil, Key, 'a, Node(x1), int) -> 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(Nil, Key, 'a, Node(x1), int) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Node(Nil, Key, 'a, Node(x1), int) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'f" ],
    "constr": [
      [
        "'f",
        "('d -> 'c -> x3 -> Node(Node(Nil, Key, 'a, Node(x1), int) | 'e & (Nil | Node(x2)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "('d -> 'c -> x3 -> Node(Node(Nil, Key, 'a, Node(x1), int) | 'e & (Nil | Node(x2)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'f"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'d -> 'c -> x3 -> Node(Node(Nil, Key, 'a, Node(x1), int), 'd, 'c, x3, int) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "Key -> 'e"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'e" ],
    "constr": [
      [
        "'e",
        "('c -> x2 -> Node(Node(Nil, Key, 'a, Node(x3), int), Key | 'd, 'c, x2, int)) | 'e where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3), Key, 'a, Nil | Node(x3), int"
      ],
      [
        "('c -> x2 -> Node(Node(Nil, Key, 'a, Node(x3), int), Key | 'd, 'c, x2, int)) | 'e where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3), Key, 'a, Nil | Node(x3), int",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x3 -> Node(Node(Nil, Key, 'a, Node(x1), int), Key, 'c, x3, int) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x3 -> Node(Node(Nil, Key, 'a, Node(x1), int), Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "(x3 -> Node(Node(Nil, Key, 'a, Node(x1), int), Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> Node(Node(Nil, Key, 'a, Node(x1), int), Key, 'a, x3, int) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "x1 -> 'c where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(Node(Nil, Key, 'a, Node(x1), int), Key, 'a, Nil | Node(x2) | 'b & (Nil | Node(x3)), int) | 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int"
      ],
      [
        "Node(Node(Nil, Key, 'a, Node(x1), int), Key, 'a, Nil | Node(x2) | 'b & (Nil | Node(x3)), int) | 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(Node(Nil, Key, 'a, Node(x1), int), Key, 'a, x2, int) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int)",
        "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Nil | Node(tuple5)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "any, any, any, 'b, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "any, any, 'b, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "any, 'b, any, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b, any, any, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [
      [
        "x3 -> 'c -> 'b -> x2 -> Node(x3, 'c, 'b, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'a & (Nil | Node(x1)) and x3 = 'd & (Nil | Node(x1))",
        "Nil -> 'e"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Nil | 'a" ], [ "Nil | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'e" ],
    "constr": [
      [
        "'e",
        "('c -> 'b -> x2 -> Node(Nil | 'd & (Nil | Node(x1)), 'c, 'b, x2, int)) | 'e where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'a & (Nil | Node(x1))"
      ],
      [
        "('c -> 'b -> x2 -> Node(Nil | 'd & (Nil | Node(x1)), 'c, 'b, x2, int)) | 'e where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'a & (Nil | Node(x1))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [
        "'c -> 'b -> x2 -> Node(Nil, 'c, 'b, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'a & (Nil | Node(x1))",
        "Key -> 'd"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'d" ],
    "constr": [
      [
        "'d",
        "('b -> x2 -> Node(Nil, Key | 'c, 'b, x2, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'a & (Nil | Node(x1))"
      ],
      [
        "('b -> x2 -> Node(Nil, Key | 'c, 'b, x2, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'a & (Nil | Node(x1))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x2 -> Node(Nil, Key, 'c, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1))",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x2 -> Node(Nil, Key, 'c | 'a, x2, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1))"
      ],
      [
        "(x2 -> Node(Nil, Key, 'c | 'a, x2, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x2 -> Node(Nil, Key, 'a, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1))",
        "x1 -> 'c where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(Nil, Key, 'a, Nil | Node(x2) | 'b & (Nil | Node(x1)), int) | 'c where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int"
      ],
      [
        "Node(Nil, Key, 'a, Nil | Node(x2) | 'b & (Nil | Node(x1)), int) | 'c where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> 'd -> 'c -> x2 -> Node(x3, 'd, 'c, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = 'e & (Nil | Node(x1))",
        "Node(Nil, Key, 'a, x1, int) -> 'f where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(Nil, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "Node(Nil, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'f" ],
    "constr": [
      [
        "'f",
        "('d -> 'c -> x2 -> Node(Node(Nil, Key, 'a, x1, int) | 'e & (Nil | Node(x3)), 'd, 'c, x2, int)) | 'f where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = 'b & (Nil | Node(x3)) and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int"
      ],
      [
        "('d -> 'c -> x2 -> Node(Node(Nil, Key, 'a, x1, int) | 'e & (Nil | Node(x3)), 'd, 'c, x2, int)) | 'f where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = 'b & (Nil | Node(x3)) and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int",
        "'f"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'d -> 'c -> x3 -> Node(Node(Nil, Key, 'a, x1, int), 'd, 'c, x3, int) where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "Key -> 'e"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'e" ],
    "constr": [
      [
        "'e",
        "('c -> x3 -> Node(Node(Nil, Key, 'a, x1, int), Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "('c -> x3 -> Node(Node(Nil, Key, 'a, x1, int), Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x3 -> Node(Node(Nil, Key, 'a, x2, int), Key, 'c, x3, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = 'b & (Nil | Node(x1))",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x2 -> Node(Node(Nil, Key, 'a, x3, int), Key, 'c | 'a, x2, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3, Key, 'a, x3, int)"
      ],
      [
        "(x2 -> Node(Node(Nil, Key, 'a, x3, int), Key, 'c | 'a, x2, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3, Key, 'a, x3, int)",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> 'd -> 'c -> x2 -> Node(x3, 'd, 'c, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = 'e & (Nil | Node(x1))",
        "x1 -> 'f where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'f" ],
    "constr": [
      [
        "'f",
        "('d -> 'c -> x3 -> Node(Nil | Node(x2) | 'e & (Nil | Node(x1)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x1))"
      ],
      [
        "('d -> 'c -> x3 -> Node(Nil | Node(x2) | 'e & (Nil | Node(x1)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x1))",
        "'f"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'d -> 'c -> x3 -> Node(x2, 'd, 'c, x3, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = 'b & (Nil | Node(x1))",
        "Key -> 'e"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'e" ],
    "constr": [
      [
        "'e",
        "('c -> x3 -> Node(x1, Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "('c -> x3 -> Node(x1, Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x3 -> Node(x2, Key, 'c, x3, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = 'b & (Nil | Node(x1))",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x3 -> Node(x1, Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "(x2 -> Node(x3, Key, 'c | 'a, x2, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3, Key, 'a, x3, int)",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> Node(x1, Key, 'a, x3, int) where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "x1 -> 'c where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(x1, Key, 'a, Nil | Node(x3) | 'b & (Nil | Node(x2)), int) | 'c where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, 'a, Nil | Node(x3), int"
      ],
      [
        "Node(x1, Key, 'a, Nil | Node(x3) | 'b & (Nil | Node(x2)), int) | 'c where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, 'a, Nil | Node(x3), int",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> Node(Node(Nil, Key, 'a, x2, int), Key, 'a, x3, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = 'b & (Nil | Node(x1))",
        "Node(x2, Key, 'a, x1, int) -> 'c where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2, Key, 'a, x2, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(x2, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2, Key, 'a, x2, int)"
      ],
      [
        "Node(x1, Key, 'a, x2, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2, Key, 'a, x2, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(Node(Nil, Key, 'a, x1, int), Key, 'a, Node(x2, Key, 'a, x3, int) | 'b & (Nil | Node(x4)), int) | 'c where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3, Key, 'a, x3, int) and x4 = Nil | Node(x4), Key, any, Nil | Node(x4), int"
      ],
      [
        "Node(Node(Nil, Key, 'a, x3, int), Key, 'a, Node(x2, Key, 'a, x1, int) | 'b & (Nil | Node(x4)), int) | 'c where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3, Key, 'a, x3, int) and x4 = Nil | Node(x4), Key, any, Nil | Node(x4), int",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(Node(Nil, Key, 'a, x1, int), Key, 'a, Node(x3, Key, 'a, x2, int), int) where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3, Key, 'a, x3, int)",
        "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  { "vars": [], "mono": [], "constr": [ [ "0", "any" ], [ "int", "any" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('a, 'a) -> bool(true | false)", "(0, int) -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "0", "any" ], [ "1", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(0, 1) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ], [ "1", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(int, 1) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "Nil", "any" ],
      [ "Key", "any" ],
      [ "'a", "any" ],
      [
        "Node(x1) & Node(~Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "any"
      ],
      [ "int", "any" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Nil, Key, 'a, Node(x1) & Node(~Nil, any, any, any, any), int where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(Nil, Key, 'a, Node(x1) & Node(~Nil, any, any, any, any), int) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "Nil | Node(tuple5)" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Nil | Node(tuple5)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) & (Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) & (Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) & (Nil, any, any, any, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, any, any, any, 'b"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ], [ "2", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(int, 2) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "0", "any" ], [ "int", "any" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('a, 'a) -> bool(true | false)", "(0, int) -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "Nil | Node(tuple5)" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "str(enum) -> empty", "str(_Map_bal) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "empty", "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)" ]
    ],
    "prio": [ "'a" ]
  },
  { "vars": [], "mono": [], "constr": [ [ "0", "any" ], [ "2", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(0, 2) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int", "any" ], [ "int", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('a, 'a) -> bool(true | false)", "(int, int) -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Nil | Node(tuple5)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) \\ Node(~Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) \\ (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) \\ (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) \\ (~Nil, any, any, any, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, any, any, 'b, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) \\ Node(~Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) \\ (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) \\ (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) \\ (~Nil, any, any, any, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, any, 'b, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) \\ Node(~Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) \\ (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) \\ (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) \\ (~Nil, any, any, any, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, 'b, any, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) \\ Node(~Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) \\ (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) \\ (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) \\ (~Nil, any, any, any, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b, any, any, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Nil | 'a" ], [ "Nil | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 -> int where x1 = Nil | Node(x1, Key, any, x1, int)",
        "x1 -> 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "x1 -> int where x1 = Nil | Node(x1, Key, any, x1, int)", "Nil -> 'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int", "any" ], [ "int", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('a, 'a) -> bool(true | false)", "(int, int) -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [
      [
        "x3 -> 'c -> 'b -> x2 -> Node(x3, 'c, 'b, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'a & (Nil | Node(x1)) and x3 = 'd & (Nil | Node(x1))",
        "Nil -> 'e"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Nil | 'a" ], [ "Nil | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'e" ],
    "constr": [
      [
        "'e",
        "('c -> 'b -> x2 -> Node(Nil | 'd & (Nil | Node(x1)), 'c, 'b, x2, int)) | 'e where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'a & (Nil | Node(x1))"
      ],
      [
        "('c -> 'b -> x2 -> Node(Nil | 'd & (Nil | Node(x1)), 'c, 'b, x2, int)) | 'e where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'a & (Nil | Node(x1))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [
        "'c -> 'b -> x2 -> Node(Nil, 'c, 'b, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'a & (Nil | Node(x1))",
        "Key -> 'd"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'d" ],
    "constr": [
      [
        "'d",
        "('b -> x2 -> Node(Nil, Key | 'c, 'b, x2, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'a & (Nil | Node(x1))"
      ],
      [
        "('b -> x2 -> Node(Nil, Key | 'c, 'b, x2, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'a & (Nil | Node(x1))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x2 -> Node(Nil, Key, 'c, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1))",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x2 -> Node(Nil, Key, 'c | 'a, x2, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1))"
      ],
      [
        "(x2 -> Node(Nil, Key, 'c | 'a, x2, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x2 -> Node(Nil, Key, 'a, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1))",
        "Nil -> 'c"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Nil | 'a" ], [ "Nil | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(Nil, Key, 'a, Nil | 'b & (Nil | Node(x1)), int) | 'c where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int"
      ],
      [
        "Node(Nil, Key, 'a, Nil | 'b & (Nil | Node(x1)), int) | 'c where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 -> 'd -> 'c -> x3 -> Node(x1, 'd, 'c, x3, int) where x1 = 'e & (Nil | Node(x2)) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "Node(Nil, Key, 'a, Nil, int) -> 'f"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "Node(Nil, Key, 'a, Nil, int) | 'b" ],
      [ "Node(Nil, Key, 'a, Nil, int) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'f" ],
    "constr": [
      [
        "'f",
        "('d -> 'c -> x2 -> Node(Node(Nil, Key, 'a, Nil, int) | 'e & (Nil | Node(x1)), 'd, 'c, x2, int)) | 'f where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1))"
      ],
      [
        "('d -> 'c -> x2 -> Node(Node(Nil, Key, 'a, Nil, int) | 'e & (Nil | Node(x1)), 'd, 'c, x2, int)) | 'f where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1))",
        "'f"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'d -> 'c -> x2 -> Node(Node(Nil, Key, 'a, Nil, int), 'd, 'c, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1))",
        "Key -> 'e"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'e" ],
    "constr": [
      [
        "'e",
        "('c -> x2 -> Node(Node(Nil, Key, 'a, Nil, int), Key | 'd, 'c, x2, int)) | 'e where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1))"
      ],
      [
        "('c -> x2 -> Node(Node(Nil, Key, 'a, Nil, int), Key | 'd, 'c, x2, int)) | 'e where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x2 -> Node(Node(Nil, Key, 'a, Nil, int), Key, 'c, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1))",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x2 -> Node(Node(Nil, Key, 'a, Nil, int), Key, 'c | 'a, x2, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1))"
      ],
      [
        "(x2 -> Node(Node(Nil, Key, 'a, Nil, int), Key, 'c | 'a, x2, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x2 -> Node(Node(Nil, Key, 'a, Nil, int), Key, 'a, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1))",
        "x1 -> 'c where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(Node(Nil, Key, 'a, Nil, int), Key, 'a, Nil | Node(x2) | 'b & (Nil | Node(x1)), int) | 'c where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int"
      ],
      [
        "Node(Node(Nil, Key, 'a, Nil, int), Key, 'a, Nil | Node(x2) | 'b & (Nil | Node(x1)), int) | 'c where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(Node(Nil, Key, 'a, Nil, int), Key, 'a, x1, int) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "Nil | Node(tuple5)" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "str(enum) -> empty", "str(_Map_bal) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "empty", "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)" ]
    ],
    "prio": [ "'a" ]
  },
  { "vars": [], "mono": [], "constr": [ [ "0", "any" ], [ "int", "any" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('a, 'a) -> bool(true | false)", "(0, int) -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "0", "any" ], [ "1", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(0, 1) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ], [ "1", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(int, 1) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "Nil", "any" ],
      [ "Key", "any" ],
      [ "'a", "any" ],
      [
        "Node(x1) & Node(Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "any"
      ],
      [ "int", "any" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Nil, Key, 'a, Node(x1) & Node(Nil, any, any, any, any), int where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(Nil, Key, 'a, Node(x1) & Node(Nil, any, any, any, any), int) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(any, any, any, ~Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Nil | Node(tuple5)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(any, any, any, ~Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) & (any, any, any, ~Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) & (any, any, any, ~Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) & (any, any, any, ~Nil, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, any, any, any, 'b"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "Nil | Node(tuple5)" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "0", "any" ], [ "2", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(0, 2) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int", "any" ], [ "int", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('a, 'a) -> bool(true | false)", "(int, int) -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(any, any, any, ~Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Nil | Node(tuple5)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) \\ Node(any, any, any, Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) \\ (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) \\ (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) \\ (any, any, any, Nil, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, any, any, 'b, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) \\ Node(any, any, any, Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) \\ (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) \\ (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) \\ (any, any, any, Nil, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, any, 'b, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) \\ Node(any, any, any, Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) \\ (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) \\ (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) \\ (any, any, any, Nil, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, 'b, any, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) \\ Node(any, any, any, Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) \\ (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) \\ (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) \\ (any, any, any, Nil, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b, any, any, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 -> int where x1 = Nil | Node(x1, Key, any, x1, int)",
        "x1 -> 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 -> int where x1 = Nil | Node(x1, Key, any, x1, int)",
        "Node(x1) -> 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int", "any" ], [ "int", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('a, 'a) -> bool(true | false)", "(int, int) -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> 'd -> 'c -> x2 -> Node(x3, 'd, 'c, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = 'e & (Nil | Node(x1))",
        "x1 -> 'f where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'f" ],
    "constr": [
      [
        "'f",
        "('d -> 'c -> x3 -> Node(Nil | Node(x1) | 'e & (Nil | Node(x2)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "('d -> 'c -> x3 -> Node(Nil | Node(x1) | 'e & (Nil | Node(x2)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'f"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'d -> 'c -> x3 -> Node(x2, 'd, 'c, x3, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = 'b & (Nil | Node(x1))",
        "Key -> 'e"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'e" ],
    "constr": [
      [
        "'e",
        "('c -> x3 -> Node(x2, Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = 'b & (Nil | Node(x1))"
      ],
      [
        "('c -> x3 -> Node(x2, Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = 'b & (Nil | Node(x1))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x2 -> Node(x3, Key, 'c, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3, Key, 'a, x3, int)",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x2 -> Node(x3, Key, 'c | 'a, x2, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3, Key, 'a, x3, int)"
      ],
      [
        "(x3 -> Node(x1, Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> 'd -> 'c -> x2 -> Node(x3, 'd, 'c, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = 'e & (Nil | Node(x1))",
        "Node(x1) -> 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'f" ],
    "constr": [
      [
        "'f",
        "('d -> 'c -> x3 -> Node(Node(x1) | 'e & (Nil | Node(x2)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "('d -> 'c -> x3 -> Node(Node(x1) | 'e & (Nil | Node(x2)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'f"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'d -> 'c -> x3 -> Node(Node(x2), 'd, 'c, x3, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x1))",
        "Key -> 'e"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'e" ],
    "constr": [
      [
        "'e",
        "('c -> x3 -> Node(Node(x1), Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "('c -> x2 -> Node(Node(x3), Key | 'd, 'c, x2, int)) | 'e where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3), Key, 'a, Nil | Node(x3), int",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x3 -> Node(Node(x2), Key, 'c, x3, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x1))",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x3 -> Node(Node(x1), Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "(x3 -> Node(Node(x1), Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> Node(Node(x1), Key, 'a, x3, int) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "Nil -> 'c"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Nil | 'a" ], [ "Nil | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(Node(x2), Key, 'a, Nil | 'b & (Nil | Node(x1)), int) | 'c where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int"
      ],
      [
        "Node(Node(x2), Key, 'a, Nil | 'b & (Nil | Node(x1)), int) | 'c where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x2 -> Node(x3, Key, 'a, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3, Key, 'a, x3, int)",
        "Node(Node(x1), Key, 'a, Nil, int) -> 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(Node(x1), Key, 'a, Nil, int) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Node(Node(x1), Key, 'a, Nil, int) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(x3, Key, 'a, Node(Node(x1), Key, 'a, Nil, int) | 'b & (Nil | Node(x2)), int) | 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = Nil | Node(x3, Key, 'a, x3, int)"
      ],
      [
        "Node(x3, Key, 'a, Node(Node(x1), Key, 'a, Nil, int) | 'b & (Nil | Node(x2)), int) | 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = Nil | Node(x3, Key, 'a, x3, int)",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1, Key, 'a, Node(Node(x2), Key, 'a, Nil, int), int) where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int",
        "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Nil | Node(tuple5)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "any, any, any, 'b, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "any, any, 'b, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "any, 'b, any, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b, any, any, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> 'd -> 'c -> x2 -> Node(x3, 'd, 'c, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = 'e & (Nil | Node(x1))",
        "x1 -> 'f where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'f" ],
    "constr": [
      [
        "'f",
        "('d -> 'c -> x3 -> Node(Nil | Node(x1) | 'e & (Nil | Node(x2)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "('d -> 'c -> x3 -> Node(Nil | Node(x1) | 'e & (Nil | Node(x2)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'f"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'d -> 'c -> x3 -> Node(x2, 'd, 'c, x3, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = 'b & (Nil | Node(x1))",
        "Key -> 'e"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'e" ],
    "constr": [
      [
        "'e",
        "('c -> x3 -> Node(x1, Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "('c -> x2 -> Node(x3, Key | 'd, 'c, x2, int)) | 'e where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3, Key, 'a, x3, int)",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x2 -> Node(x3, Key, 'c, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3, Key, 'a, x3, int)",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x3 -> Node(x1, Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "(x3 -> Node(x2, Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = 'b & (Nil | Node(x1))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x2 -> Node(x3, Key, 'a, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3, Key, 'a, x3, int)",
        "x1 -> 'c where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(x3, Key, 'a, Nil | Node(x2) | 'b & (Nil | Node(x1)), int) | 'c where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3, Key, 'a, x3, int)"
      ],
      [
        "Node(x1, Key, 'a, Nil | Node(x2) | 'b & (Nil | Node(x3)), int) | 'c where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x2 -> 'd -> 'c -> x3 -> Node(x2, 'd, 'c, x3, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'e & (Nil | Node(x1)) and x3 = 'b & (Nil | Node(x1))",
        "Node(x1, Key, 'a, x2, int) -> 'f where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2, Key, 'a, x2, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(x2, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2, Key, 'a, x2, int)"
      ],
      [
        "Node(x1, Key, 'a, x2, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2, Key, 'a, x2, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'f" ],
    "constr": [
      [
        "'f",
        "('d -> 'c -> x2 -> Node(Node(x3, Key, 'a, x4, int) | 'e & (Nil | Node(x1)), 'd, 'c, x2, int)) | 'f where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3, Key, 'a, x3, int) and x4 = Nil | Node(x4, Key, 'a, x4, int)"
      ],
      [
        "('d -> 'c -> x2 -> Node(Node(x3, Key, 'a, x4, int) | 'e & (Nil | Node(x1)), 'd, 'c, x2, int)) | 'f where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3, Key, 'a, x3, int) and x4 = Nil | Node(x4, Key, 'a, x4, int)",
        "'f"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'d -> 'c -> x4 -> Node(Node(x2, Key, 'a, x1, int), 'd, 'c, x4, int) where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int and x4 = 'b & (Nil | Node(x3))",
        "Key -> 'e"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'e" ],
    "constr": [
      [
        "'e",
        "('c -> x4 -> Node(Node(x3, Key, 'a, x2, int), Key | 'd, 'c, x4, int)) | 'e where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3, Key, 'a, x3, int) and x4 = 'b & (Nil | Node(x1))"
      ],
      [
        "('c -> x4 -> Node(Node(x3, Key, 'a, x2, int), Key | 'd, 'c, x4, int)) | 'e where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3, Key, 'a, x3, int) and x4 = 'b & (Nil | Node(x1))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x4 -> Node(Node(x2, Key, 'a, x3, int), Key, 'c, x4, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3, Key, 'a, x3, int) and x4 = 'b & (Nil | Node(x1))",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x4 -> Node(Node(x1, Key, 'a, x2, int), Key, 'c | 'a, x4, int)) | 'd where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int and x4 = 'b & (Nil | Node(x3))"
      ],
      [
        "(x4 -> Node(Node(x2, Key, 'a, x1, int), Key, 'c | 'a, x4, int)) | 'd where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int and x4 = 'b & (Nil | Node(x3))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> 'd -> 'c -> x2 -> Node(x3, 'd, 'c, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = 'e & (Nil | Node(x1))",
        "x1 -> 'f where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'f" ],
    "constr": [
      [
        "'f",
        "('d -> 'c -> x3 -> Node(Nil | Node(x1) | 'e & (Nil | Node(x2)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "('d -> 'c -> x3 -> Node(Nil | Node(x1) | 'e & (Nil | Node(x2)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'f"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'d -> 'c -> x2 -> Node(x3, 'd, 'c, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3, Key, 'a, x3, int)",
        "Key -> 'e"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'e" ],
    "constr": [
      [
        "'e",
        "('c -> x3 -> Node(x1, Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "('c -> x3 -> Node(x2, Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = 'b & (Nil | Node(x1))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x2 -> Node(x3, Key, 'c, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3, Key, 'a, x3, int)",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x3 -> Node(x1, Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "(x3 -> Node(x1, Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> Node(x1, Key, 'a, x3, int) where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "Nil -> 'c"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Nil | 'a" ], [ "Nil | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(x1, Key, 'a, Nil | 'b & (Nil | Node(x2)), int) | 'c where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int"
      ],
      [
        "Node(x1, Key, 'a, Nil | 'b & (Nil | Node(x2)), int) | 'c where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x4 -> Node(Node(x1, Key, 'a, x2, int), Key, 'a, x4, int) where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int and x4 = 'b & (Nil | Node(x3))",
        "Node(x1, Key, 'a, Nil, int) -> 'c where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(x1, Key, 'a, Nil, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "Node(x1, Key, 'a, Nil, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(Node(x2, Key, 'a, x1, int), Key, 'a, Node(x3, Key, 'a, Nil, int) | 'b & (Nil | Node(x4)), int) | 'c where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3, Key, 'a, x3, int) and x4 = Nil | Node(x4), Key, any, Nil | Node(x4), int"
      ],
      [
        "Node(Node(x2, Key, 'a, x3, int), Key, 'a, Node(x1, Key, 'a, Nil, int) | 'b & (Nil | Node(x4)), int) | 'c where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3, Key, 'a, x3, int) and x4 = Nil | Node(x4), Key, any, Nil | Node(x4), int",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(Node(x2, Key, 'a, x1, int), Key, 'a, Node(x3, Key, 'a, Nil, int), int) where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3, Key, 'a, x3, int)",
        "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ], [ "2", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(int, 2) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "0", "any" ], [ "int", "any" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('a, 'a) -> bool(true | false)", "(0, int) -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "Nil | Node(tuple5)" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "str(enum) -> empty", "str(_Map_bal) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "empty", "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)" ]
    ],
    "prio": [ "'a" ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ], [ "0", "any" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('a, 'a) -> bool(true | false)", "(int, 0) -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ], [ "1", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(int, 1) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "0", "any" ], [ "1", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(0, 1) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(any, any, any, ~Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "any"
      ],
      [ "Key", "any" ],
      [ "'a", "any" ],
      [ "Nil", "any" ],
      [ "int", "any" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(any, any, any, ~Nil, any), Key, 'a, Nil, int where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(Node(x1) & Node(any, any, any, ~Nil, any), Key, 'a, Nil, int) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(any, any, any, ~Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Nil | Node(tuple5)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(any, any, any, ~Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) & (any, any, any, ~Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) & (any, any, any, ~Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) & (any, any, any, ~Nil, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, any, any, any, 'b"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(~Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Nil | Node(tuple5)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(~Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, any, any, any, 'b"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ], [ "2", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(int, 2) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int", "any" ], [ "int", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('a, 'a) -> bool(true | false)", "(int, int) -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(any, any, any, ~Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Nil | Node(tuple5)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) \\ Node(any, any, any, Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) \\ (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) \\ (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) \\ (any, any, any, Nil, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, any, any, 'b, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) \\ Node(any, any, any, Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) \\ (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) \\ (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) \\ (any, any, any, Nil, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, any, 'b, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) \\ Node(any, any, any, Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) \\ (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) \\ (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) \\ (any, any, any, Nil, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, 'b, any, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) \\ Node(any, any, any, Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) \\ (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) \\ (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) \\ (any, any, any, Nil, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b, any, any, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 -> int where x1 = Nil | Node(x1, Key, any, x1, int)",
        "x1 -> 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 -> int where x1 = Nil | Node(x1, Key, any, x1, int)",
        "Node(x1) -> 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int", "any" ], [ "int", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('a, 'a) -> bool(true | false)", "(int, int) -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> 'd -> 'c -> x1 -> Node(x3, 'd, 'c, x1, int) where x1 = 'b & (Nil | Node(x2)) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'e & (Nil | Node(x2))",
        "x1 -> 'f where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'f" ],
    "constr": [
      [
        "'f",
        "('d -> 'c -> x3 -> Node(Nil | Node(x2) | 'e & (Nil | Node(x1)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x1))"
      ],
      [
        "('d -> 'c -> x3 -> Node(Nil | Node(x2) | 'e & (Nil | Node(x1)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x1))",
        "'f"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'d -> 'c -> x3 -> Node(x2, 'd, 'c, x3, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = 'b & (Nil | Node(x1))",
        "Key -> 'e"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'e" ],
    "constr": [
      [
        "'e",
        "('c -> x3 -> Node(x1, Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "('c -> x3 -> Node(x1, Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x2 -> Node(x3, Key, 'c, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3, Key, 'a, x3, int)",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x3 -> Node(x1, Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "(x2 -> Node(x3, Key, 'c | 'a, x2, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3, Key, 'a, x3, int)",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> 'd -> 'c -> x2 -> Node(x3, 'd, 'c, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = 'e & (Nil | Node(x1))",
        "Node(x1) -> 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'f" ],
    "constr": [
      [
        "'f",
        "('d -> 'c -> x3 -> Node(Node(x1) | 'e & (Nil | Node(x2)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "('d -> 'c -> x3 -> Node(Node(x1) | 'e & (Nil | Node(x2)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'f"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'d -> 'c -> x3 -> Node(Node(x2), 'd, 'c, x3, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x1))",
        "Key -> 'e"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'e" ],
    "constr": [
      [
        "'e",
        "('c -> x3 -> Node(Node(x1), Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "('c -> x3 -> Node(Node(x1), Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x3 -> Node(Node(x2), Key, 'c, x3, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x1))",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x3 -> Node(Node(x1), Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "(x3 -> Node(Node(x1), Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> Node(Node(x1), Key, 'a, x3, int) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "Node(x1) & Node(~Nil, any, any, any, any) -> 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(x1) & Node(~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Node(x1) & Node(~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(Node(x1), Key, 'a, Node(x2) & Node(~Nil, any, any, any, any) | 'b & (Nil | Node(x3)), int) | 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int"
      ],
      [
        "Node(Node(x1), Key, 'a, Node(x2) & Node(~Nil, any, any, any, any) | 'b & (Nil | Node(x3)), int) | 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x2 -> Node(x3, Key, 'a, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3, Key, 'a, x3, int)",
        "Node(Node(x2), Key, 'a, Node(x1) & Node(~Nil, any, any, any, any), int) -> 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(Node(x2), Key, 'a, Node(x1) & Node(~Nil, any, any, any, any), int) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int"
      ],
      [
        "Node(Node(x2), Key, 'a, Node(x1) & Node(~Nil, any, any, any, any), int) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(x4, Key, 'a, Node(Node(x1), Key, 'a, Node(x2) & Node(~Nil, any, any, any, any), int) | 'b & (Nil | Node(x3)), int) | 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int and x4 = Nil | Node(x4, Key, 'a, x4, int)"
      ],
      [
        "Node(x3, Key, 'a, Node(Node(x1), Key, 'a, Node(x2) & Node(~Nil, any, any, any, any), int) | 'b & (Nil | Node(x4)), int) | 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3, Key, 'a, x3, int) and x4 = Nil | Node(x4), Key, any, Nil | Node(x4), int",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x3, Key, 'a, Node(Node(x2), Key, 'a, Node(x1) & Node(~Nil, any, any, any, any), int), int) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3, Key, 'a, x3, int)",
        "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Nil | Node(tuple5)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "any, any, any, 'b, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "any, any, 'b, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "any, 'b, any, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b, any, any, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> 'd -> 'c -> x1 -> Node(x3, 'd, 'c, x1, int) where x1 = 'b & (Nil | Node(x2)) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'e & (Nil | Node(x2))",
        "x1 -> 'f where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'f" ],
    "constr": [
      [
        "'f",
        "('d -> 'c -> x3 -> Node(Nil | Node(x2) | 'e & (Nil | Node(x1)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x1))"
      ],
      [
        "('d -> 'c -> x3 -> Node(Nil | Node(x2) | 'e & (Nil | Node(x1)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x1))",
        "'f"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'d -> 'c -> x3 -> Node(x2, 'd, 'c, x3, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = 'b & (Nil | Node(x1))",
        "Key -> 'e"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'e" ],
    "constr": [
      [
        "'e",
        "('c -> x3 -> Node(x1, Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "('c -> x3 -> Node(x1, Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x3 -> Node(x1, Key, 'c, x3, int) where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x3 -> Node(x1, Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "(x3 -> Node(x1, Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> Node(x1, Key, 'a, x3, int) where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "x1 -> 'c where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(x3, Key, 'a, Nil | Node(x2) | 'b & (Nil | Node(x1)), int) | 'c where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3, Key, 'a, x3, int)"
      ],
      [
        "Node(x3, Key, 'a, Nil | Node(x2) | 'b & (Nil | Node(x1)), int) | 'c where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3, Key, 'a, x3, int)",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> 'd -> 'c -> x1 -> Node(x3, 'd, 'c, x1, int) where x1 = 'b & (Nil | Node(x2)) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'e & (Nil | Node(x2))",
        "Node(x1, Key, 'a, x2, int) -> 'f where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2, Key, 'a, x2, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(x1, Key, 'a, x2, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2, Key, 'a, x2, int)"
      ],
      [
        "Node(x2, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2, Key, 'a, x2, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'f" ],
    "constr": [
      [
        "'f",
        "('d -> 'c -> x4 -> Node(Node(x2, Key, 'a, x3, int) | 'e & (Nil | Node(x1)), 'd, 'c, x4, int)) | 'f where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3, Key, 'a, x3, int) and x4 = 'b & (Nil | Node(x1))"
      ],
      [
        "('d -> 'c -> x2 -> Node(Node(x3, Key, 'a, x4, int) | 'e & (Nil | Node(x1)), 'd, 'c, x2, int)) | 'f where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3, Key, 'a, x3, int) and x4 = Nil | Node(x4, Key, 'a, x4, int)",
        "'f"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'d -> 'c -> x4 -> Node(Node(x3, Key, 'a, x2, int), 'd, 'c, x4, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3, Key, 'a, x3, int) and x4 = 'b & (Nil | Node(x1))",
        "Key -> 'e"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'e" ],
    "constr": [
      [
        "'e",
        "('c -> x4 -> Node(Node(x2, Key, 'a, x3, int), Key | 'd, 'c, x4, int)) | 'e where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3, Key, 'a, x3, int) and x4 = 'b & (Nil | Node(x1))"
      ],
      [
        "('c -> x4 -> Node(Node(x2, Key, 'a, x1, int), Key | 'd, 'c, x4, int)) | 'e where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int and x4 = 'b & (Nil | Node(x3))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x4 -> Node(Node(x3, Key, 'a, x2, int), Key, 'c, x4, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3, Key, 'a, x3, int) and x4 = 'b & (Nil | Node(x1))",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x4 -> Node(Node(x2, Key, 'a, x1, int), Key, 'c | 'a, x4, int)) | 'd where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int and x4 = 'b & (Nil | Node(x3))"
      ],
      [
        "(x4 -> Node(Node(x1, Key, 'a, x2, int), Key, 'c | 'a, x4, int)) | 'd where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int and x4 = 'b & (Nil | Node(x3))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 -> 'd -> 'c -> x3 -> Node(x1, 'd, 'c, x3, int) where x1 = 'e & (Nil | Node(x2)) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "x1 -> 'f where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'f" ],
    "constr": [
      [
        "'f",
        "('d -> 'c -> x3 -> Node(Nil | Node(x1) | 'e & (Nil | Node(x2)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "('d -> 'c -> x3 -> Node(Nil | Node(x1) | 'e & (Nil | Node(x2)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'f"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'d -> 'c -> x2 -> Node(x3, 'd, 'c, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3, Key, 'a, x3, int)",
        "Key -> 'e"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'e" ],
    "constr": [
      [
        "'e",
        "('c -> x3 -> Node(x2, Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = 'b & (Nil | Node(x1))"
      ],
      [
        "('c -> x3 -> Node(x2, Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = 'b & (Nil | Node(x1))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x3 -> Node(x2, Key, 'c, x3, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = 'b & (Nil | Node(x1))",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x3 -> Node(x1, Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "(x3 -> Node(x1, Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> Node(x1, Key, 'a, x3, int) where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "Node(x1) & Node(~Nil, any, any, any, any) -> 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(x1) & Node(~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Node(x1) & Node(~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(x3, Key, 'a, Node(x1) & Node(~Nil, any, any, any, any) | 'b & (Nil | Node(x2)), int) | 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = Nil | Node(x3, Key, 'a, x3, int)"
      ],
      [
        "Node(x3, Key, 'a, Node(x1) & Node(~Nil, any, any, any, any) | 'b & (Nil | Node(x2)), int) | 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = Nil | Node(x3, Key, 'a, x3, int)",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x4 -> Node(Node(x2, Key, 'a, x3, int), Key, 'a, x4, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3, Key, 'a, x3, int) and x4 = 'b & (Nil | Node(x1))",
        "Node(x2, Key, 'a, Node(x1) & Node(~Nil, any, any, any, any), int) -> 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(x2, Key, 'a, Node(x1) & Node(~Nil, any, any, any, any), int) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int)"
      ],
      [
        "Node(x1, Key, 'a, Node(x2) & Node(~Nil, any, any, any, any), int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(Node(x4, Key, 'a, x5, int), Key, 'a, Node(x3, Key, 'a, Node(x2) & Node(~Nil, any, any, any, any), int) | 'b & (Nil | Node(x1)), int) | 'c where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3, Key, 'a, x3, int) and x4 = Nil | Node(x4, Key, 'a, x4, int) and x5 = Nil | Node(x5, Key, 'a, x5, int)"
      ],
      [
        "Node(Node(x2, Key, 'a, x1, int), Key, 'a, Node(x5, Key, 'a, Node(x4) & Node(~Nil, any, any, any, any), int) | 'b & (Nil | Node(x3)), int) | 'c where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int and x4 = Nil | Node(x4), Key, 'a, Nil | Node(x4), int and x5 = Nil | Node(x5, Key, 'a, x5, int)",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(Node(x2, Key, 'a, x3, int), Key, 'a, Node(x1, Key, 'a, Node(x4) & Node(~Nil, any, any, any, any), int), int) where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3, Key, 'a, x3, int) and x4 = Nil | Node(x4), Key, 'a, Nil | Node(x4), int",
        "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ], [ "2", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(int, 2) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int", "any" ], [ "int", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('a, 'a) -> bool(true | false)", "(int, int) -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(~Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Nil | Node(tuple5)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(~Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, any, any, 'b, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(~Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, any, 'b, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(~Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, 'b, any, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(~Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b, any, any, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 -> int where x1 = Nil | Node(x1, Key, any, x1, int)",
        "x1 -> 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 -> int where x1 = Nil | Node(x1, Key, any, x1, int)",
        "Node(x1) -> 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int", "any" ], [ "int", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('a, 'a) -> bool(true | false)", "(int, int) -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> 'd -> 'c -> x1 -> Node(x3, 'd, 'c, x1, int) where x1 = 'b & (Nil | Node(x2)) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'e & (Nil | Node(x2))",
        "Node(x1) & Node(any, any, any, ~Nil, any) -> 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(x1) & Node(any, any, any, ~Nil, any) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Node(x1) & Node(any, any, any, ~Nil, any) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'f" ],
    "constr": [
      [
        "'f",
        "('d -> 'c -> x3 -> Node(Node(x1) & Node(any, any, any, ~Nil, any) | 'e & (Nil | Node(x2)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "('d -> 'c -> x3 -> Node(Node(x1) & Node(any, any, any, ~Nil, any) | 'e & (Nil | Node(x2)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'f"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'d -> 'c -> x3 -> Node(Node(x2) & Node(any, any, any, ~Nil, any), 'd, 'c, x3, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x1))",
        "Key -> 'e"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'e" ],
    "constr": [
      [
        "'e",
        "('c -> x3 -> Node(Node(x1) & Node(any, any, any, ~Nil, any), Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "('c -> x2 -> Node(Node(x3) & Node(any, any, any, ~Nil, any), Key | 'd, 'c, x2, int)) | 'e where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3), Key, 'a, Nil | Node(x3), int",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x3 -> Node(Node(x1) & Node(any, any, any, ~Nil, any), Key, 'c, x3, int) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x3 -> Node(Node(x2) & Node(any, any, any, ~Nil, any), Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x1))"
      ],
      [
        "(x3 -> Node(Node(x2) & Node(any, any, any, ~Nil, any), Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x1))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> Node(Node(x1) & Node(any, any, any, ~Nil, any), Key, 'a, x3, int) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "Node(x1) -> 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(Node(x3) & Node(any, any, any, ~Nil, any), Key, 'a, Node(x1) | 'b & (Nil | Node(x2)), int) | 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, 'a, Nil | Node(x3), int"
      ],
      [
        "Node(Node(x1) & Node(any, any, any, ~Nil, any), Key, 'a, Node(x3) | 'b & (Nil | Node(x2)), int) | 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, 'a, Nil | Node(x3), int",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> 'd -> 'c -> x2 -> Node(x3, 'd, 'c, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = 'e & (Nil | Node(x1))",
        "Node(Node(x2) & Node(any, any, any, ~Nil, any), Key, 'a, Node(x1), int) -> 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(Node(x1) & Node(any, any, any, ~Nil, any), Key, 'a, Node(x2), int) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int"
      ],
      [
        "Node(Node(x2) & Node(any, any, any, ~Nil, any), Key, 'a, Node(x1), int) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'f" ],
    "constr": [
      [
        "'f",
        "('d -> 'c -> x1 -> Node(Node(Node(x2) & Node(any, any, any, ~Nil, any), Key, 'a, Node(x4), int) | 'e & (Nil | Node(x3)), 'd, 'c, x1, int)) | 'f where x1 = 'b & (Nil | Node(x3)) and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int and x4 = Nil | Node(x4), Key, 'a, Nil | Node(x4), int"
      ],
      [
        "('d -> 'c -> x3 -> Node(Node(Node(x1) & Node(any, any, any, ~Nil, any), Key, 'a, Node(x2), int) | 'e & (Nil | Node(x4)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x4)) and x4 = Nil | Node(x4), Key, any, Nil | Node(x4), int",
        "'f"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'d -> 'c -> x4 -> Node(Node(Node(x3) & Node(any, any, any, ~Nil, any), Key, 'a, Node(x2), int), 'd, 'c, x4, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, 'a, Nil | Node(x3), int and x4 = 'b & (Nil | Node(x1))",
        "Key -> 'e"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'e" ],
    "constr": [
      [
        "'e",
        "('c -> x4 -> Node(Node(Node(x2) & Node(any, any, any, ~Nil, any), Key, 'a, Node(x1), int), Key | 'd, 'c, x4, int)) | 'e where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int and x4 = 'b & (Nil | Node(x3))"
      ],
      [
        "('c -> x4 -> Node(Node(Node(x1) & Node(any, any, any, ~Nil, any), Key, 'a, Node(x2), int), Key | 'd, 'c, x4, int)) | 'e where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int and x4 = 'b & (Nil | Node(x3))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x3 -> Node(Node(Node(x1) & Node(any, any, any, ~Nil, any), Key, 'a, Node(x4), int), Key, 'c, x3, int) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2)) and x4 = Nil | Node(x4), Key, 'a, Nil | Node(x4), int",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x4 -> Node(Node(Node(x1) & Node(any, any, any, ~Nil, any), Key, 'a, Node(x2), int), Key, 'c | 'a, x4, int)) | 'd where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int and x4 = 'b & (Nil | Node(x3))"
      ],
      [
        "(x4 -> Node(Node(Node(x1) & Node(any, any, any, ~Nil, any), Key, 'a, Node(x2), int), Key, 'c | 'a, x4, int)) | 'd where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int and x4 = 'b & (Nil | Node(x3))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x4 -> Node(Node(Node(x2) & Node(any, any, any, ~Nil, any), Key, 'a, Node(x3), int), Key, 'a, x4, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, 'a, Nil | Node(x3), int and x4 = 'b & (Nil | Node(x1))",
        "x1 -> 'c where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(Node(Node(x4) & Node(any, any, any, ~Nil, any), Key, 'a, Node(x1), int), Key, 'a, Nil | Node(x2) | 'b & (Nil | Node(x3)), int) | 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int and x4 = Nil | Node(x4), Key, 'a, Nil | Node(x4), int"
      ],
      [
        "Node(Node(Node(x2) & Node(any, any, any, ~Nil, any), Key, 'a, Node(x3), int), Key, 'a, Nil | Node(x1) | 'b & (Nil | Node(x4)), int) | 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, 'a, Nil | Node(x3), int and x4 = Nil | Node(x4), Key, any, Nil | Node(x4), int",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(Node(Node(x2) & Node(any, any, any, ~Nil, any), Key, 'a, Node(x1), int), Key, 'a, x3, int) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3, Key, 'a, x3, int)",
        "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Nil | Node(tuple5)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "any, any, any, 'b, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "any, any, 'b, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "any, 'b, any, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b, any, any, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> 'd -> 'c -> x2 -> Node(x3, 'd, 'c, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = 'e & (Nil | Node(x1))",
        "Node(x1) & Node(any, any, any, ~Nil, any) -> 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(x1) & Node(any, any, any, ~Nil, any) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Node(x1) & Node(any, any, any, ~Nil, any) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'f" ],
    "constr": [
      [
        "'f",
        "('d -> 'c -> x3 -> Node(Node(x1) & Node(any, any, any, ~Nil, any) | 'e & (Nil | Node(x2)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "('d -> 'c -> x3 -> Node(Node(x1) & Node(any, any, any, ~Nil, any) | 'e & (Nil | Node(x2)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'f"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'d -> 'c -> x3 -> Node(Node(x1) & Node(any, any, any, ~Nil, any), 'd, 'c, x3, int) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "Key -> 'e"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'e" ],
    "constr": [
      [
        "'e",
        "('c -> x3 -> Node(Node(x1) & Node(any, any, any, ~Nil, any), Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "('c -> x3 -> Node(Node(x1) & Node(any, any, any, ~Nil, any), Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x3 -> Node(Node(x2) & Node(any, any, any, ~Nil, any), Key, 'c, x3, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x1))",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x3 -> Node(Node(x1) & Node(any, any, any, ~Nil, any), Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "(x3 -> Node(Node(x1) & Node(any, any, any, ~Nil, any), Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> Node(Node(x1) & Node(any, any, any, ~Nil, any), Key, 'a, x3, int) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "x1 -> 'c where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(Node(x3) & Node(any, any, any, ~Nil, any), Key, 'a, Nil | Node(x1) | 'b & (Nil | Node(x2)), int) | 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, 'a, Nil | Node(x3), int"
      ],
      [
        "Node(Node(x1) & Node(any, any, any, ~Nil, any), Key, 'a, Nil | Node(x2) | 'b & (Nil | Node(x3)), int) | 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x2 -> 'd -> 'c -> x3 -> Node(x2, 'd, 'c, x3, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'e & (Nil | Node(x1)) and x3 = 'b & (Nil | Node(x1))",
        "Node(Node(x1) & Node(any, any, any, ~Nil, any), Key, 'a, x2, int) -> 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(Node(x1) & Node(any, any, any, ~Nil, any), Key, 'a, x2, int) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int)"
      ],
      [
        "Node(Node(x1) & Node(any, any, any, ~Nil, any), Key, 'a, x2, int) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'f" ],
    "constr": [
      [
        "'f",
        "('d -> 'c -> x4 -> Node(Node(Node(x2) & Node(any, any, any, ~Nil, any), Key, 'a, x1, int) | 'e & (Nil | Node(x3)), 'd, 'c, x4, int)) | 'f where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int and x4 = 'b & (Nil | Node(x3))"
      ],
      [
        "('d -> 'c -> x4 -> Node(Node(Node(x2) & Node(any, any, any, ~Nil, any), Key, 'a, x1, int) | 'e & (Nil | Node(x3)), 'd, 'c, x4, int)) | 'f where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int and x4 = 'b & (Nil | Node(x3))",
        "'f"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'d -> 'c -> x4 -> Node(Node(Node(x2) & Node(any, any, any, ~Nil, any), Key, 'a, x1, int), 'd, 'c, x4, int) where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int and x4 = 'b & (Nil | Node(x3))",
        "Key -> 'e"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'e" ],
    "constr": [
      [
        "'e",
        "('c -> x4 -> Node(Node(Node(x1) & Node(any, any, any, ~Nil, any), Key, 'a, x2, int), Key | 'd, 'c, x4, int)) | 'e where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int and x4 = 'b & (Nil | Node(x3))"
      ],
      [
        "('c -> x4 -> Node(Node(Node(x1) & Node(any, any, any, ~Nil, any), Key, 'a, x2, int), Key | 'd, 'c, x4, int)) | 'e where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int and x4 = 'b & (Nil | Node(x3))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x4 -> Node(Node(Node(x3) & Node(any, any, any, ~Nil, any), Key, 'a, x2, int), Key, 'c, x4, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3), Key, 'a, Nil | Node(x3), int and x4 = 'b & (Nil | Node(x1))",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x4 -> Node(Node(Node(x2) & Node(any, any, any, ~Nil, any), Key, 'a, x1, int), Key, 'c | 'a, x4, int)) | 'd where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int and x4 = 'b & (Nil | Node(x3))"
      ],
      [
        "(x3 -> Node(Node(Node(x2) & Node(any, any, any, ~Nil, any), Key, 'a, x4, int), Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x1)) and x4 = Nil | Node(x4, Key, 'a, x4, int)",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> 'd -> 'c -> x2 -> Node(x3, 'd, 'c, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = 'e & (Nil | Node(x1))",
        "x1 -> 'f where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'f" ],
    "constr": [
      [
        "'f",
        "('d -> 'c -> x3 -> Node(Nil | Node(x1) | 'e & (Nil | Node(x2)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "('d -> 'c -> x3 -> Node(Nil | Node(x2) | 'e & (Nil | Node(x1)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x1))",
        "'f"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'d -> 'c -> x3 -> Node(x2, 'd, 'c, x3, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = 'b & (Nil | Node(x1))",
        "Key -> 'e"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'e" ],
    "constr": [
      [
        "'e",
        "('c -> x3 -> Node(x1, Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "('c -> x3 -> Node(x1, Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x2 -> Node(x3, Key, 'c, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3, Key, 'a, x3, int)",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x3 -> Node(x1, Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "(x3 -> Node(x2, Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = 'b & (Nil | Node(x1))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> Node(x2, Key, 'a, x3, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = 'b & (Nil | Node(x1))",
        "x1 -> 'c where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(x3, Key, 'a, Nil | Node(x2) | 'b & (Nil | Node(x1)), int) | 'c where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3, Key, 'a, x3, int)"
      ],
      [
        "Node(x3, Key, 'a, Nil | Node(x2) | 'b & (Nil | Node(x1)), int) | 'c where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3, Key, 'a, x3, int)",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x4 -> Node(Node(Node(x1) & Node(any, any, any, ~Nil, any), Key, 'a, x2, int), Key, 'a, x4, int) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int and x4 = 'b & (Nil | Node(x3))",
        "Node(x2, Key, 'a, x1, int) -> 'c where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2, Key, 'a, x2, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(x1, Key, 'a, x2, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2, Key, 'a, x2, int)"
      ],
      [
        "Node(x2, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2, Key, 'a, x2, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(Node(Node(x2) & Node(any, any, any, ~Nil, any), Key, 'a, x3, int), Key, 'a, Node(x4, Key, 'a, x1, int) | 'b & (Nil | Node(x5)), int) | 'c where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3, Key, 'a, x3, int) and x4 = Nil | Node(x4, Key, 'a, x4, int) and x5 = Nil | Node(x5), Key, any, Nil | Node(x5), int"
      ],
      [
        "Node(Node(Node(x1) & Node(any, any, any, ~Nil, any), Key, 'a, x2, int), Key, 'a, Node(x4, Key, 'a, x3, int) | 'b & (Nil | Node(x5)), int) | 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3, Key, 'a, x3, int) and x4 = Nil | Node(x4, Key, 'a, x4, int) and x5 = Nil | Node(x5), Key, any, Nil | Node(x5), int",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(Node(Node(x1) & Node(any, any, any, ~Nil, any), Key, 'a, x2, int), Key, 'a, Node(x3, Key, 'a, x4, int), int) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3, Key, 'a, x3, int) and x4 = Nil | Node(x4, Key, 'a, x4, int)",
        "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int", "any" ], [ "int", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('a, 'a) -> bool(true | false)", "(int, int) -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ], [ "1", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(int, 1) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ], [ "1", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(int, 1) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(any, any, any, ~Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "any"
      ],
      [ "Key", "any" ],
      [ "'a", "any" ],
      [
        "Node(x1) & Node(~Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "any"
      ],
      [ "int", "any" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x2) & Node(any, any, any, ~Nil, any), Key, 'a, Node(x1) & Node(~Nil, any, any, any, any), int where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int",
        "any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(Node(x2) & Node(any, any, any, ~Nil, any), Key, 'a, Node(x1) & Node(~Nil, any, any, any, any), int) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int",
        "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(any, any, any, ~Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Nil | Node(tuple5)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(any, any, any, ~Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) & (any, any, any, ~Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) & (any, any, any, ~Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) & (any, any, any, ~Nil, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, any, any, any, 'b"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Nil | Node(tuple5)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) & (Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) & (Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) & (Nil, any, any, any, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, any, any, any, 'b"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ], [ "2", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(int, 2) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int", "any" ], [ "int", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('a, 'a) -> bool(true | false)", "(int, int) -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(any, any, any, ~Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Nil | Node(tuple5)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) \\ Node(any, any, any, Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) \\ (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) \\ (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) \\ (any, any, any, Nil, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, any, any, 'b, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) \\ Node(any, any, any, Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) \\ (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) \\ (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) \\ (any, any, any, Nil, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, any, 'b, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) \\ Node(any, any, any, Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) \\ (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) \\ (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) \\ (any, any, any, Nil, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, 'b, any, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) \\ Node(any, any, any, Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) \\ (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) \\ (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) \\ (any, any, any, Nil, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b, any, any, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 -> int where x1 = Nil | Node(x1, Key, any, x1, int)",
        "x1 -> 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 -> int where x1 = Nil | Node(x1, Key, any, x1, int)",
        "Node(x1) -> 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int", "any" ], [ "int", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('a, 'a) -> bool(true | false)", "(int, int) -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> 'd -> 'c -> x1 -> Node(x3, 'd, 'c, x1, int) where x1 = 'b & (Nil | Node(x2)) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'e & (Nil | Node(x2))",
        "x1 -> 'f where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'f" ],
    "constr": [
      [
        "'f",
        "('d -> 'c -> x1 -> Node(Nil | Node(x2) | 'e & (Nil | Node(x3)), 'd, 'c, x1, int)) | 'f where x1 = 'b & (Nil | Node(x3)) and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int"
      ],
      [
        "('d -> 'c -> x1 -> Node(Nil | Node(x3) | 'e & (Nil | Node(x2)), 'd, 'c, x1, int)) | 'f where x1 = 'b & (Nil | Node(x2)) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, 'a, Nil | Node(x3), int",
        "'f"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'d -> 'c -> x3 -> Node(x2, 'd, 'c, x3, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = 'b & (Nil | Node(x1))",
        "Key -> 'e"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'e" ],
    "constr": [
      [
        "'e",
        "('c -> x3 -> Node(x1, Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "('c -> x3 -> Node(x1, Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x2 -> Node(x3, Key, 'c, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3, Key, 'a, x3, int)",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x2 -> Node(x3, Key, 'c | 'a, x2, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3, Key, 'a, x3, int)"
      ],
      [
        "(x2 -> Node(x3, Key, 'c | 'a, x2, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3, Key, 'a, x3, int)",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x2 -> 'd -> 'c -> x3 -> Node(x2, 'd, 'c, x3, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'e & (Nil | Node(x1)) and x3 = 'b & (Nil | Node(x1))",
        "Node(x1) -> 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'f" ],
    "constr": [
      [
        "'f",
        "('d -> 'c -> x3 -> Node(Node(x2) | 'e & (Nil | Node(x1)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x1))"
      ],
      [
        "('d -> 'c -> x3 -> Node(Node(x1) | 'e & (Nil | Node(x2)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'f"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'d -> 'c -> x3 -> Node(Node(x1), 'd, 'c, x3, int) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "Key -> 'e"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'e" ],
    "constr": [
      [
        "'e",
        "('c -> x3 -> Node(Node(x1), Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "('c -> x3 -> Node(Node(x1), Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x3 -> Node(Node(x2), Key, 'c, x3, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x1))",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x3 -> Node(Node(x2), Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x1))"
      ],
      [
        "(x3 -> Node(Node(x1), Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x2 -> Node(Node(x3), Key, 'a, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3), Key, 'a, Nil | Node(x3), int",
        "Node(x1) & Node(Nil, any, any, any, any) -> 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(x1) & Node(Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Node(x1) & Node(Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(Node(x3), Key, 'a, Node(x1) & Node(Nil, any, any, any, any) | 'b & (Nil | Node(x2)), int) | 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, 'a, Nil | Node(x3), int"
      ],
      [
        "Node(Node(x1), Key, 'a, Node(x3) & Node(Nil, any, any, any, any) | 'b & (Nil | Node(x2)), int) | 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, 'a, Nil | Node(x3), int",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> Node(x2, Key, 'a, x3, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = 'b & (Nil | Node(x1))",
        "Node(Node(x1), Key, 'a, Node(x2) & Node(Nil, any, any, any, any), int) -> 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(Node(x1), Key, 'a, Node(x2) & Node(Nil, any, any, any, any), int) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int"
      ],
      [
        "Node(Node(x2), Key, 'a, Node(x1) & Node(Nil, any, any, any, any), int) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(x4, Key, 'a, Node(Node(x1), Key, 'a, Node(x2) & Node(Nil, any, any, any, any), int) | 'b & (Nil | Node(x3)), int) | 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int and x4 = Nil | Node(x4, Key, 'a, x4, int)"
      ],
      [
        "Node(x4, Key, 'a, Node(Node(x1), Key, 'a, Node(x3) & Node(Nil, any, any, any, any), int) | 'b & (Nil | Node(x2)), int) | 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, 'a, Nil | Node(x3), int and x4 = Nil | Node(x4, Key, 'a, x4, int)",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x3, Key, 'a, Node(Node(x2), Key, 'a, Node(x1) & Node(Nil, any, any, any, any), int), int) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3, Key, 'a, x3, int)",
        "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Nil | Node(tuple5)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "any, any, any, 'b, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "any, any, 'b, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "any, 'b, any, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b, any, any, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> 'd -> 'c -> x1 -> Node(x3, 'd, 'c, x1, int) where x1 = 'b & (Nil | Node(x2)) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'e & (Nil | Node(x2))",
        "x1 -> 'f where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'f" ],
    "constr": [
      [
        "'f",
        "('d -> 'c -> x3 -> Node(Nil | Node(x1) | 'e & (Nil | Node(x2)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "('d -> 'c -> x3 -> Node(Nil | Node(x1) | 'e & (Nil | Node(x2)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'f"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'d -> 'c -> x3 -> Node(x1, 'd, 'c, x3, int) where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "Key -> 'e"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'e" ],
    "constr": [
      [
        "'e",
        "('c -> x3 -> Node(x2, Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = 'b & (Nil | Node(x1))"
      ],
      [
        "('c -> x3 -> Node(x2, Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = 'b & (Nil | Node(x1))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x3 -> Node(x1, Key, 'c, x3, int) where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x3 -> Node(x2, Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = 'b & (Nil | Node(x1))"
      ],
      [
        "(x3 -> Node(x2, Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = 'b & (Nil | Node(x1))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x2 -> Node(x3, Key, 'a, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3, Key, 'a, x3, int)",
        "x1 -> 'c where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(x3, Key, 'a, Nil | Node(x2) | 'b & (Nil | Node(x1)), int) | 'c where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3, Key, 'a, x3, int)"
      ],
      [
        "Node(x3, Key, 'a, Nil | Node(x2) | 'b & (Nil | Node(x1)), int) | 'c where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3, Key, 'a, x3, int)",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x2 -> 'd -> 'c -> x3 -> Node(x2, 'd, 'c, x3, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'e & (Nil | Node(x1)) and x3 = 'b & (Nil | Node(x1))",
        "Node(x1, Key, 'a, x2, int) -> 'f where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2, Key, 'a, x2, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(x1, Key, 'a, x2, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2, Key, 'a, x2, int)"
      ],
      [
        "Node(x2, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2, Key, 'a, x2, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'f" ],
    "constr": [
      [
        "'f",
        "('d -> 'c -> x4 -> Node(Node(x1, Key, 'a, x2, int) | 'e & (Nil | Node(x3)), 'd, 'c, x4, int)) | 'f where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int and x4 = 'b & (Nil | Node(x3))"
      ],
      [
        "('d -> 'c -> x4 -> Node(Node(x1, Key, 'a, x2, int) | 'e & (Nil | Node(x3)), 'd, 'c, x4, int)) | 'f where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int and x4 = 'b & (Nil | Node(x3))",
        "'f"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'d -> 'c -> x4 -> Node(Node(x2, Key, 'a, x3, int), 'd, 'c, x4, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3, Key, 'a, x3, int) and x4 = 'b & (Nil | Node(x1))",
        "Key -> 'e"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'e" ],
    "constr": [
      [
        "'e",
        "('c -> x2 -> Node(Node(x4, Key, 'a, x3, int), Key | 'd, 'c, x2, int)) | 'e where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3, Key, 'a, x3, int) and x4 = Nil | Node(x4, Key, 'a, x4, int)"
      ],
      [
        "('c -> x2 -> Node(Node(x3, Key, 'a, x4, int), Key | 'd, 'c, x2, int)) | 'e where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3, Key, 'a, x3, int) and x4 = Nil | Node(x4, Key, 'a, x4, int)",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x4 -> Node(Node(x2, Key, 'a, x1, int), Key, 'c, x4, int) where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int and x4 = 'b & (Nil | Node(x3))",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x4 -> Node(Node(x1, Key, 'a, x2, int), Key, 'c | 'a, x4, int)) | 'd where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int and x4 = 'b & (Nil | Node(x3))"
      ],
      [
        "(x4 -> Node(Node(x1, Key, 'a, x2, int), Key, 'c | 'a, x4, int)) | 'd where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int and x4 = 'b & (Nil | Node(x3))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> 'd -> 'c -> x2 -> Node(x3, 'd, 'c, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = 'e & (Nil | Node(x1))",
        "x1 -> 'f where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'f" ],
    "constr": [
      [
        "'f",
        "('d -> 'c -> x1 -> Node(Nil | Node(x3) | 'e & (Nil | Node(x2)), 'd, 'c, x1, int)) | 'f where x1 = 'b & (Nil | Node(x2)) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, 'a, Nil | Node(x3), int"
      ],
      [
        "('d -> 'c -> x3 -> Node(Nil | Node(x1) | 'e & (Nil | Node(x2)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'f"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'d -> 'c -> x3 -> Node(x1, 'd, 'c, x3, int) where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "Key -> 'e"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'e" ],
    "constr": [
      [
        "'e",
        "('c -> x3 -> Node(x1, Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "('c -> x3 -> Node(x1, Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x3 -> Node(x1, Key, 'c, x3, int) where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x2 -> Node(x3, Key, 'c | 'a, x2, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3, Key, 'a, x3, int)"
      ],
      [
        "(x2 -> Node(x3, Key, 'c | 'a, x2, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3, Key, 'a, x3, int)",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x2 -> Node(x3, Key, 'a, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3, Key, 'a, x3, int)",
        "Node(x1) & Node(Nil, any, any, any, any) -> 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(x1) & Node(Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Node(x1) & Node(Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(x2, Key, 'a, Node(x3) & Node(Nil, any, any, any, any) | 'b & (Nil | Node(x1)), int) | 'c where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3), Key, 'a, Nil | Node(x3), int"
      ],
      [
        "Node(x3, Key, 'a, Node(x2) & Node(Nil, any, any, any, any) | 'b & (Nil | Node(x1)), int) | 'c where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3, Key, 'a, x3, int)",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x4 -> Node(Node(x1, Key, 'a, x2, int), Key, 'a, x4, int) where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int and x4 = 'b & (Nil | Node(x3))",
        "Node(x1, Key, 'a, Node(x2) & Node(Nil, any, any, any, any), int) -> 'c where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(x2, Key, 'a, Node(x1) & Node(Nil, any, any, any, any), int) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int)"
      ],
      [
        "Node(x1, Key, 'a, Node(x2) & Node(Nil, any, any, any, any), int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(Node(x4, Key, 'a, x3, int), Key, 'a, Node(x2, Key, 'a, Node(x1) & Node(Nil, any, any, any, any), int) | 'b & (Nil | Node(x5)), int) | 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3, Key, 'a, x3, int) and x4 = Nil | Node(x4, Key, 'a, x4, int) and x5 = Nil | Node(x5), Key, any, Nil | Node(x5), int"
      ],
      [
        "Node(Node(x3, Key, 'a, x2, int), Key, 'a, Node(x1, Key, 'a, Node(x4) & Node(Nil, any, any, any, any), int) | 'b & (Nil | Node(x5)), int) | 'c where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3, Key, 'a, x3, int) and x4 = Nil | Node(x4), Key, 'a, Nil | Node(x4), int and x5 = Nil | Node(x5), Key, any, Nil | Node(x5), int",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(Node(x1, Key, 'a, x4, int), Key, 'a, Node(x3, Key, 'a, Node(x2) & Node(Nil, any, any, any, any), int), int) where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3, Key, 'a, x3, int) and x4 = Nil | Node(x4, Key, 'a, x4, int)",
        "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ], [ "2", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(int, 2) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int", "any" ], [ "int", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('a, 'a) -> bool(true | false)", "(int, int) -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Nil | Node(tuple5)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) \\ Node(~Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) \\ (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) \\ (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) \\ (~Nil, any, any, any, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, any, any, 'b, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) \\ Node(~Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) \\ (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) \\ (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) \\ (~Nil, any, any, any, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, any, 'b, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) \\ Node(~Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) \\ (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) \\ (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) \\ (~Nil, any, any, any, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, 'b, any, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) \\ Node(~Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) \\ (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) \\ (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) \\ (~Nil, any, any, any, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b, any, any, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Nil | 'a" ], [ "Nil | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 -> int where x1 = Nil | Node(x1, Key, any, x1, int)",
        "x1 -> 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "x1 -> int where x1 = Nil | Node(x1, Key, any, x1, int)", "Nil -> 'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int", "any" ], [ "int", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('a, 'a) -> bool(true | false)", "(int, int) -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> 'd -> 'c -> x1 -> Node(x3, 'd, 'c, x1, int) where x1 = 'b & (Nil | Node(x2)) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'e & (Nil | Node(x2))",
        "Node(x1) & Node(any, any, any, ~Nil, any) -> 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(x1) & Node(any, any, any, ~Nil, any) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Node(x1) & Node(any, any, any, ~Nil, any) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'f" ],
    "constr": [
      [
        "'f",
        "('d -> 'c -> x3 -> Node(Node(x1) & Node(any, any, any, ~Nil, any) | 'e & (Nil | Node(x2)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "('d -> 'c -> x3 -> Node(Node(x1) & Node(any, any, any, ~Nil, any) | 'e & (Nil | Node(x2)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'f"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'d -> 'c -> x3 -> Node(Node(x2) & Node(any, any, any, ~Nil, any), 'd, 'c, x3, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x1))",
        "Key -> 'e"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'e" ],
    "constr": [
      [
        "'e",
        "('c -> x2 -> Node(Node(x3) & Node(any, any, any, ~Nil, any), Key | 'd, 'c, x2, int)) | 'e where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3), Key, 'a, Nil | Node(x3), int"
      ],
      [
        "('c -> x3 -> Node(Node(x1) & Node(any, any, any, ~Nil, any), Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x2 -> Node(Node(x3) & Node(any, any, any, ~Nil, any), Key, 'c, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3), Key, 'a, Nil | Node(x3), int",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x3 -> Node(Node(x1) & Node(any, any, any, ~Nil, any), Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "(x3 -> Node(Node(x1) & Node(any, any, any, ~Nil, any), Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> Node(Node(x2) & Node(any, any, any, ~Nil, any), Key, 'a, x3, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x1))",
        "Nil -> 'c"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Nil | 'a" ], [ "Nil | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(Node(x1) & Node(any, any, any, ~Nil, any), Key, 'a, Nil | 'b & (Nil | Node(x2)), int) | 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int"
      ],
      [
        "Node(Node(x1) & Node(any, any, any, ~Nil, any), Key, 'a, Nil | 'b & (Nil | Node(x2)), int) | 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> 'd -> 'c -> x1 -> Node(x3, 'd, 'c, x1, int) where x1 = 'b & (Nil | Node(x2)) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'e & (Nil | Node(x2))",
        "Node(Node(x1) & Node(any, any, any, ~Nil, any), Key, 'a, Nil, int) -> 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(Node(x1) & Node(any, any, any, ~Nil, any), Key, 'a, Nil, int) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Node(Node(x1) & Node(any, any, any, ~Nil, any), Key, 'a, Nil, int) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'f" ],
    "constr": [
      [
        "'f",
        "('d -> 'c -> x1 -> Node(Node(Node(x2) & Node(any, any, any, ~Nil, any), Key, 'a, Nil, int) | 'e & (Nil | Node(x3)), 'd, 'c, x1, int)) | 'f where x1 = 'b & (Nil | Node(x3)) and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int"
      ],
      [
        "('d -> 'c -> x3 -> Node(Node(Node(x1) & Node(any, any, any, ~Nil, any), Key, 'a, Nil, int) | 'e & (Nil | Node(x2)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'f"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'d -> 'c -> x3 -> Node(Node(Node(x2) & Node(any, any, any, ~Nil, any), Key, 'a, Nil, int), 'd, 'c, x3, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x1))",
        "Key -> 'e"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'e" ],
    "constr": [
      [
        "'e",
        "('c -> x3 -> Node(Node(Node(x2) & Node(any, any, any, ~Nil, any), Key, 'a, Nil, int), Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x1))"
      ],
      [
        "('c -> x3 -> Node(Node(Node(x2) & Node(any, any, any, ~Nil, any), Key, 'a, Nil, int), Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x1))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x2 -> Node(Node(Node(x3) & Node(any, any, any, ~Nil, any), Key, 'a, Nil, int), Key, 'c, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3), Key, 'a, Nil | Node(x3), int",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x3 -> Node(Node(Node(x1) & Node(any, any, any, ~Nil, any), Key, 'a, Nil, int), Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "(x3 -> Node(Node(Node(x1) & Node(any, any, any, ~Nil, any), Key, 'a, Nil, int), Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> Node(Node(Node(x1) & Node(any, any, any, ~Nil, any), Key, 'a, Nil, int), Key, 'a, x3, int) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "x1 -> 'c where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(Node(Node(x2) & Node(any, any, any, ~Nil, any), Key, 'a, Nil, int), Key, 'a, Nil | Node(x3) | 'b & (Nil | Node(x1)), int) | 'c where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, 'a, Nil | Node(x3), int"
      ],
      [
        "Node(Node(Node(x1) & Node(any, any, any, ~Nil, any), Key, 'a, Nil, int), Key, 'a, Nil | Node(x3) | 'b & (Nil | Node(x2)), int) | 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, 'a, Nil | Node(x3), int",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(Node(Node(x2) & Node(any, any, any, ~Nil, any), Key, 'a, Nil, int), Key, 'a, x1, int) where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int",
        "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "Nil | Node(tuple5)" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "str(enum) -> empty", "str(_Map_bal) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "empty", "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int", "any" ], [ "int", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('a, 'a) -> bool(true | false)", "(int, int) -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ], [ "1", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(int, 1) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ], [ "1", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(int, 1) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(any, any, any, ~Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "any"
      ],
      [ "Key", "any" ],
      [ "'a", "any" ],
      [
        "Node(x1) & Node(Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "any"
      ],
      [ "int", "any" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(any, any, any, ~Nil, any), Key, 'a, Node(x2) & Node(Nil, any, any, any, any), int where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int",
        "any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(Node(x1) & Node(any, any, any, ~Nil, any), Key, 'a, Node(x2) & Node(Nil, any, any, any, any), int) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int",
        "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(any, any, any, Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Nil | Node(tuple5)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(any, any, any, Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, any, any, any, 'b"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "Nil | Node(tuple5)" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "0", "any" ], [ "2", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(0, 2) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int", "any" ], [ "int", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('a, 'a) -> bool(true | false)", "(int, int) -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(any, any, any, Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Nil | Node(tuple5)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(any, any, any, Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, any, any, 'b, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Nil | 'a" ], [ "Nil | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(any, any, any, Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, any, 'b, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(any, any, any, Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, 'b, any, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(any, any, any, Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b, any, any, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 -> int where x1 = Nil | Node(x1, Key, any, x1, int)",
        "x1 -> 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "x1 -> int where x1 = Nil | Node(x1, Key, any, x1, int)", "Nil -> 'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int", "any" ], [ "int", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('a, 'a) -> bool(true | false)", "(int, int) -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> 'd -> 'c -> x2 -> Node(x3, 'd, 'c, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = 'e & (Nil | Node(x1))",
        "x1 -> 'f where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'f" ],
    "constr": [
      [
        "'f",
        "('d -> 'c -> x3 -> Node(Nil | Node(x1) | 'e & (Nil | Node(x2)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "('d -> 'c -> x3 -> Node(Nil | Node(x2) | 'e & (Nil | Node(x1)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x1))",
        "'f"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'d -> 'c -> x3 -> Node(x2, 'd, 'c, x3, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = 'b & (Nil | Node(x1))",
        "Key -> 'e"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'e" ],
    "constr": [
      [
        "'e",
        "('c -> x3 -> Node(x1, Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "('c -> x3 -> Node(x1, Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x3 -> Node(x1, Key, 'c, x3, int) where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x3 -> Node(x1, Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "(x2 -> Node(x3, Key, 'c | 'a, x2, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3, Key, 'a, x3, int)",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [
      [
        "x3 -> 'c -> 'b -> x1 -> Node(x3, 'c, 'b, x1, int) where x1 = 'a & (Nil | Node(x2)) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'd & (Nil | Node(x2))",
        "Nil -> 'e"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Nil | 'a" ], [ "Nil | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'e" ],
    "constr": [
      [
        "'e",
        "('c -> 'b -> x2 -> Node(Nil | 'd & (Nil | Node(x1)), 'c, 'b, x2, int)) | 'e where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'a & (Nil | Node(x1))"
      ],
      [
        "('c -> 'b -> x2 -> Node(Nil | 'd & (Nil | Node(x1)), 'c, 'b, x2, int)) | 'e where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'a & (Nil | Node(x1))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [
        "'c -> 'b -> x2 -> Node(Nil, 'c, 'b, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'a & (Nil | Node(x1))",
        "Key -> 'd"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'d" ],
    "constr": [
      [
        "'d",
        "('b -> x2 -> Node(Nil, Key | 'c, 'b, x2, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'a & (Nil | Node(x1))"
      ],
      [
        "('b -> x2 -> Node(Nil, Key | 'c, 'b, x2, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'a & (Nil | Node(x1))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x2 -> Node(Nil, Key, 'c, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1))",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x2 -> Node(Nil, Key, 'c | 'a, x2, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1))"
      ],
      [
        "(x2 -> Node(Nil, Key, 'c | 'a, x2, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x2 -> Node(Nil, Key, 'a, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1))",
        "Nil -> 'c"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Nil | 'a" ], [ "Nil | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(Nil, Key, 'a, Nil | 'b & (Nil | Node(x1)), int) | 'c where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int"
      ],
      [
        "Node(Nil, Key, 'a, Nil | 'b & (Nil | Node(x1)), int) | 'c where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x2 -> Node(x3, Key, 'a, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3, Key, 'a, x3, int)",
        "Node(Nil, Key, 'a, Nil, int) -> 'c"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "Node(Nil, Key, 'a, Nil, int) | 'b" ],
      [ "Node(Nil, Key, 'a, Nil, int) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(x2, Key, 'a, Node(Nil, Key, 'a, Nil, int) | 'b & (Nil | Node(x1)), int) | 'c where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int)"
      ],
      [
        "Node(x2, Key, 'a, Node(Nil, Key, 'a, Nil, int) | 'b & (Nil | Node(x1)), int) | 'c where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int)",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1, Key, 'a, Node(Nil, Key, 'a, Nil, int), int) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "Nil | Node(tuple5)" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "str(enum) -> empty", "str(_Map_bal) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "empty", "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)" ]
    ],
    "prio": [ "'a" ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ], [ "2", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(int, 2) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "0", "any" ], [ "int", "any" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('a, 'a) -> bool(true | false)", "(0, int) -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "Nil | Node(tuple5)" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "str(enum) -> empty", "str(_Map_bal) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "empty", "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)" ]
    ],
    "prio": [ "'a" ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ], [ "0", "any" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('a, 'a) -> bool(true | false)", "(int, 0) -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ], [ "1", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(int, 1) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "0", "any" ], [ "1", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(0, 1) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(any, any, any, Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "any"
      ],
      [ "Key", "any" ],
      [ "'a", "any" ],
      [ "Nil", "any" ],
      [ "int", "any" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(any, any, any, Nil, any), Key, 'a, Nil, int where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(Node(x1) & Node(any, any, any, Nil, any), Key, 'a, Nil, int) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(any, any, any, Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Nil | Node(tuple5)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(any, any, any, Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, any, any, any, 'b"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(~Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Nil | Node(tuple5)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(~Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, any, any, any, 'b"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ], [ "2", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(int, 2) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int", "any" ], [ "int", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('a, 'a) -> bool(true | false)", "(int, int) -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(any, any, any, Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Nil | Node(tuple5)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(any, any, any, Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, any, any, 'b, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Nil | 'a" ], [ "Nil | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(any, any, any, Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, any, 'b, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(any, any, any, Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, 'b, any, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(any, any, any, Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b, any, any, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 -> int where x1 = Nil | Node(x1, Key, any, x1, int)",
        "x1 -> 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "x1 -> int where x1 = Nil | Node(x1, Key, any, x1, int)", "Nil -> 'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int", "any" ], [ "int", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('a, 'a) -> bool(true | false)", "(int, int) -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> 'd -> 'c -> x1 -> Node(x3, 'd, 'c, x1, int) where x1 = 'b & (Nil | Node(x2)) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'e & (Nil | Node(x2))",
        "x1 -> 'f where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'f" ],
    "constr": [
      [
        "'f",
        "('d -> 'c -> x3 -> Node(Nil | Node(x1) | 'e & (Nil | Node(x2)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "('d -> 'c -> x3 -> Node(Nil | Node(x1) | 'e & (Nil | Node(x2)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'f"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'d -> 'c -> x3 -> Node(x2, 'd, 'c, x3, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = 'b & (Nil | Node(x1))",
        "Key -> 'e"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'e" ],
    "constr": [
      [
        "'e",
        "('c -> x3 -> Node(x1, Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "('c -> x3 -> Node(x1, Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x2 -> Node(x3, Key, 'c, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3, Key, 'a, x3, int)",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x3 -> Node(x1, Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "(x3 -> Node(x1, Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [
      [
        "x3 -> 'c -> 'b -> x2 -> Node(x3, 'c, 'b, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'a & (Nil | Node(x1)) and x3 = 'd & (Nil | Node(x1))",
        "Nil -> 'e"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Nil | 'a" ], [ "Nil | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'e" ],
    "constr": [
      [
        "'e",
        "('c -> 'b -> x2 -> Node(Nil | 'd & (Nil | Node(x1)), 'c, 'b, x2, int)) | 'e where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'a & (Nil | Node(x1))"
      ],
      [
        "('c -> 'b -> x2 -> Node(Nil | 'd & (Nil | Node(x1)), 'c, 'b, x2, int)) | 'e where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'a & (Nil | Node(x1))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [
        "'c -> 'b -> x2 -> Node(Nil, 'c, 'b, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'a & (Nil | Node(x1))",
        "Key -> 'd"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'d" ],
    "constr": [
      [
        "'d",
        "('b -> x2 -> Node(Nil, Key | 'c, 'b, x2, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'a & (Nil | Node(x1))"
      ],
      [
        "('b -> x2 -> Node(Nil, Key | 'c, 'b, x2, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'a & (Nil | Node(x1))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x2 -> Node(Nil, Key, 'c, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1))",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x2 -> Node(Nil, Key, 'c | 'a, x2, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1))"
      ],
      [
        "(x2 -> Node(Nil, Key, 'c | 'a, x2, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x2 -> Node(Nil, Key, 'a, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1))",
        "Node(x1) & Node(~Nil, any, any, any, any) -> 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(x1) & Node(~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Node(x1) & Node(~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(Nil, Key, 'a, Node(x2) & Node(~Nil, any, any, any, any) | 'b & (Nil | Node(x1)), int) | 'c where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int"
      ],
      [
        "Node(Nil, Key, 'a, Node(x2) & Node(~Nil, any, any, any, any) | 'b & (Nil | Node(x1)), int) | 'c where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> Node(x2, Key, 'a, x3, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = 'b & (Nil | Node(x1))",
        "Node(Nil, Key, 'a, Node(x1) & Node(~Nil, any, any, any, any), int) -> 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(Nil, Key, 'a, Node(x1) & Node(~Nil, any, any, any, any), int) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Node(Nil, Key, 'a, Node(x1) & Node(~Nil, any, any, any, any), int) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(x3, Key, 'a, Node(Nil, Key, 'a, Node(x1) & Node(~Nil, any, any, any, any), int) | 'b & (Nil | Node(x2)), int) | 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = Nil | Node(x3, Key, 'a, x3, int)"
      ],
      [
        "Node(x2, Key, 'a, Node(Nil, Key, 'a, Node(x1) & Node(~Nil, any, any, any, any), int) | 'b & (Nil | Node(x3)), int) | 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x2, Key, 'a, Node(Nil, Key, 'a, Node(x1) & Node(~Nil, any, any, any, any), int), int) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int)",
        "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "Nil | Node(tuple5)" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "str(enum) -> empty", "str(_Map_bal) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "empty", "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)" ]
    ],
    "prio": [ "'a" ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ], [ "2", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(int, 2) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int", "any" ], [ "int", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('a, 'a) -> bool(true | false)", "(int, int) -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(~Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Nil | Node(tuple5)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(~Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, any, any, 'b, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(~Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, any, 'b, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(~Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, 'b, any, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(~Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) & (~Nil, any, any, any, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b, any, any, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 -> int where x1 = Nil | Node(x1, Key, any, x1, int)",
        "x1 -> 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 -> int where x1 = Nil | Node(x1, Key, any, x1, int)",
        "Node(x1) -> 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int", "any" ], [ "int", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('a, 'a) -> bool(true | false)", "(int, int) -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> 'd -> 'c -> x1 -> Node(x3, 'd, 'c, x1, int) where x1 = 'b & (Nil | Node(x2)) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'e & (Nil | Node(x2))",
        "Node(x1) & Node(any, any, any, Nil, any) -> 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(x1) & Node(any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Node(x1) & Node(any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'f" ],
    "constr": [
      [
        "'f",
        "('d -> 'c -> x3 -> Node(Node(x1) & Node(any, any, any, Nil, any) | 'e & (Nil | Node(x2)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "('d -> 'c -> x3 -> Node(Node(x1) & Node(any, any, any, Nil, any) | 'e & (Nil | Node(x2)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'f"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'d -> 'c -> x3 -> Node(Node(x2) & Node(any, any, any, Nil, any), 'd, 'c, x3, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x1))",
        "Key -> 'e"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'e" ],
    "constr": [
      [
        "'e",
        "('c -> x3 -> Node(Node(x1) & Node(any, any, any, Nil, any), Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "('c -> x3 -> Node(Node(x1) & Node(any, any, any, Nil, any), Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x3 -> Node(Node(x2) & Node(any, any, any, Nil, any), Key, 'c, x3, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x1))",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x3 -> Node(Node(x1) & Node(any, any, any, Nil, any), Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "(x3 -> Node(Node(x2) & Node(any, any, any, Nil, any), Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x1))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> Node(Node(x1) & Node(any, any, any, Nil, any), Key, 'a, x3, int) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "Node(x1) -> 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(Node(x3) & Node(any, any, any, Nil, any), Key, 'a, Node(x1) | 'b & (Nil | Node(x2)), int) | 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, 'a, Nil | Node(x3), int"
      ],
      [
        "Node(Node(x2) & Node(any, any, any, Nil, any), Key, 'a, Node(x1) | 'b & (Nil | Node(x3)), int) | 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> 'd -> 'c -> x2 -> Node(x3, 'd, 'c, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = 'e & (Nil | Node(x1))",
        "Node(Node(x1) & Node(any, any, any, Nil, any), Key, 'a, Node(x2), int) -> 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(Node(x1) & Node(any, any, any, Nil, any), Key, 'a, Node(x2), int) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int"
      ],
      [
        "Node(Node(x2) & Node(any, any, any, Nil, any), Key, 'a, Node(x1), int) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'f" ],
    "constr": [
      [
        "'f",
        "('d -> 'c -> x4 -> Node(Node(Node(x1) & Node(any, any, any, Nil, any), Key, 'a, Node(x3), int) | 'e & (Nil | Node(x2)), 'd, 'c, x4, int)) | 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, 'a, Nil | Node(x3), int and x4 = 'b & (Nil | Node(x2))"
      ],
      [
        "('d -> 'c -> x4 -> Node(Node(Node(x1) & Node(any, any, any, Nil, any), Key, 'a, Node(x3), int) | 'e & (Nil | Node(x2)), 'd, 'c, x4, int)) | 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, 'a, Nil | Node(x3), int and x4 = 'b & (Nil | Node(x2))",
        "'f"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'d -> 'c -> x4 -> Node(Node(Node(x3) & Node(any, any, any, Nil, any), Key, 'a, Node(x1), int), 'd, 'c, x4, int) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, 'a, Nil | Node(x3), int and x4 = 'b & (Nil | Node(x2))",
        "Key -> 'e"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'e" ],
    "constr": [
      [
        "'e",
        "('c -> x4 -> Node(Node(Node(x1) & Node(any, any, any, Nil, any), Key, 'a, Node(x2), int), Key | 'd, 'c, x4, int)) | 'e where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int and x4 = 'b & (Nil | Node(x3))"
      ],
      [
        "('c -> x4 -> Node(Node(Node(x1) & Node(any, any, any, Nil, any), Key, 'a, Node(x2), int), Key | 'd, 'c, x4, int)) | 'e where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int and x4 = 'b & (Nil | Node(x3))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x3 -> Node(Node(Node(x4) & Node(any, any, any, Nil, any), Key, 'a, Node(x1), int), Key, 'c, x3, int) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2)) and x4 = Nil | Node(x4), Key, 'a, Nil | Node(x4), int",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x2 -> Node(Node(Node(x3) & Node(any, any, any, Nil, any), Key, 'a, Node(x4), int), Key, 'c | 'a, x2, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3), Key, 'a, Nil | Node(x3), int and x4 = Nil | Node(x4), Key, 'a, Nil | Node(x4), int"
      ],
      [
        "(x3 -> Node(Node(Node(x1) & Node(any, any, any, Nil, any), Key, 'a, Node(x4), int), Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2)) and x4 = Nil | Node(x4), Key, 'a, Nil | Node(x4), int",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x4 -> Node(Node(Node(x3) & Node(any, any, any, Nil, any), Key, 'a, Node(x2), int), Key, 'a, x4, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, 'a, Nil | Node(x3), int and x4 = 'b & (Nil | Node(x1))",
        "x1 -> 'c where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(Node(Node(x1) & Node(any, any, any, Nil, any), Key, 'a, Node(x2), int), Key, 'a, Nil | Node(x3) | 'b & (Nil | Node(x4)), int) | 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, 'a, Nil | Node(x3), int and x4 = Nil | Node(x4), Key, any, Nil | Node(x4), int"
      ],
      [
        "Node(Node(Node(x3) & Node(any, any, any, Nil, any), Key, 'a, Node(x4), int), Key, 'a, Nil | Node(x1) | 'b & (Nil | Node(x2)), int) | 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, 'a, Nil | Node(x3), int and x4 = Nil | Node(x4), Key, 'a, Nil | Node(x4), int",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(Node(Node(x2) & Node(any, any, any, Nil, any), Key, 'a, Node(x1), int), Key, 'a, x3, int) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3, Key, 'a, x3, int)",
        "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Nil | Node(tuple5)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "any, any, any, 'b, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "any, any, 'b, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "any, 'b, any, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b, any, any, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> 'd -> 'c -> x2 -> Node(x3, 'd, 'c, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = 'e & (Nil | Node(x1))",
        "Node(x1) & Node(any, any, any, Nil, any) -> 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(x1) & Node(any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Node(x1) & Node(any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'f" ],
    "constr": [
      [
        "'f",
        "('d -> 'c -> x3 -> Node(Node(x1) & Node(any, any, any, Nil, any) | 'e & (Nil | Node(x2)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "('d -> 'c -> x3 -> Node(Node(x1) & Node(any, any, any, Nil, any) | 'e & (Nil | Node(x2)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'f"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'d -> 'c -> x3 -> Node(Node(x2) & Node(any, any, any, Nil, any), 'd, 'c, x3, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x1))",
        "Key -> 'e"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'e" ],
    "constr": [
      [
        "'e",
        "('c -> x3 -> Node(Node(x1) & Node(any, any, any, Nil, any), Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "('c -> x3 -> Node(Node(x1) & Node(any, any, any, Nil, any), Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x3 -> Node(Node(x2) & Node(any, any, any, Nil, any), Key, 'c, x3, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x1))",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x2 -> Node(Node(x3) & Node(any, any, any, Nil, any), Key, 'c | 'a, x2, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3), Key, 'a, Nil | Node(x3), int"
      ],
      [
        "(x2 -> Node(Node(x3) & Node(any, any, any, Nil, any), Key, 'c | 'a, x2, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3), Key, 'a, Nil | Node(x3), int",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> Node(Node(x1) & Node(any, any, any, Nil, any), Key, 'a, x3, int) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "x1 -> 'c where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(Node(x1) & Node(any, any, any, Nil, any), Key, 'a, Nil | Node(x3) | 'b & (Nil | Node(x2)), int) | 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, 'a, Nil | Node(x3), int"
      ],
      [
        "Node(Node(x2) & Node(any, any, any, Nil, any), Key, 'a, Nil | Node(x1) | 'b & (Nil | Node(x3)), int) | 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> 'd -> 'c -> x2 -> Node(x3, 'd, 'c, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = 'e & (Nil | Node(x1))",
        "Node(Node(x2) & Node(any, any, any, Nil, any), Key, 'a, x1, int) -> 'f where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(Node(x2) & Node(any, any, any, Nil, any), Key, 'a, x1, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int"
      ],
      [
        "Node(Node(x1) & Node(any, any, any, Nil, any), Key, 'a, x2, int) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'f" ],
    "constr": [
      [
        "'f",
        "('d -> 'c -> x1 -> Node(Node(Node(x4) & Node(any, any, any, Nil, any), Key, 'a, x3, int) | 'e & (Nil | Node(x2)), 'd, 'c, x1, int)) | 'f where x1 = 'b & (Nil | Node(x2)) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = Nil | Node(x3, Key, 'a, x3, int) and x4 = Nil | Node(x4), Key, 'a, Nil | Node(x4), int"
      ],
      [
        "('d -> 'c -> x1 -> Node(Node(Node(x3) & Node(any, any, any, Nil, any), Key, 'a, x4, int) | 'e & (Nil | Node(x2)), 'd, 'c, x1, int)) | 'f where x1 = 'b & (Nil | Node(x2)) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, 'a, Nil | Node(x3), int and x4 = Nil | Node(x4, Key, 'a, x4, int)",
        "'f"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'d -> 'c -> x4 -> Node(Node(Node(x1) & Node(any, any, any, Nil, any), Key, 'a, x2, int), 'd, 'c, x4, int) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int and x4 = 'b & (Nil | Node(x3))",
        "Key -> 'e"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'e" ],
    "constr": [
      [
        "'e",
        "('c -> x4 -> Node(Node(Node(x2) & Node(any, any, any, Nil, any), Key, 'a, x1, int), Key | 'd, 'c, x4, int)) | 'e where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int and x4 = 'b & (Nil | Node(x3))"
      ],
      [
        "('c -> x4 -> Node(Node(Node(x1) & Node(any, any, any, Nil, any), Key, 'a, x2, int), Key | 'd, 'c, x4, int)) | 'e where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int and x4 = 'b & (Nil | Node(x3))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x4 -> Node(Node(Node(x2) & Node(any, any, any, Nil, any), Key, 'a, x3, int), Key, 'c, x4, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3, Key, 'a, x3, int) and x4 = 'b & (Nil | Node(x1))",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x3 -> Node(Node(Node(x4) & Node(any, any, any, Nil, any), Key, 'a, x1, int), Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2)) and x4 = Nil | Node(x4), Key, 'a, Nil | Node(x4), int"
      ],
      [
        "(x4 -> Node(Node(Node(x2) & Node(any, any, any, Nil, any), Key, 'a, x1, int), Key, 'c | 'a, x4, int)) | 'd where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int and x4 = 'b & (Nil | Node(x3))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> 'd -> 'c -> x2 -> Node(x3, 'd, 'c, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = 'e & (Nil | Node(x1))",
        "x1 -> 'f where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'f" ],
    "constr": [
      [
        "'f",
        "('d -> 'c -> x3 -> Node(Nil | Node(x1) | 'e & (Nil | Node(x2)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "('d -> 'c -> x3 -> Node(Nil | Node(x1) | 'e & (Nil | Node(x2)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'f"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'d -> 'c -> x3 -> Node(x1, 'd, 'c, x3, int) where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "Key -> 'e"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'e" ],
    "constr": [
      [
        "'e",
        "('c -> x3 -> Node(x2, Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = 'b & (Nil | Node(x1))"
      ],
      [
        "('c -> x3 -> Node(x2, Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = 'b & (Nil | Node(x1))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x3 -> Node(x2, Key, 'c, x3, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = 'b & (Nil | Node(x1))",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x3 -> Node(x2, Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = 'b & (Nil | Node(x1))"
      ],
      [
        "(x3 -> Node(x2, Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = 'b & (Nil | Node(x1))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> Node(x2, Key, 'a, x3, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = 'b & (Nil | Node(x1))",
        "x1 -> 'c where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(x2, Key, 'a, Nil | Node(x1) | 'b & (Nil | Node(x3)), int) | 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int"
      ],
      [
        "Node(x1, Key, 'a, Nil | Node(x2) | 'b & (Nil | Node(x3)), int) | 'c where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x4 -> Node(Node(Node(x2) & Node(any, any, any, Nil, any), Key, 'a, x3, int), Key, 'a, x4, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3, Key, 'a, x3, int) and x4 = 'b & (Nil | Node(x1))",
        "Node(x2, Key, 'a, x1, int) -> 'c where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2, Key, 'a, x2, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(x1, Key, 'a, x2, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2, Key, 'a, x2, int)"
      ],
      [
        "Node(x1, Key, 'a, x2, int) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2, Key, 'a, x2, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(Node(Node(x4) & Node(any, any, any, Nil, any), Key, 'a, x5, int), Key, 'a, Node(x3, Key, 'a, x2, int) | 'b & (Nil | Node(x1)), int) | 'c where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3, Key, 'a, x3, int) and x4 = Nil | Node(x4), Key, 'a, Nil | Node(x4), int and x5 = Nil | Node(x5, Key, 'a, x5, int)"
      ],
      [
        "Node(Node(Node(x2) & Node(any, any, any, Nil, any), Key, 'a, x3, int), Key, 'a, Node(x5, Key, 'a, x4, int) | 'b & (Nil | Node(x1)), int) | 'c where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3, Key, 'a, x3, int) and x4 = Nil | Node(x4, Key, 'a, x4, int) and x5 = Nil | Node(x5, Key, 'a, x5, int)",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(Node(Node(x1) & Node(any, any, any, Nil, any), Key, 'a, x2, int), Key, 'a, Node(x3, Key, 'a, x4, int), int) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3, Key, 'a, x3, int) and x4 = Nil | Node(x4, Key, 'a, x4, int)",
        "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int", "any" ], [ "int", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('a, 'a) -> bool(true | false)", "(int, int) -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ], [ "1", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(int, 1) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ], [ "1", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(int, 1) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(any, any, any, Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "any"
      ],
      [ "Key", "any" ],
      [ "'a", "any" ],
      [
        "Node(x1) & Node(~Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "any"
      ],
      [ "int", "any" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(any, any, any, Nil, any), Key, 'a, Node(x2) & Node(~Nil, any, any, any, any), int where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int",
        "any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(Node(x1) & Node(any, any, any, Nil, any), Key, 'a, Node(x2) & Node(~Nil, any, any, any, any), int) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int",
        "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(any, any, any, Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Nil | Node(tuple5)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(any, any, any, Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, any, any, any, 'b"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Nil | Node(tuple5)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) & (Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) & (Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) & (Nil, any, any, any, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, any, any, any, 'b"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ], [ "2", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(int, 2) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int", "any" ], [ "int", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('a, 'a) -> bool(true | false)", "(int, int) -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(any, any, any, Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Nil | Node(tuple5)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(any, any, any, Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, any, any, 'b, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Nil | 'a" ], [ "Nil | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(any, any, any, Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, any, 'b, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(any, any, any, Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, 'b, any, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(any, any, any, Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) & (any, any, any, Nil, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b, any, any, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 -> int where x1 = Nil | Node(x1, Key, any, x1, int)",
        "x1 -> 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "x1 -> int where x1 = Nil | Node(x1, Key, any, x1, int)", "Nil -> 'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int", "any" ], [ "int", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('a, 'a) -> bool(true | false)", "(int, int) -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> 'd -> 'c -> x1 -> Node(x3, 'd, 'c, x1, int) where x1 = 'b & (Nil | Node(x2)) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'e & (Nil | Node(x2))",
        "x1 -> 'f where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'f" ],
    "constr": [
      [
        "'f",
        "('d -> 'c -> x3 -> Node(Nil | Node(x2) | 'e & (Nil | Node(x1)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x1))"
      ],
      [
        "('d -> 'c -> x3 -> Node(Nil | Node(x2) | 'e & (Nil | Node(x1)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x1))",
        "'f"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'d -> 'c -> x3 -> Node(x1, 'd, 'c, x3, int) where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "Key -> 'e"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'e" ],
    "constr": [
      [
        "'e",
        "('c -> x3 -> Node(x2, Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = 'b & (Nil | Node(x1))"
      ],
      [
        "('c -> x3 -> Node(x1, Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x3 -> Node(x2, Key, 'c, x3, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = 'b & (Nil | Node(x1))",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x3 -> Node(x1, Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "(x3 -> Node(x1, Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [
      [
        "x3 -> 'c -> 'b -> x2 -> Node(x3, 'c, 'b, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'a & (Nil | Node(x1)) and x3 = 'd & (Nil | Node(x1))",
        "Nil -> 'e"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Nil | 'a" ], [ "Nil | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'e" ],
    "constr": [
      [
        "'e",
        "('c -> 'b -> x1 -> Node(Nil | 'd & (Nil | Node(x2)), 'c, 'b, x1, int)) | 'e where x1 = 'a & (Nil | Node(x2)) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int"
      ],
      [
        "('c -> 'b -> x2 -> Node(Nil | 'd & (Nil | Node(x1)), 'c, 'b, x2, int)) | 'e where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'a & (Nil | Node(x1))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [
        "'c -> 'b -> x2 -> Node(Nil, 'c, 'b, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'a & (Nil | Node(x1))",
        "Key -> 'd"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'d" ],
    "constr": [
      [
        "'d",
        "('b -> x2 -> Node(Nil, Key | 'c, 'b, x2, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'a & (Nil | Node(x1))"
      ],
      [
        "('b -> x2 -> Node(Nil, Key | 'c, 'b, x2, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'a & (Nil | Node(x1))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x2 -> Node(Nil, Key, 'c, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1))",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x2 -> Node(Nil, Key, 'c | 'a, x2, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1))"
      ],
      [
        "(x2 -> Node(Nil, Key, 'c | 'a, x2, int)) | 'd where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x2 -> Node(Nil, Key, 'a, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1))",
        "Node(x1) & Node(Nil, any, any, any, any) -> 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(x1) & Node(Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Node(x1) & Node(Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(Nil, Key, 'a, Node(x2) & Node(Nil, any, any, any, any) | 'b & (Nil | Node(x1)), int) | 'c where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int"
      ],
      [
        "Node(Nil, Key, 'a, Node(x2) & Node(Nil, any, any, any, any) | 'b & (Nil | Node(x1)), int) | 'c where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> Node(x1, Key, 'a, x3, int) where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "Node(Nil, Key, 'a, Node(x1) & Node(Nil, any, any, any, any), int) -> 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(Nil, Key, 'a, Node(x1) & Node(Nil, any, any, any, any), int) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Node(Nil, Key, 'a, Node(x1) & Node(Nil, any, any, any, any), int) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(x2, Key, 'a, Node(Nil, Key, 'a, Node(x1) & Node(Nil, any, any, any, any), int) | 'b & (Nil | Node(x3)), int) | 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int) and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int"
      ],
      [
        "Node(x1, Key, 'a, Node(Nil, Key, 'a, Node(x2) & Node(Nil, any, any, any, any), int) | 'b & (Nil | Node(x3)), int) | 'c where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, any, Nil | Node(x3), int",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1, Key, 'a, Node(Nil, Key, 'a, Node(x2) & Node(Nil, any, any, any, any), int), int) where x1 = Nil | Node(x1, Key, 'a, x1, int) and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int",
        "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "Nil | Node(tuple5)" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "str(enum) -> empty", "str(_Map_bal) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "empty", "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)" ]
    ],
    "prio": [ "'a" ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ], [ "2", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(int, 2) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int", "any" ], [ "int", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('a, 'a) -> bool(true | false)", "(int, int) -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Nil | Node(tuple5)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) \\ Node(~Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) \\ (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) \\ (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) \\ (~Nil, any, any, any, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, any, any, 'b, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) \\ Node(~Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) \\ (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) \\ (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) \\ (~Nil, any, any, any, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, any, 'b, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) \\ Node(~Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) \\ (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) \\ (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) \\ (~Nil, any, any, any, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "any, 'b, any, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) \\ Node(~Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "Node('b)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1, Key, 'a, x1, int) \\ (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ],
      [
        "(x1, Key, 'a, x1, int) \\ (~Nil, any, any, any, any) | 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(x1, Key, 'a, x1, int) \\ (~Nil, any, any, any, any) where x1 = Nil | Node(x1, Key, 'a, x1, int)",
        "'b, any, any, any, any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Nil | 'a" ], [ "Nil | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 -> int where x1 = Nil | Node(x1, Key, any, x1, int)",
        "x1 -> 'b where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "x1 -> int where x1 = Nil | Node(x1, Key, any, x1, int)", "Nil -> 'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int", "any" ], [ "int", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('a, 'a) -> bool(true | false)", "(int, int) -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> 'd -> 'c -> x2 -> Node(x3, 'd, 'c, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = 'e & (Nil | Node(x1))",
        "Node(x1) & Node(any, any, any, Nil, any) -> 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(x1) & Node(any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Node(x1) & Node(any, any, any, Nil, any) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'f" ],
    "constr": [
      [
        "'f",
        "('d -> 'c -> x3 -> Node(Node(x1) & Node(any, any, any, Nil, any) | 'e & (Nil | Node(x2)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "('d -> 'c -> x1 -> Node(Node(x3) & Node(any, any, any, Nil, any) | 'e & (Nil | Node(x2)), 'd, 'c, x1, int)) | 'f where x1 = 'b & (Nil | Node(x2)) and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, 'a, Nil | Node(x3), int",
        "'f"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'d -> 'c -> x3 -> Node(Node(x2) & Node(any, any, any, Nil, any), 'd, 'c, x3, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x1))",
        "Key -> 'e"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'e" ],
    "constr": [
      [
        "'e",
        "('c -> x2 -> Node(Node(x3) & Node(any, any, any, Nil, any), Key | 'd, 'c, x2, int)) | 'e where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = Nil | Node(x3), Key, 'a, Nil | Node(x3), int"
      ],
      [
        "('c -> x3 -> Node(Node(x1) & Node(any, any, any, Nil, any), Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x3 -> Node(Node(x1) & Node(any, any, any, Nil, any), Key, 'c, x3, int) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x3 -> Node(Node(x1) & Node(any, any, any, Nil, any), Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "(x3 -> Node(Node(x1) & Node(any, any, any, Nil, any), Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> Node(Node(x1) & Node(any, any, any, Nil, any), Key, 'a, x3, int) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "Nil -> 'c"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Nil | 'a" ], [ "Nil | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(Node(x2) & Node(any, any, any, Nil, any), Key, 'a, Nil | 'b & (Nil | Node(x1)), int) | 'c where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int"
      ],
      [
        "Node(Node(x2) & Node(any, any, any, Nil, any), Key, 'a, Nil | 'b & (Nil | Node(x1)), int) | 'c where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> 'd -> 'c -> x2 -> Node(x3, 'd, 'c, x2, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = 'b & (Nil | Node(x1)) and x3 = 'e & (Nil | Node(x1))",
        "Node(Node(x1) & Node(any, any, any, Nil, any), Key, 'a, Nil, int) -> 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Node(Node(x1) & Node(any, any, any, Nil, any), Key, 'a, Nil, int) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Node(Node(x1) & Node(any, any, any, Nil, any), Key, 'a, Nil, int) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'f" ],
    "constr": [
      [
        "'f",
        "('d -> 'c -> x3 -> Node(Node(Node(x2) & Node(any, any, any, Nil, any), Key, 'a, Nil, int) | 'e & (Nil | Node(x1)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x1))"
      ],
      [
        "('d -> 'c -> x3 -> Node(Node(Node(x1) & Node(any, any, any, Nil, any), Key, 'a, Nil, int) | 'e & (Nil | Node(x2)), 'd, 'c, x3, int)) | 'f where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'f"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'d -> 'c -> x3 -> Node(Node(Node(x2) & Node(any, any, any, Nil, any), Key, 'a, Nil, int), 'd, 'c, x3, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x1))",
        "Key -> 'e"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Key | 'a" ], [ "Key | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'e" ],
    "constr": [
      [
        "'e",
        "('c -> x3 -> Node(Node(Node(x1) & Node(any, any, any, Nil, any), Key, 'a, Nil, int), Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "('c -> x3 -> Node(Node(Node(x1) & Node(any, any, any, Nil, any), Key, 'a, Nil, int), Key | 'd, 'c, x3, int)) | 'e where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'c -> x3 -> Node(Node(Node(x2) & Node(any, any, any, Nil, any), Key, 'a, Nil, int), Key, 'c, x3, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x1))",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "(x3 -> Node(Node(Node(x1) & Node(any, any, any, Nil, any), Key, 'a, Nil, int), Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))"
      ],
      [
        "(x3 -> Node(Node(Node(x1) & Node(any, any, any, Nil, any), Key, 'a, Nil, int), Key, 'c | 'a, x3, int)) | 'd where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x2))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> Node(Node(Node(x2) & Node(any, any, any, Nil, any), Key, 'a, Nil, int), Key, 'a, x3, int) where x1 = Nil | Node(x1), Key, any, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int and x3 = 'b & (Nil | Node(x1))",
        "x1 -> 'c where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int"
      ],
      [
        "Nil | Node(x1) | 'b where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "Node(Node(Node(x1) & Node(any, any, any, Nil, any), Key, 'a, Nil, int), Key, 'a, Nil | Node(x3) | 'b & (Nil | Node(x2)), int) | 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, 'a, Nil | Node(x3), int"
      ],
      [
        "Node(Node(Node(x3) & Node(any, any, any, Nil, any), Key, 'a, Nil, int), Key, 'a, Nil | Node(x1) | 'b & (Nil | Node(x2)), int) | 'c where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, any, Nil | Node(x2), int and x3 = Nil | Node(x3), Key, 'a, Nil | Node(x3), int",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(Node(Node(x1) & Node(any, any, any, Nil, any), Key, 'a, Nil, int), Key, 'a, x2, int) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2, Key, 'a, x2, int)",
        "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "Nil | Node(tuple5)" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "str(enum) -> empty", "str(_Map_bal) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "empty", "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int", "any" ], [ "int", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "('a, 'a) -> bool(true | false)", "(int, int) -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ], [ "1", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(int, 1) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ], [ "1", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(int, 1) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(any, any, any, Nil, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "any"
      ],
      [ "Key", "any" ],
      [ "'a", "any" ],
      [
        "Node(x1) & Node(Nil, any, any, any, any) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int",
        "any"
      ],
      [ "int", "any" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(x1) & Node(any, any, any, Nil, any), Key, 'a, Node(x2) & Node(Nil, any, any, any, any), int where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int",
        "any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "Node(Node(x1) & Node(any, any, any, Nil, any), Key, 'a, Node(x2) & Node(Nil, any, any, any, any), int) where x1 = Nil | Node(x1), Key, 'a, Nil | Node(x1), int and x2 = Nil | Node(x2), Key, 'a, Nil | Node(x2), int",
        "x1 where x1 = Nil | Node(x1, Key, 'a, x1, int)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a", "'a -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "x1 where x1 = 'a & (x1 -> 'b)" ],
      [ "x1 where x1 = 'a & (x1 -> 'b)", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'b", "'a -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b & ('a -> 'c)" ], [ "'b & ('a -> 'c)", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [ [ "'b", "('a -> 'c) -> 'd" ] ],
    "prio": [ "'a", "'b", "'c" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'b", "'b & (('a -> 'c) -> 'd)" ],
      [ "'b & (('a -> 'c) -> 'd)", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g", "'h" ],
    "mono": [],
    "constr": [
      [
        "x1 -> 'c where x1 = 'd & (x1 -> 'e & ('a -> 'b))",
        "(x1 -> 'c) -> 'h where x1 = 'f & (x1 -> 'g & ('a -> 'b))"
      ]
    ],
    "prio": [ "'a", "'b", "'c" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'c & ('a -> 'b)" ], [ "'c & ('a -> 'b)", "'c" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g" ],
    "mono": [ "'a", "'b", "'c", "'d" ],
    "constr": [
      [
        "'d",
        "(x6 -> x4) | 'd & (~(x1 -> x2) | (x5 -> x4)) | 'f & 'd & (~(x1 -> x2) | (x6 -> x3)) where x1 = (x5 -> x4) | 'f & 'd & (x6 -> x3) & (x1 -> x2) and x2 = 'e & ('a -> 'b) | 'c & ('a -> 'b) and x3 = 'g & ('a -> 'b) | 'c & ('a -> 'b) and x4 = 'c & ('a -> 'b) and x5 = (x5 -> x4) | 'f & (x5 -> 'g & ('a -> 'b) | 'c & ('a -> 'b)) and x6 = (x5 -> x4) | 'f & (x6 -> x3)"
      ],
      [
        "(x3 -> x5) | 'd & (~(x4 -> x6) | (x1 -> x5)) | 'f & 'd & (~(x4 -> x6) | (x3 -> x2)) where x1 = (x1 -> x5) | 'f & (x1 -> 'g & ('a -> 'b) | 'c & ('a -> 'b)) and x2 = 'g & ('a -> 'b) | 'c & ('a -> 'b) and x3 = (x1 -> x5) | 'f & (x3 -> x2) and x4 = (x1 -> x5) | 'f & 'd & (x3 -> x2) & (x4 -> x6) and x5 = 'c & ('a -> 'b) and x6 = 'e & ('a -> 'b) | 'c & ('a -> 'b)",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b", "'c", "'d" ],
    "constr": [
      [ "'d", "'c & ('a -> 'b) | 'd" ], [ "'c & ('a -> 'b) | 'd", "'d" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'b", "'c", "'d" ],
    "constr": [
      [
        "'d",
        "(x2 -> x1) | 'd where x1 = 'c & ('a -> 'b) and x2 = (x2 -> x1) | 'd & (x2 -> 'e & ('a -> 'b) | 'c & ('a -> 'b))"
      ],
      [
        "(x2 -> x1) | 'd where x1 = 'c & ('a -> 'b) and x2 = (x2 -> x1) | 'd & (x2 -> 'e & ('a -> 'b) | 'c & ('a -> 'b))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b", "'c", "'d" ],
    "constr": [
      [ "'d", "'c & ('a -> 'b) | 'd" ], [ "'c & ('a -> 'b) | 'd", "'d" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b", "'c", "'d" ],
    "constr": [
      [ "'d", "'c & ('a -> 'b) | 'd" ], [ "'c & ('a -> 'b) | 'd", "'d" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'c & ('a -> 'b)" ], [ "'c & ('a -> 'b)", "'c" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g" ],
    "mono": [ "'a", "'b", "'c", "'d" ],
    "constr": [
      [
        "'d",
        "(x1 -> x4) | 'f & (x2 -> x5) & (x1 -> x3) | 'd & (~(x1 -> 'e & ('a -> 'b) | 'c & ('a -> 'b)) | (x1 -> x4)) where x1 = (x1 -> x4) | 'f & (x2 -> x5) & (x1 -> x3) and x2 = (x1 -> x4) | 'f & (x2 -> 'e & ('a -> 'b) | 'c & ('a -> 'b)) & (x1 -> x3) and x3 = 'g & ('a -> 'b) | 'c & ('a -> 'b) and x4 = 'c & ('a -> 'b) and x5 = 'e & ('a -> 'b) | 'c & ('a -> 'b)"
      ],
      [
        "(x2 -> x1) | 'f & (x5 -> x4) & (x2 -> x3) | 'd & (~(x2 -> 'e & ('a -> 'b) | 'c & ('a -> 'b)) | (x2 -> x1)) where x1 = 'c & ('a -> 'b) and x2 = (x2 -> x1) | 'f & (x5 -> x4) & (x2 -> x3) and x3 = 'g & ('a -> 'b) | 'c & ('a -> 'b) and x4 = 'e & ('a -> 'b) | 'c & ('a -> 'b) and x5 = (x2 -> x1) | 'f & (x5 -> 'e & ('a -> 'b) | 'c & ('a -> 'b)) & (x2 -> x3)",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b", "'c", "'d" ],
    "constr": [
      [ "'d", "'c & ('a -> 'b) | 'd" ], [ "'c & ('a -> 'b) | 'd", "'d" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'b", "'c", "'e" ],
    "constr": [
      [
        "'e",
        "(x5 -> x3) | 'e & (~(x5 -> x2) | (x4 -> x1)) where x1 = 'd & ('a -> 'b) | 'c & ('a -> 'b) and x2 = 'f & ('a -> 'b) | 'c & ('a -> 'b) and x3 = 'c & ('a -> 'b) and x4 = (x5 -> x3) | 'e & (x4 -> 'd & ('a -> 'b) | 'c & ('a -> 'b)) & (x5 -> x2) and x5 = (x5 -> x3) | 'e & (x4 -> x1) & (x5 -> x2)"
      ],
      [
        "(x5 -> x3) | 'e & (~(x5 -> x2) | (x4 -> x1)) where x1 = 'd & ('a -> 'b) | 'c & ('a -> 'b) and x2 = 'f & ('a -> 'b) | 'c & ('a -> 'b) and x3 = 'c & ('a -> 'b) and x4 = (x5 -> x3) | 'e & (x4 -> 'd & ('a -> 'b) | 'c & ('a -> 'b)) & (x5 -> x2) and x5 = (x5 -> x3) | 'e & (x4 -> x1) & (x5 -> x2)",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b", "'c", "'d" ],
    "constr": [
      [ "'d", "'c & ('a -> 'b) | 'd" ], [ "'c & ('a -> 'b) | 'd", "'d" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b", "'c", "'d" ],
    "constr": [
      [ "'d", "'c & ('a -> 'b) | 'd" ], [ "'c & ('a -> 'b) | 'd", "'d" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c & ('a -> 'b)", "'c & ('a -> 'b)" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [
      [ "'b & (('a -> 'd) -> x1) -> x1 where x1 = 'e & ('a -> 'd)", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "('b & (('a -> 'd) -> x1) -> x1) | 'c where x1 = 'e & ('a -> 'd)"
      ],
      [
        "('b & (('a -> 'd) -> x1) -> x1) | 'c where x1 = 'e & ('a -> 'd)",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a \\ 0", "any" ], [ "1", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "('a \\ 0, 1) -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & 0" ], [ "'a & 0", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "empty" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a", "int -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & (int -> 'b)" ], [ "'a & (int -> 'b)", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'b", "any" ], [ "'a & int & ~0", "any" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "('b, 'a & int & ~0) -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ (int \\ 0)" ], [ "'a \\ (int \\ 0)", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "empty" ] ] },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [ [ "'b & (int -> 'd & int) -> 'a & int -> int", "'c" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'c" ],
    "constr": [
      [ "'c", "('b & (int -> 'd & int) -> 'a & int -> int) | 'c" ],
      [ "('b & (int -> 'd & int) -> 'a & int -> int) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [
        "(('a -> 'b) -> x1) -> x1 where x1 = 'c & ('a -> 'b)",
        "((int -> int) -> int -> int) -> 'd"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int" ], [ "int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int" ], [ "int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "(int -> int) | 'a" ], [ "(int -> int) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int" ], [ "int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int" ], [ "int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "(int -> int) | 'a" ], [ "(int -> int) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "(int -> int) | 'a" ], [ "(int -> int) | 'a", "'a" ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "any", "int -> int" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "int -> int", "any" ] ] },
  { "vars": [ "'a" ], "mono": [], "constr": [ [ "int -> int", "'a" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "(int -> int) | 'a" ], [ "(int -> int) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "'a \\ lst(tuple0)",
        "lst(any, 'b & lst(x1)) where x1 = tuple0 | (any, lst(x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a & (lst(any, 'b & lst(x1)) | lst(tuple0)) where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "'a & (lst(any, 'b & lst(x1)) | lst(tuple0)) where x1 = tuple0 | (any, lst(x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "'a", "'b & lst(x1) -> 'c where x1 = tuple0 | (any, lst(x1))" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'a", "'a & ('b & lst(x1) -> 'c) where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "'a & ('b & lst(x1) -> 'c) where x1 = tuple0 | (any, lst(x1))", "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a", "any" ], [ "1", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "('a, 1) -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "empty" ] ] },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [
      [
        "'b & ('d & lst(x2) -> 'e & int) -> 'a & (lst(any, 'd & lst(x1)) | lst(tuple0)) -> int where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, lst(x2))",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "('b & ('d & lst(x2) -> 'e & int) -> 'a & (lst(any, 'd & lst(x1)) | lst(tuple0)) -> int) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, lst(x2))"
      ],
      [
        "('b & ('d & lst(x2) -> 'e & int) -> 'a & (lst(any, 'd & lst(x1)) | lst(tuple0)) -> int) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, lst(x2))",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [
      [
        "(('a -> 'b) -> x1) -> x1 where x1 = 'c & ('a -> 'b)",
        "(('d & lst(x1) -> int) -> lst(tuple0 | (any, 'd & lst(x1))) -> int) -> 'e where x1 = tuple0 | (any, lst(x1))"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & lst(tuple0)" ], [ "'a & lst(tuple0)", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "(lst(tuple0) -> int) | 'a" ],
      [ "(lst(tuple0) -> int) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & lst(tuple0)" ], [ "'a & lst(tuple0)", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "(lst(tuple0) -> int) | 'c & (~('a & lst(tuple0) -> int | 'b) | (lst(tuple0) -> int)) | 'd & 'c"
      ],
      [
        "(lst(tuple0) -> int) | 'c & (~('a & lst(tuple0) -> int | 'b) | (lst(tuple0) -> int)) | 'd & 'c",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "(lst(tuple0) -> int) | 'a" ],
      [ "(lst(tuple0) -> int) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'b & lst(x2) | 'a & lst(x2) where x1 = 'b & lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, x1)"
      ],
      [
        "'b & lst(x2) | 'a & lst(x2) where x1 = 'b & lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, x1)",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int" ], [ "int", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "(lst(tuple0 | (any, x1)) -> int) | 'a where x1 = 'b & lst(tuple0 | (any, x1))"
      ],
      [
        "(lst(tuple0 | (any, x1)) -> int) | 'a where x1 = 'b & lst(tuple0 | (any, x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(x1) \\ lst(x2)) where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, 'a & lst(x2))"
      ],
      [
        "'a \\ (lst(x1) \\ lst(x2)) where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, 'a & lst(x2))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'b & lst(x2) | 'a & lst(x2) where x1 = 'b & lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, x1)"
      ],
      [
        "'b & lst(x2) | 'a & lst(x2) where x1 = 'b & lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, x1)",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int" ], [ "int", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "(lst(tuple0 | (any, x1)) -> int) | 'b & (~('c & lst(x3) | 'a & lst(x3) -> int) | (lst(tuple0 | (any, x2)) -> int)) | 'd & 'b where x1 = 'c & lst(tuple0 | (any, x1)) and x2 = 'c & lst(tuple0 | (any, x2)) and x3 = tuple0 | (any, x1)"
      ],
      [
        "(lst(tuple0 | (any, x1)) -> int) | 'b & (~('c & lst(x3) | 'a & lst(x3) -> int) | (lst(tuple0 | (any, x2)) -> int)) | 'd & 'b where x1 = 'c & lst(tuple0 | (any, x1)) and x2 = 'c & lst(tuple0 | (any, x2)) and x3 = tuple0 | (any, x1)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(x1) \\ lst(x2)) where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, 'a & lst(x2))"
      ],
      [
        "'a \\ (lst(x1) \\ lst(x2)) where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, 'a & lst(x2))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "(lst(tuple0 | (any, x1)) -> int) | 'b where x1 = 'a & lst(tuple0 | (any, x1))"
      ],
      [
        "(lst(tuple0 | (any, x1)) -> int) | 'b where x1 = 'a & lst(tuple0 | (any, x1))",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "(lst(tuple0) -> int) | 'a" ],
      [ "(lst(tuple0) -> int) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "(lst(tuple0) -> int) | 'a \\ (arrow \\ (lst(tuple0) -> int)) | 'b & 'a"
      ],
      [
        "(lst(tuple0) -> int) | 'a \\ (arrow \\ (lst(tuple0) -> int)) | 'b & 'a",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "(lst(tuple0) -> int) | 'a" ],
      [ "(lst(tuple0) -> int) | 'a", "'a" ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "any", "lst(tuple0) -> int" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "lst(tuple0 | (any, x1)) -> int where x1 = lst(tuple0 | (any, x1))",
        "lst(tuple0) -> int"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "lst(tuple0 | (any, x1)) -> int where x1 = lst(tuple0 | (any, x1))",
        "any"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "any",
        "lst(tuple0 | (any, x1)) -> int where x1 = lst(tuple0 | (any, x1))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "lst(tuple0) -> int",
        "lst(tuple0 | (any, x1)) -> int where x1 = lst(tuple0 | (any, x1))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "any",
        "lst(tuple0 | (any, x1)) -> int where x1 = lst(tuple0 | (any, x1))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "lst(tuple0 | (any, x1)) -> int where x1 = lst(tuple0 | (any, x1))",
        "any"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "lst(tuple0 | (any, x1)) -> int where x1 = lst(tuple0 | (any, x1))",
        "lst(tuple0) -> int"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "lst(tuple0 | (any, x1)) -> int where x1 = lst(tuple0 | (any, x1))",
        "any"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "lst(tuple0 | (any, x1)) -> int where x1 = lst(tuple0 | (any, x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "(lst(tuple0 | (any, x1)) -> int) | 'a where x1 = lst(tuple0 | (any, x1))"
      ],
      [
        "(lst(tuple0 | (any, x1)) -> int) | 'a where x1 = lst(tuple0 | (any, x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "'a \\ lst(tuple0)", "lst('b, x1) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a & (lst('b, x1) | lst(tuple0)) where x1 = lst(tuple0 | (any, x1))"
      ],
      [
        "'a & (lst('b, x1) | lst(tuple0)) where x1 = lst(tuple0 | (any, x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'a", "'b -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'a", "'a & ('b -> 'c)" ], [ "'a & ('b -> 'c)", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [ [ "'b", "'a & ('c -> 'd) -> 'e" ] ],
    "prio": [ "'a", "'b", "'c", "'d" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'b", "'c", "'d" ],
    "constr": [
      [ "'b", "'b & ('a & ('c -> 'd) -> 'e)" ],
      [ "'b & ('a & ('c -> 'd) -> 'e)", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "'a & lst('b, x1) where x1 = lst(tuple0 | (any, x1))",
        "lst(any, 'c & lst(x1)) where x1 = tuple0 | (any, lst(x1))"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst('b, x1) \\ lst(any, 'c & lst(x2))) where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2))"
      ],
      [
        "'a \\ (lst('b, x2) \\ lst(any, 'c & lst(x1))) where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "'a", "'b & lst(x1) -> 'c where x1 = tuple0 | (any, lst(x1))" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'a", "'a & ('b & lst(x1) -> 'c) where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "'a & ('b & lst(x1) -> 'c) where x1 = tuple0 | (any, lst(x1))", "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [ "'a", "any" ], [ "'b", "x1 where x1 = lst(tuple0 | (any, x1))" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a & lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g", "'h", "'i" ],
    "mono": [],
    "constr": [
      [
        "'c & ('b & ('e -> 'f) -> 'g & ('h & lst(x4) -> 'i & lst(x5))) -> 'b & ('e -> 'f) -> 'a & (lst(any, 'h & lst(x2)) & lst('e, x1) | lst(tuple0)) -> lst('f, 'i & lst(x3)) | lst(tuple0) where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = tuple0 | (any, lst(x3)) and x4 = tuple0 | (any, lst(x4)) and x5 = tuple0 | (any, lst(x5))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g", "'h", "'i" ],
    "mono": [ "'d" ],
    "constr": [
      [
        "'d",
        "('c & ('b & ('e -> 'f) -> 'g & ('h & lst(x5) -> 'i & lst(x1))) -> 'b & ('e -> 'f) -> 'a & (lst(any, 'h & lst(x3)) & lst('e, x2) | lst(tuple0)) -> lst('f, 'i & lst(x4)) | lst(tuple0)) | 'd where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = tuple0 | (any, lst(x3)) and x4 = tuple0 | (any, lst(x4)) and x5 = tuple0 | (any, lst(x5))"
      ],
      [
        "('c & ('b & ('e -> 'f) -> 'g & ('h & lst(x5) -> 'i & lst(x1))) -> 'b & ('e -> 'f) -> 'a & (lst(any, 'h & lst(x3)) & lst('e, x2) | lst(tuple0)) -> lst('f, 'i & lst(x4)) | lst(tuple0)) | 'd where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = tuple0 | (any, lst(x3)) and x4 = tuple0 | (any, lst(x4)) and x5 = tuple0 | (any, lst(x5))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g", "'h", "'i" ],
    "mono": [],
    "constr": [
      [
        "(('a -> 'b) -> x1) -> x1 where x1 = 'c & ('a -> 'b)",
        "((x2 -> 'g & lst(x1) -> 'h & lst(x1)) -> x2 -> lst(tuple0 | ('e, 'g & lst(x1))) -> lst(tuple0 | ('f, 'h & lst(x1)))) -> 'i where x1 = tuple0 | (any, lst(x1)) and x2 = 'd & ('e -> 'f)"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "(lst(tuple0 | ('b, 'd & lst(x1))) -> lst(tuple0 | ('c, 'e & lst(x1)))) | 'a where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "(lst(tuple0 | ('b, 'd & lst(x1))) -> lst(tuple0 | ('c, 'e & lst(x1)))) | 'a where x1 = tuple0 | (any, lst(x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "arrow | 'a" ], [ "arrow | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ ('b -> 'c)" ], [ "'a \\ ('b -> 'c)", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "(lst(tuple0 | ('b, 'd & lst(x1))) -> lst(tuple0 | ('c, 'e & lst(x1)))) | 'a where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "(lst(tuple0 | ('b, 'd & lst(x1))) -> lst(tuple0 | ('c, 'e & lst(x1)))) | 'a where x1 = tuple0 | (any, lst(x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "arrow | 'a" ], [ "arrow | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ ('b -> 'c)" ], [ "'a \\ ('b -> 'c)", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "arrow | 'a" ], [ "arrow | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'b & ('c -> 'd)" ], [ "'b & ('c -> 'd)", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "(lst(tuple0 | ('b, x5)) -> lst(tuple0 | ('c, x4))) | 'a & (x5 -> x4) where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | ('c, lst(x2) | 'e & lst(x1)) and x3 = tuple0 | (any, lst(x3)) and x4 = lst(x2) | 'e & lst(x3) and x5 = 'd & lst(tuple0 | ('b, x5))"
      ],
      [
        "(lst(tuple0 | ('b, x5)) -> lst(tuple0 | ('c, x4))) | 'a & (x5 -> x4) where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | ('c, lst(x2) | 'e & lst(x1)) and x3 = tuple0 | (any, lst(x3)) and x4 = lst(x2) | 'e & lst(x3) and x5 = 'd & lst(tuple0 | ('b, x5))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "('b & ('c -> 'd) -> lst(tuple0 | ('c, x4)) -> lst(tuple0 | ('d, lst(x2) | 'f & lst(x3)))) | 'a where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | ('d, lst(x2) | 'f & lst(x1)) and x3 = tuple0 | (any, lst(x3)) and x4 = 'e & lst(tuple0 | ('c, x4))"
      ],
      [
        "('b & ('c -> 'd) -> lst(tuple0 | ('c, x2)) -> lst(tuple0 | ('d, lst(x4) | 'f & lst(x1)))) | 'a where x1 = tuple0 | (any, lst(x1)) and x2 = 'e & lst(tuple0 | ('c, x2)) and x3 = tuple0 | (any, lst(x3)) and x4 = tuple0 | ('d, lst(x4) | 'f & lst(x3))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "'b \\ (lst(x1) \\ lst(x2)) where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | ('a, 'b & lst(x2))"
      ],
      [
        "'b \\ (lst(x1) \\ lst(x2)) where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | ('a, 'b & lst(x2))",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "lst(x2) | 'b where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | ('a, lst(x2) | 'b & lst(x1))"
      ],
      [
        "lst(x2) | 'b where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | ('a, lst(x2) | 'b & lst(x1))",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'b & ('c -> 'd)" ], [ "'b & ('c -> 'd)", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "(lst(tuple0) -> lst(tuple0 | ('b, 'c & lst(x1)))) | 'a & arrow where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "(lst(tuple0) -> lst(tuple0 | ('b, 'c & lst(x1)))) | 'a & arrow where x1 = tuple0 | (any, lst(x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "('b & ('c -> 'd) -> lst(tuple0) -> lst(tuple0 | ('d, 'e & lst(x1)))) | 'a where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "('b & ('c -> 'd) -> lst(tuple0) -> lst(tuple0 | ('d, 'e & lst(x1)))) | 'a where x1 = tuple0 | (any, lst(x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'b & ('c -> 'd)" ], [ "'b & ('c -> 'd)", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "(lst(tuple0 | ('b, x5)) -> lst(tuple0 | ('c, x4))) | 'a & (x5 -> x4) where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | ('c, lst(x2) | 'e & lst(x1)) and x3 = tuple0 | (any, lst(x3)) and x4 = lst(x2) | 'e & lst(x3) and x5 = 'd & lst(tuple0 | ('b, x5))"
      ],
      [
        "(lst(tuple0 | ('b, x5)) -> lst(tuple0 | ('c, x4))) | 'a & (x5 -> x4) where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | ('c, lst(x2) | 'e & lst(x1)) and x3 = tuple0 | (any, lst(x3)) and x4 = lst(x2) | 'e & lst(x3) and x5 = 'd & lst(tuple0 | ('b, x5))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g", "'h" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "('c & ('d -> 'e) -> lst(tuple0 | ('d, x10)) -> lst(tuple0 | ('e, lst(x8) | 'g & lst(x5)))) | 'b & (~('c & ('d -> 'e) -> (lst(tuple0 | ('d, x10)) -> lst(tuple0 | ('e, x9))) | 'a & (x10 -> x9)) | ('c & ('d -> 'e) -> lst(tuple0 | ('d, x1)) -> lst(tuple0 | ('e, lst(x4) | 'g & lst(x3))))) | 'h & 'b where x1 = 'f & lst(tuple0 | ('d, x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = tuple0 | (any, lst(x3)) and x4 = tuple0 | ('e, lst(x4) | 'g & lst(x2)) and x5 = tuple0 | (any, lst(x5)) and x6 = tuple0 | (any, lst(x6)) and x7 = tuple0 | (any, lst(x7)) and x8 = tuple0 | ('e, lst(x8) | 'g & lst(x7)) and x9 = lst(x8) | 'g & lst(x6) and x10 = 'f & lst(tuple0 | ('d, x10))"
      ],
      [
        "('c & ('d -> 'e) -> lst(tuple0 | ('d, x9)) -> lst(tuple0 | ('e, lst(x7) | 'g & lst(x8)))) | 'b & (~('c & ('d -> 'e) -> (lst(tuple0 | ('d, x9)) -> lst(tuple0 | ('e, x10))) | 'a & (x9 -> x10)) | ('c & ('d -> 'e) -> lst(tuple0 | ('d, x4)) -> lst(tuple0 | ('e, lst(x3) | 'g & lst(x1))))) | 'h & 'b where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = tuple0 | ('e, lst(x3) | 'g & lst(x2)) and x4 = 'f & lst(tuple0 | ('d, x4)) and x5 = tuple0 | (any, lst(x5)) and x6 = tuple0 | (any, lst(x6)) and x7 = tuple0 | ('e, lst(x7) | 'g & lst(x6)) and x8 = tuple0 | (any, lst(x8)) and x9 = 'f & lst(tuple0 | ('d, x9)) and x10 = lst(x7) | 'g & lst(x5)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "'b \\ (lst(x1) \\ lst(x2)) where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | ('a, 'b & lst(x2))"
      ],
      [
        "'b \\ (lst(x1) \\ lst(x2)) where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | ('a, 'b & lst(x2))",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "lst(x2) | 'b where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | ('a, lst(x2) | 'b & lst(x1))"
      ],
      [
        "lst(x2) | 'b where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | ('a, lst(x2) | 'b & lst(x1))",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'f" ],
    "constr": [
      [
        "'f",
        "('a & ('b -> 'c) -> lst(tuple0 | ('b, x1)) -> lst(tuple0 | ('c, lst(x3) | 'e & lst(x4)))) | 'f where x1 = 'd & lst(tuple0 | ('b, x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = tuple0 | ('c, lst(x3) | 'e & lst(x2)) and x4 = tuple0 | (any, lst(x4))"
      ],
      [
        "('a & ('b -> 'c) -> lst(tuple0 | ('b, x4)) -> lst(tuple0 | ('c, lst(x2) | 'e & lst(x3)))) | 'f where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | ('c, lst(x2) | 'e & lst(x1)) and x3 = tuple0 | (any, lst(x3)) and x4 = 'd & lst(tuple0 | ('b, x4))",
        "'f"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'b & ('c -> 'd)" ], [ "'b & ('c -> 'd)", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "(lst(tuple0) -> lst(tuple0 | ('b, 'c & lst(x1)))) | 'a & arrow where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "(lst(tuple0) -> lst(tuple0 | ('b, 'c & lst(x1)))) | 'a & arrow where x1 = tuple0 | (any, lst(x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "('c & ('d -> 'e) -> lst(tuple0) -> lst(tuple0 | ('e, 'f & lst(x1)))) | 'b & (~('c & ('d -> 'e) -> (lst(tuple0) -> lst(tuple0 | ('e, 'f & lst(x3)))) | 'a & arrow) | ('c & ('d -> 'e) -> lst(tuple0) -> lst(tuple0 | ('e, 'f & lst(x2))))) | 'g & 'b where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = tuple0 | (any, lst(x3))"
      ],
      [
        "('c & ('d -> 'e) -> lst(tuple0) -> lst(tuple0 | ('e, 'f & lst(x1)))) | 'b & (~('c & ('d -> 'e) -> (lst(tuple0) -> lst(tuple0 | ('e, 'f & lst(x2)))) | 'a & arrow) | ('c & ('d -> 'e) -> lst(tuple0) -> lst(tuple0 | ('e, 'f & lst(x3))))) | 'g & 'b where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = tuple0 | (any, lst(x3))",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'e" ],
    "constr": [
      [
        "'e",
        "('a & ('b -> 'c) -> lst(tuple0) -> lst(tuple0 | ('c, 'd & lst(x1)))) | 'e where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "('a & ('b -> 'c) -> lst(tuple0) -> lst(tuple0 | ('c, 'd & lst(x1)))) | 'e where x1 = tuple0 | (any, lst(x1))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "arrow | 'a" ], [ "arrow | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ ('b -> 'c)" ], [ "'a \\ ('b -> 'c)", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "arrow | 'a" ], [ "arrow | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ ('b -> 'c)" ], [ "'a \\ ('b -> 'c)", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "arrow | 'a" ], [ "arrow | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "any", "arrow" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "arrow -> lst(tuple0) -> lst(tuple0)", "arrow" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "arrow -> lst(tuple0) -> lst(tuple0)", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "('a -> 'b) -> lst(tuple0 | ('a, x2)) -> lst(tuple0 | ('b, x1)) where x1 = lst(tuple0 | ('b, x1)) and x2 = lst(tuple0 | ('a, x2))",
        "arrow -> lst(tuple0) -> lst(tuple0)"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "any",
        "('a -> 'b) -> lst(tuple0 | ('a, x1)) -> lst(tuple0 | ('b, x2)) where x1 = lst(tuple0 | ('a, x1)) and x2 = lst(tuple0 | ('b, x2))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "any",
        "('a -> 'b) -> lst(tuple0 | ('a, x2)) -> lst(tuple0 | ('b, x1)) where x1 = lst(tuple0 | ('b, x1)) and x2 = lst(tuple0 | ('a, x2))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "arrow",
        "('a -> 'b) -> lst(tuple0 | ('a, x2)) -> lst(tuple0 | ('b, x1)) where x1 = lst(tuple0 | ('b, x1)) and x2 = lst(tuple0 | ('a, x2))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "any",
        "('a -> 'b) -> lst(tuple0 | ('a, x1)) -> lst(tuple0 | ('b, x2)) where x1 = lst(tuple0 | ('a, x1)) and x2 = lst(tuple0 | ('b, x2))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "('a -> 'b) -> lst(tuple0 | ('a, x2)) -> lst(tuple0 | ('b, x1)) where x1 = lst(tuple0 | ('b, x1)) and x2 = lst(tuple0 | ('a, x2))",
        "any"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "('a -> 'b) -> lst(tuple0 | ('a, x2)) -> lst(tuple0 | ('b, x1)) where x1 = lst(tuple0 | ('b, x1)) and x2 = lst(tuple0 | ('a, x2))",
        "any"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "('a -> 'b) -> lst(tuple0 | ('a, x2)) -> lst(tuple0 | ('b, x1)) where x1 = lst(tuple0 | ('b, x1)) and x2 = lst(tuple0 | ('a, x2))",
        "arrow"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "('a -> 'b) -> lst(tuple0 | ('a, x2)) -> lst(tuple0 | ('b, x1)) where x1 = lst(tuple0 | ('b, x1)) and x2 = lst(tuple0 | ('a, x2))",
        "any"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [
        "('b -> 'c) -> x1 -> x2 where x1 = lst(tuple0 | ('b, x1)) and x2 = lst(tuple0 | ('c, x2))",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & ('b -> 'c)" ], [ "'a & ('b -> 'c)", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "(x1 -> x2) | 'c where x1 = lst(tuple0 | ('a, x1)) and x2 = lst(tuple0 | ('b, x2))"
      ],
      [
        "(x1 -> x2) | 'c where x1 = lst(tuple0 | ('a, x1)) and x2 = lst(tuple0 | ('b, x2))",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "x2 -> x1 where x1 = lst(tuple0 | ('b, x1)) and x2 = lst(tuple0 | ('a, x2))",
        "empty"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [
        "'a & ('c -> 'd) -> x2 -> x1 where x1 = lst(tuple0 | ('d, x1)) and x2 = lst(tuple0 | ('c, x2))",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "('a & ('c -> 'd) -> x1 -> x2) | 'b where x1 = lst(tuple0 | ('c, x1)) and x2 = lst(tuple0 | ('d, x2))"
      ],
      [
        "('a & ('c -> 'd) -> x2 -> x1) | 'b where x1 = lst(tuple0 | ('d, x1)) and x2 = lst(tuple0 | ('c, x2))",
        "'b"
      ]
    ]
  }
]