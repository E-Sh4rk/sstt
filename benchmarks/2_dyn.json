[
  { "vars": [], "mono": [], "constr": [] },
  { "vars": [], "mono": [], "constr": [ [ "bool(true)", "int" ] ] },
  { "vars": [], "mono": [], "constr": [] },
  { "vars": [], "mono": [], "constr": [ [ "42", "int" ] ] },
  { "vars": [], "mono": [], "constr": [] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "bool(true | false) | 'a", "'b" ],
      [ "'b", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'b" ],
      [ "'b", "bool(true | false) | 'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "int | 'a", "'b" ],
      [ "'b", "int | 'a" ],
      [ "int | 'a", "'b" ],
      [ "'b", "int | 'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "int | 'a", "any" ], [ "bool(true | false) | 'a", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "int | 'a, bool(true | false) | 'a",
        "bool(true | false) | 'a, int | 'a"
      ]
    ],
    "prio": [ "'a" ]
  },
  { "vars": [], "mono": [], "constr": [] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "bool(true | false) | 'a", "'b" ],
      [ "'b", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'b" ],
      [ "'b", "bool(true | false) | 'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "int | 'a", "'b" ],
      [ "'b", "int | 'a" ],
      [ "int | 'a", "'b" ],
      [ "'b", "int | 'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "bool(true | false) | 'a", "any" ], [ "int | 'a", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "bool(true | false) | 'a, int | 'a",
        "bool(true | false) | 'a, int | 'a"
      ]
    ],
    "prio": [ "'a" ]
  },
  { "vars": [], "mono": [], "constr": [] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "int", "'a" ], [ "'a", "int" ], [ "int", "'a" ], [ "'a", "int" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "bool(true | false)", "'a" ],
      [ "'a", "bool(true | false)" ],
      [ "bool(true | false)", "'a" ],
      [ "'a", "bool(true | false)" ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "int" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "bool(true | false)", "bool(true | false)" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "bool(true | false) | 'a", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "int | 'a", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "bool(true | false) | 'a", "any" ], [ "int | 'a", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 -> int | 'a -> (x1, int | 'a) where x1 = bool(true | false) | 'a",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1 -> int | 'a -> (x1, int | 'a)) | 'b where x1 = bool(true | false) | 'a"
      ],
      [
        "(x1 -> int | 'a -> (x1, int | 'a)) | 'b where x1 = bool(true | false) | 'a",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a", "A()" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & A()" ], [ "'a & A()", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a & A()", "A('b)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ (A() \\ A('b))" ], [ "'a \\ (A() \\ A('b))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'a & A('c) -> 'c", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "('a & A('c) -> 'c) | 'b" ],
      [ "('a & A('c) -> 'c) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a \\ A()", "A() | B()" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & (A() | B())" ], [ "'a & (A() | B())", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & B()", "~A()" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & B()", "A()" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ B()" ], [ "'a \\ B()", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & A()", "A() | B()" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & A()", "~A()" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ A()" ], [ "'a \\ A()", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a & A()", "A('b)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ (A() \\ A('b))" ], [ "'a \\ (A() \\ A('b))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a & A('b)", "A()" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a & B()", "B('b)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ (B() \\ B('b))" ], [ "'a \\ (B() \\ B('b))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & A()", "A() | B()" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & A()", "~A()" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ A()" ], [ "'a \\ A()", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [ [ "('a & B('d) -> 'd) & ('a & A('c) -> 'c)", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "('a & B('d) -> 'd) & ('a & A('c) -> 'c) | 'b" ],
      [ "('a & B('d) -> 'd) & ('a & A('c) -> 'c) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [ [ "(B('c) -> 'c) & (A('b) -> 'b)", "A('a) -> 'd" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'c & 'b | 'a" ], [ "'c & 'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "any", "'a" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "empty", "empty" ] ] },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "'a", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [ [ "(B('c) -> 'c) & (A('b) -> 'b)", "B('a) -> 'd" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'c & 'b | 'a" ], [ "'c & 'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "any", "'a" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "empty", "empty" ] ] },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "'a", "any" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'b", "any" ], [ "'a", "any" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'b -> 'a -> ('b, 'a)", "'c" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'c" ],
    "constr": [
      [ "'c", "('b -> 'a -> ('b, 'a)) | 'c" ],
      [ "('b -> 'a -> ('b, 'a)) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "Cons(x1) where x1 = 'a, Nil | Cons(x1)", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "Cons(x1) where x1 = 'a, Nil | Cons(x1)", "Nil | Cons(tuple2)" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "Cons(x1) where x1 = 'a, Nil | Cons(x1)", "~Cons(tuple2)" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [ [ "Cons(x1) where x1 = 'a, Nil | Cons(x1)", "Cons('b)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "('a, x1) | 'b where x1 = Nil | Cons('a, x1)" ],
      [ "('a, x1) | 'b where x1 = Nil | Cons('a, x1)", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [ [ "x1 where x1 = 'a, Nil | Cons(x1)", "any, 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "Nil | Cons(x1) | 'b where x1 = 'a, Nil | Cons(x1)" ],
      [ "Nil | Cons(x1) | 'b where x1 = 'a, Nil | Cons(x1)", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [ [ "Cons(x1) where x1 = 'a, Nil | Cons(x1)", "Cons('b)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "('a, x1) | 'b where x1 = Nil | Cons('a, x1)" ],
      [ "('a, x1) | 'b where x1 = Nil | Cons('a, x1)", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [ [ "x1 where x1 = 'a, Nil | Cons(x1)", "'b, any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [ [ "'b", "'a -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b & ('a -> 'c)" ], [ "'b & ('a -> 'c)", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [ [ "'c", "'b & ('a -> 'd) -> 'e" ] ],
    "prio": [ "'a", "'b", "'c", "'d" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'b", "'c", "'d" ],
    "constr": [
      [ "'c", "'c & ('b & ('a -> 'd) -> 'e)" ],
      [ "'c & ('b & ('a -> 'd) -> 'e)", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [ [ "'b", "x1 -> 'c where x1 = Nil | Cons('a, x1)" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "'b & (x1 -> 'c) where x1 = Nil | Cons('a, x1)" ],
      [ "'b & (x1 -> 'c) where x1 = Nil | Cons('a, x1)", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a", "any" ], [ "'b", "any" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a, 'b", "any" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "Cons(x1) where x1 = 'a, Nil | Cons(x1)", "Cons(tuple2)" ]
    ],
    "prio": [ "'a" ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "any" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "Nil | Cons(tuple2)" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "~Cons(tuple2)" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "Cons(tuple2)" ] ] },
  { "vars": [], "mono": [], "constr": [] },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'b & ('a -> 'd) -> x1 -> Nil | Cons('d, 'f) where x1 = Nil | Cons('a, x1)",
        "'c & ('b & ('a -> 'd) -> 'e & (x1 -> 'f)) where x1 = Nil | Cons('a, x1)"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b \\ ('a -> 'c)" ], [ "'b \\ ('a -> 'c)", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "arrow | 'a" ], [ "arrow | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "('b & ('a -> 'd) -> x1 -> Nil | Cons('d, x2)) | 'c where x1 = Nil | Cons('a, x1) and x2 = Nil | Cons('d, x2) | 'e"
      ],
      [
        "('b & ('a -> 'd) -> x1 -> Nil | Cons('d, x2)) | 'c where x1 = Nil | Cons('a, x1) and x2 = Nil | Cons('d, x2) | 'e",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "(x2 -> Nil | Cons('b, x1)) | 'c where x1 = Nil | Cons('b, x1) | 'd and x2 = Nil | Cons('a, x2)"
      ],
      [
        "(x1 -> Nil | Cons('b, x2)) | 'c where x1 = Nil | Cons('a, x1) and x2 = Nil | Cons('b, x2) | 'd",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "x1 where x1 = Nil | Cons('a, x1) | 'b" ],
      [ "x1 where x1 = Nil | Cons('a, x1) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "arrow",
        "('a -> 'b) -> x2 -> Nil | Cons('b, x1) where x1 = Nil | Cons('b, x1) and x2 = Nil | Cons('a, x2)"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "('a -> 'b) -> x1 -> Nil | Cons('b, x2) where x1 = Nil | Cons('a, x1) and x2 = Nil | Cons('b, x2)",
        "arrow"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a", "{ a : any ; b : any ..}" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & { a : any ; b : any ..}" ],
      [ "'a & { a : any ; b : any ..}", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a & { a : any ; b : any ..}", "{ b : 'b ..}" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (~{ a : any ; b : any ..} | { b : 'b ..})" ],
      [ "'a & (~{ a : any ; b : any ..} | { b : 'b ..})", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "'a & { b : 'b ..} & { a : any ; b : any ..}", "{ a : 'c ..}" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'a",
        "'a & (~{ a : any ; b : any ..} | ~{ b : 'b ..} | { a : 'c ..})"
      ],
      [
        "'a & (~{ a : any ; b : any ..} | ~{ b : 'b ..} | { a : 'c ..})",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'b", "any" ], [ "'a", "any" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [ "'a & { b : 'c ..} & { a : 'd ..} -> { a : 'd ; b : 'c }", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "('a & { b : 'c ..} & { a : 'd ..} -> { a : 'd ; b : 'c }) | 'b"
      ],
      [
        "('a & { b : 'c ..} & { a : 'd ..} -> { a : 'd ; b : 'c }) | 'b",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a", "{ a : any ; b : any }" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & { a : any ; b : any }" ],
      [ "'a & { a : any ; b : any }", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a & { a : any ; b : any }", "{ b : 'b ..}" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (~{ a : any ; b : any } | { b : 'b ..})" ],
      [ "'a & (~{ a : any ; b : any } | { b : 'b ..})", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "'a & { b : 'b ..} & { a : any ; b : any }", "{ a : 'c ..}" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'a", "'a & (~{ a : any ; b : any } | ~{ b : 'b ..} | { a : 'c ..})"
      ],
      [
        "'a & (~{ a : any ; b : any } | ~{ b : 'b ..} | { a : 'c ..})", "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'b", "any" ], [ "'a", "any" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [
        "'a & { b : 'c ..} & { a : 'd ..} & { a : any ; b : any } -> { a : 'd ; b : 'c }",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "('a & { b : 'c ..} & { a : 'd ..} & { a : any ; b : any } -> { a : 'd ; b : 'c }) | 'b"
      ],
      [
        "('a & { b : 'c ..} & { a : 'd ..} & { a : any ; b : any } -> { a : 'd ; b : 'c }) | 'b",
        "'b"
      ]
    ]
  },
  { "vars": [], "mono": [], "constr": [] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a -> __ref({ _0 :? 'a })", "42 -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "42 | 'a" ], [ "42 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "__ref({ _0 :? 42 | 'a }) | 'b" ],
      [ "__ref({ _0 :? 42 | 'a }) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "__ref({ _0 :? 42 | 'a })", "__ref({ _0 :? int })" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "int \\ 42 | 'a & int" ], [ "int \\ 42 | 'a & int", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a -> __ref({ _0 :? 'a })", "42 -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "42 | 'a" ], [ "42 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "__ref({ _0 :? 42 | 'a }) | 'b" ],
      [ "__ref({ _0 :? 42 | 'a }) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "__ref({ _0 :? 42 | 'b })", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "__ref({ _0 :? 42 | 'b }) | 'a" ],
      [ "__ref({ _0 :? 42 | 'b }) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'b -> __ref({ _0 :? 'b })", "'a -> 'c" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [ "'c", "__ref({ _0 :? 'b | 'a }) | 'c" ],
      [ "__ref({ _0 :? 'b | 'a }) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "__ref({ _0 :? 'a })", "empty" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "__ref({ _0 :? 'b | 'a })", "any" ], [ "42", "any" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [
        "(__ref({ _0 :? 'c }), 'c) -> tuple0",
        "(__ref({ _0 :? 'b | 'a }), 42) -> 'd"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "~'a & 42 | 'b" ], [ "~'a & 42 | 'b", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "42 | 'b | 'a" ], [ "42 | 'b | 'a", "'c" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [ "__ref({ _0 :? 'c }) -> 'c", "__ref({ _0 :? 42 | 'b | 'a }) -> 'd" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "42 | 'b | 'a" ], [ "42 | 'b | 'a", "'c" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "42 | 'b | 'a" ], [ "42 | 'b | 'a", "'c" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "42 | 'c | 'b | 'a" ], [ "42 | 'c | 'b | 'a", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "any", "42 | 'b | 'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "42 | 'b | 'a", "any" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'a -> 42 | 'c | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "('a -> 42 | 'c | 'a) | 'b" ],
      [ "('a -> 42 | 'c | 'a) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a", "~__ref()" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ __ref()" ], [ "'a \\ __ref()", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a \\ __ref()", "__ref()" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & __ref()" ], [ "'a & __ref()", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a", "__ref()" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & __ref()" ], [ "'a & __ref()", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "('a & __ref() -> bool(true)) & ('a \\ __ref() -> bool(false))", "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "('a & __ref() -> bool(true)) & ('a \\ __ref() -> bool(false)) | 'b"
      ],
      [
        "('a & __ref() -> bool(true)) & ('a \\ __ref() -> bool(false)) | 'b",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a", "__ref()" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & __ref()" ], [ "'a & __ref()", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & __ref()", "~__ref()" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ __ref()" ], [ "'a \\ __ref()", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a", "~__ref()" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ __ref()" ], [ "'a \\ __ref()", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "('a \\ __ref() -> bool(true)) & ('a & __ref() -> bool(false))", "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "('a \\ __ref() -> bool(true)) & ('a & __ref() -> bool(false)) | 'b"
      ],
      [
        "('a \\ __ref() -> bool(true)) & ('a & __ref() -> bool(false)) | 'b",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "tuple0 -> __dict({ _0 :? 'a ; _1 :? 'b })", "tuple0 -> 'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'c" ],
    "constr": [
      [ "'c", "__dict({ _0 :? 'a ; _1 :? 'b }) | 'c" ],
      [ "__dict({ _0 :? 'a ; _1 :? 'b }) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "__dict({ _0 :? 'b ; _1 :? 'c })", "any" ],
      [ "'a", "any" ],
      [ "42", "any" ]
    ],
    "prio": [ "'a", "'b", "'c" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [],
    "constr": [
      [
        "(__array({ _0 :? 'e }), int, 'e) | (__dict({ _0 :? 'd ; _1 :? 'e }), 'd, 'e) -> tuple0",
        "(__dict({ _0 :? 'b ; _1 :? 'c }), 'a, 42) -> 'f"
      ]
    ],
    "prio": [ "'a", "'b", "'c" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "42 | 'a" ], [ "42 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'b | 'a" ], [ "'b | 'a", "'c" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "42 | 'a" ], [ "42 | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "__dict({ _0 :? 'b | 'a ; _1 :? 42 | 'c })", "any" ],
      [ "str(_key)", "any" ],
      [ "0", "any" ]
    ],
    "prio": [ "'a", "'b", "'c" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [],
    "constr": [
      [
        "(__array({ _0 :? 'e }), int, 'e) | (__dict({ _0 :? 'd ; _1 :? 'e }), 'd, 'e) -> tuple0",
        "(__dict({ _0 :? 'b | 'a ; _1 :? 42 | 'c }), str(_key), 0) -> 'f"
      ]
    ],
    "prio": [ "'a", "'b", "'c" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "~'a & str(_key) | 'b" ], [ "~'a & str(_key) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "0 | 'a" ], [ "0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "str(_key) | 'b | 'a" ], [ "str(_key) | 'b | 'a", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "0 | 42 | 'a" ], [ "0 | 42 | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "__dict({ _0 :? str(_key) | 'b | 'a ; _1 :? 0 | 42 | 'c })", "any" ],
      [ "bool(false)", "any" ]
    ],
    "prio": [ "'a", "'b", "'c" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [],
    "constr": [
      [
        "(__array({ _0 :? 'd }), int) | (__dict({ _0 :? 'e ; _1 :? 'd }), 'e) -> 'd",
        "(__dict({ _0 :? str(_key) | 'b | 'a ; _1 :? 0 | 42 | 'c }), bool(false)) -> 'f"
      ]
    ],
    "prio": [ "'a", "'b", "'c" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "~'a & bool(false) | 'b" ], [ "~'a & bool(false) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "0 | 42 | 'a" ], [ "0 | 42 | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "bool(false) | str(_key) | 'b | 'a" ],
      [ "bool(false) | str(_key) | 'b | 'a", "'c" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "~'a & bool(false) | 'b" ], [ "~'a & bool(false) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "0 | 42 | 'a" ], [ "0 | 42 | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "bool(false) | str(_key) | 'b | 'a" ],
      [ "bool(false) | str(_key) | 'b | 'a", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "0 | 42 | 'b | 'a" ], [ "0 | 42 | 'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "any", "0 | 42 | 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "0 | 42 | 'a", "any" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "__dict({ _0 :? bool(false) | str(_key) | 'b | 'a ; _1 :? 0 | 42 | 'c })",
        "any"
      ],
      [ "0 | 42 | 'c", "any" ]
    ],
    "prio": [ "'a", "'b", "'c" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [
        "'a -> (__dict({ _0 :? bool(false) | str(_key) | 'c | 'a ; _1 :? 0 | 42 | 'd }), 0 | 42 | 'd)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "('a -> (__dict({ _0 :? bool(false) | str(_key) | 'c | 'a ; _1 :? 0 | 42 | 'd }), 0 | 42 | 'd)) | 'b"
      ],
      [
        "('a -> (__dict({ _0 :? bool(false) | str(_key) | 'c | 'a ; _1 :? 0 | 42 | 'd }), 0 | 42 | 'd)) | 'b",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> bool(true | false)", "'a -> ~bool(true)" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "('b -> ~bool(true)) & ('a -> any)", "'c -> ~bool(true)" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(__array({ _0 :? 'c }), int) | (__dict({ _0 :? 'd ; _1 :? 'c }), 'd) -> 'c",
        "'b -> 'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "('b -> ~bool(true)) & ('a -> any)", "any" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "__array({ _0 :? 'b | 'a })", "any" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "tuple0 -> __array({ _0 :? 'a })", "tuple0 -> 'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "__array({ _0 :? 'a }) | 'b" ],
      [ "__array({ _0 :? 'a }) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a -> __ref({ _0 :? 'a })", "0 -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "0 | 'a" ], [ "0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "__ref({ _0 :? 0 | 'a }) | 'b" ],
      [ "__ref({ _0 :? 0 | 'a }) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "__ref({ _0 :? 'b }) -> 'b", "__ref({ _0 :? 0 | 'a }) -> 'c" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "0 | 'a" ], [ "0 | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "0 | 'a" ], [ "0 | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "0 | 'b | 'a" ], [ "0 | 'b | 'a", "'b" ] ]
  },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "any", "0 | 'a" ] ] },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "0 | 'a", "any" ] ] },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "__array({ _0 :? 'c }) -> int", "__array({ _0 :? 'b | 'a }) -> 'd" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'b | 'a" ], [ "'b | 'a", "'c" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "0 | 'a", "any" ], [ "int", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [ "(int, int) -> bool(true | false)", "(0 | 'a, int) -> 'b" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "bool(true | false)", "~bool(true)" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "__ref({ _0 :? 'b }) -> 'b", "__ref({ _0 :? 0 | 'a & int }) -> 'c" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "0 | 'a & int" ], [ "0 | 'a & int", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "0 | 'a & int" ], [ "0 | 'a & int", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "0 | 'a & int | 'b" ], [ "0 | 'a & int | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "any", "0 | 'a & int" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "0 | 'a & int", "any" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "__array({ _0 :? 'b | 'a })", "any" ], [ "0 | 'c & int", "any" ]
    ],
    "prio": [ "'a", "'b", "'c" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "(__array({ _0 :? 'd }), int) | (__dict({ _0 :? 'e ; _1 :? 'd }), 'e) -> 'd",
        "(__array({ _0 :? 'b | 'a }), 0 | 'c & int) -> 'f"
      ]
    ],
    "prio": [ "'a", "'b", "'c" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'b | 'a" ], [ "'b | 'a", "'c" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'b | 'a" ], [ "'b | 'a", "'c" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'c | 'b | 'a" ], [ "'c | 'b | 'a", "'c" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "any", "'b | 'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b | 'a", "any" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "('b -> ~bool(true)) & ('a -> any)", "'a \\ 'b -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "any", "~bool(true)" ] ] },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "__array({ _0 :? 'b }) -> 'b -> tuple0",
        "__array({ _0 :? 'a }) -> 'c"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'a" ], [ "'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "('a -> tuple0) | 'b" ], [ "('a -> tuple0) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'c -> tuple0", "'a \\ 'b -> 'd" ] ],
    "prio": [ "'a", "'b", "'c" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'a \\ 'b | 'c" ], [ "'a \\ 'b | 'c", "'c" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "any", "bool(true)" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "tuple0", "any" ] ] },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "__ref({ _0 :? 'b }) -> 'b", "__ref({ _0 :? 0 | 'a & int }) -> 'c" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "0 | 'a & int" ], [ "0 | 'a & int", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "0 | 'a & int" ], [ "0 | 'a & int", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "0 | 'a & int | 'b" ], [ "0 | 'a & int | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "any", "0 | 'a & int" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "0 | 'a & int", "any" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "0 | 'a & int", "any" ], [ "1", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(0 | 'a & int, 1) -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "__ref({ _0 :? 0 | 'a & int })", "any" ], [ "int", "any" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "(__ref({ _0 :? 'b }), 'b) -> tuple0",
        "(__ref({ _0 :? 0 | 'a & int }), int) -> 'c"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int \\ 0 | 'a" ], [ "int \\ 0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int" ], [ "int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "('b -> ~bool(true)) & ('a -> any)", "'b -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "~bool(true) | 'a" ], [ "~bool(true) | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "~bool(true)", "~bool(true)" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "~bool(true)", "bool(true)" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "empty", "any" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [ "__ref({ _0 :? 'a }) -> 'a", "__ref({ _0 :? int }) -> 'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int" ], [ "int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int" ], [ "int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "any", "int" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ], [ "1", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(int, 1) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "__ref({ _0 :? int })", "any" ], [ "int", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "(__ref({ _0 :? 'a }), 'a) -> tuple0",
        "(__ref({ _0 :? int }), int) -> 'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int" ], [ "int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "bool(true | false)", "bool(true)" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "tuple0", "any" ] ] },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "('b -> ~bool(true)) & ('a -> any) -> __array({ _0 :? 'b | 'a }) -> __array({ _0 :? 'a \\ 'b | 'd })",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [
        "'c",
        "(('b -> ~bool(true)) & ('a -> any) -> __array({ _0 :? 'b | 'a }) -> __array({ _0 :? 'a \\ 'b | 'd })) | 'c"
      ],
      [
        "(('b -> ~bool(true)) & ('a -> any) -> __array({ _0 :? 'b | 'a }) -> __array({ _0 :? 'a \\ 'b | 'd })) | 'c",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "tuple0 -> __array({ _0 :? 'a })", "tuple0 -> 'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "__array({ _0 :? 'a }) | 'b" ],
      [ "__array({ _0 :? 'a }) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "__array({ _0 :? 'b }) -> 'b -> tuple0",
        "__array({ _0 :? 'a }) -> 'c"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'a" ], [ "'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "('a -> tuple0) | 'b" ], [ "('a -> tuple0) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a -> tuple0", "bool(true) -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "bool(true) | 'a" ], [ "bool(true) | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "__array({ _0 :? 'b }) -> 'b -> tuple0",
        "__array({ _0 :? bool(true) | 'a }) -> 'c"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "bool(true) | 'a" ], [ "bool(true) | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "(bool(true) | 'a -> tuple0) | 'b" ],
      [ "(bool(true) | 'a -> tuple0) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "bool(true) | 'b -> tuple0", "'a -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "'a \\ bool(true) | 'b" ], [ "'a \\ bool(true) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "tuple0", "empty" ] ] },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [
        "__array({ _0 :? 'c }) -> 'c -> tuple0",
        "__array({ _0 :? bool(true) | 'b | 'a }) -> 'd"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "bool(true) | 'b | 'a" ], [ "bool(true) | 'b | 'a", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "(bool(true) | 'b | 'a -> tuple0) | 'c" ],
      [ "(bool(true) | 'b | 'a -> tuple0) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "bool(true) | 'b | 'a -> tuple0", "bool(false) -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "~'a & bool(false) | 'b" ], [ "~'a & bool(false) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a", "~int" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ int" ], [ "'a \\ int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a \\ int", "int" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a", "int" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [
      [
        "('c -> ~(bool() \\ bool(~true))) & ('b -> any) -> __array({ _0 :? 'c | 'b }) -> __array({ _0 :? 'b \\ 'c | 'd })",
        "('a & int -> bool(true)) & ('a \\ int -> bool(false)) -> 'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'c \\ int | 'b | 'a" ], [ "'c \\ int | 'b | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ int" ], [ "'a \\ int", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'d" ],
    "constr": [
      [
        "'d",
        "(__array({ _0 :? 'b \\ int | 'a }) -> __array({ _0 :? 'a \\ 'b | 'a & int | 'c })) | 'd"
      ],
      [
        "(__array({ _0 :? 'b \\ int | 'a }) -> __array({ _0 :? 'a \\ 'b | 'a & int | 'c })) | 'd",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [
      [
        "__array({ _0 :? 'a }) -> __array({ _0 :? 'a & int | 'd })",
        "__array({ _0 :? bool(false) | bool(true) | 'c | 'b }) -> 'e"
      ]
    ],
    "prio": [ "'b", "'c" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'a", "bool(false) | bool(true) | 'c | 'b" ],
      [ "bool(false) | bool(true) | 'c | 'b", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b", "'d" ],
    "constr": [
      [ "'d", "__array({ _0 :? 'b & int | 'a & int | 'c }) | 'd" ],
      [ "__array({ _0 :? 'b & int | 'a & int | 'c }) | 'd", "'d" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [ "'a -> __array({ _0 :? 'c & int | 'a & int | 'd })", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "('a -> __array({ _0 :? 'c & int | 'a & int | 'd })) | 'b" ],
      [ "('a -> __array({ _0 :? 'c & int | 'a & int | 'd })) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "tuple0 -> __array({ _0 :? 'a })", "tuple0 -> 'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "__array({ _0 :? 'a }) | 'b" ],
      [ "__array({ _0 :? 'a }) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "tuple0 -> __array({ _0 :? 'a })", "tuple0 -> 'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "__array({ _0 :? 'a }) | 'b" ],
      [ "__array({ _0 :? 'a }) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [ "__array({ _0 :? 'a })", "any" ],
      [ "0", "any" ],
      [ "__array({ _0 :? 'b })", "any" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [
      [
        "(__array({ _0 :? 'c }), int, 'c) | (__dict({ _0 :? 'b ; _1 :? 'c }), 'b, 'c) -> tuple0",
        "(__array({ _0 :? 'a }), 0, __array({ _0 :? 'd })) -> 'e"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "__array({ _0 :? 'b }) | 'a" ],
      [ "__array({ _0 :? 'b }) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "__array({ _0 :? 'c }) | 'a" ],
      [ "__array({ _0 :? 'c }) | 'a", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [ "__array({ _0 :? __array({ _0 :? 'b }) | 'a })", "any" ],
      [ "0", "any" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [
      [
        "(__array({ _0 :? 'c }), int) | (__dict({ _0 :? 'd ; _1 :? 'c }), 'd) -> 'c",
        "(__array({ _0 :? __array({ _0 :? 'b }) | 'a }), 0) -> 'e"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "__array({ _0 :? 'b }) | 'a" ],
      [ "__array({ _0 :? 'b }) | 'a", "'c" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "__array({ _0 :? 'b }) | 'a" ],
      [ "__array({ _0 :? 'b }) | 'a", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "__array({ _0 :? 'b }) | 'c | 'a" ],
      [ "__array({ _0 :? 'b }) | 'c | 'a", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "any", "__array({ _0 :? 'b }) | 'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "__array({ _0 :? 'b }) | 'a", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [ "__array({ _0 :? 'b }) | 'a", "any" ],
      [ "0", "any" ],
      [ "42", "any" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [
      [
        "(__array({ _0 :? 'd }), int, 'd) | (__dict({ _0 :? 'c ; _1 :? 'd }), 'c, 'd) -> tuple0",
        "(__array({ _0 :? 'b }) | 'a, 0, 42) -> 'e"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "42 | 'a" ], [ "42 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "0 | 'a" ], [ "0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "42 | 'a" ], [ "42 | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'a", "__dict({ _0 :? 0 | 'c ; _1 :? 42 | 'b })" ],
      [ "__dict({ _0 :? 0 | 'c ; _1 :? 42 | 'b })", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "42 | 'a" ], [ "42 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "0 | 'a" ], [ "0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "42 | 'a" ], [ "42 | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'a", "__array({ _0 :? 42 | 'b })" ],
      [ "__array({ _0 :? 42 | 'b })", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "42 | 'a" ], [ "42 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "0 | 'a" ], [ "0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "42 | 'a" ], [ "42 | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "42 | 'a" ], [ "42 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "42 | 'a" ], [ "42 | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'a", "__array({ _0 :? 42 | 'b })" ],
      [ "__array({ _0 :? 42 | 'b })", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "42 | 'a" ], [ "42 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "42 | 'a" ], [ "42 | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "tuple0", "tuple0" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "tuple0", "tuple0" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "__array({ _0 :? __array({ _0 :? 42 | 'a }) })", "any" ],
      [ "0", "any" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [
        "(__array({ _0 :? 'b }), int) | (__dict({ _0 :? 'c ; _1 :? 'b }), 'c) -> 'b",
        "(__array({ _0 :? __array({ _0 :? 42 | 'a }) }), 0) -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "__array({ _0 :? 42 | 'a })" ],
      [ "__array({ _0 :? 42 | 'a })", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "__array({ _0 :? 42 | 'a })" ],
      [ "__array({ _0 :? 42 | 'a })", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "__array({ _0 :? 42 | 'a }) | 'b" ],
      [ "__array({ _0 :? 42 | 'a }) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "any", "__array({ _0 :? 42 | 'a })" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "__array({ _0 :? 42 | 'a })", "any" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "__array({ _0 :? 42 | 'a })", "any" ], [ "0", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [
        "(__array({ _0 :? 'b }), int) | (__dict({ _0 :? 'c ; _1 :? 'b }), 'c) -> 'b",
        "(__array({ _0 :? 42 | 'a }), 0) -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "42 | 'a" ], [ "42 | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "42 | 'a" ], [ "42 | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "42 | 'b | 'a" ], [ "42 | 'b | 'a", "'b" ] ]
  },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "any", "42 | 'a" ] ] },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "42 | 'a", "any" ] ] },
  { "vars": [ "'a", "'b" ], "mono": [], "constr": [ [ "42 | 'b", "'a" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "42 | 'b | 'a" ], [ "42 | 'b | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a", "any" ], [ "1", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [
        "(__array({ _0 :? 'b }), int) | (__dict({ _0 :? 'c ; _1 :? 'b }), 'c) -> 'b",
        "('a, 1) -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'b & 'a" ], [ "'b & 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "1 | 'a" ], [ "1 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "__dict({ _0 :? 1 | 'c ; _1 :? 'd & 'b })" ],
      [ "__dict({ _0 :? 1 | 'c ; _1 :? 'd & 'b })", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'b & 'a" ], [ "'b & 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "1 | 'a" ], [ "1 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "__array({ _0 :? 'c & 'b })" ],
      [ "__array({ _0 :? 'c & 'b })", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'b & 'a" ], [ "'b & 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "1 | 'a" ], [ "1 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'b & 'a" ], [ "'b & 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "__array({ _0 :? 'c & 'b })" ],
      [ "__array({ _0 :? 'c & 'b })", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'b & 'a" ], [ "'b & 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "1 | 'a" ], [ "1 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "__dict({ _0 :? 1 | 'c ; _1 :? 'b })" ],
      [ "__dict({ _0 :? 1 | 'c ; _1 :? 'b })", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "1 | 'a" ], [ "1 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "__array({ _0 :? 'b })" ], [ "__array({ _0 :? 'b })", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "1 | 'a" ], [ "1 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "__array({ _0 :? 'b })" ], [ "__array({ _0 :? 'b })", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "any", "empty" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "any", "empty" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "empty", "empty" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "any", "any" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "any", "any" ] ] },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "'a", "any" ] ] },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "'a", "any" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "empty", "any" ] ] },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "'a", "'a" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "empty", "empty" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [ "__dict({ _0 :? 1 | 'b ; _1 :? 'a })", "any" ],
      [ "0", "any" ],
      [ "'a", "any" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [
      [
        "(__array({ _0 :? 'b }), int, 'b) | (__dict({ _0 :? 'a ; _1 :? 'b }), 'a, 'b) -> tuple0",
        "(__dict({ _0 :? 1 | 'd ; _1 :? 'c }), 0, 'c) -> 'e"
      ]
    ],
    "prio": [ "'c", "'d" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'a", "(0..1) | 'b" ], [ "(0..1) | 'b", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'a", "'b" ], [ "'b", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "0 | 'a" ], [ "0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "__array({ _0 :? 'a })", "any" ], [ "0", "any" ], [ "'a", "any" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [
        "(__array({ _0 :? 'b }), int, 'b) | (__dict({ _0 :? 'a ; _1 :? 'b }), 'a, 'b) -> tuple0",
        "(__array({ _0 :? 'c }), 0, 'c) -> 'd"
      ]
    ],
    "prio": [ "'c" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'a", "'b" ], [ "'b", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "tuple0", "empty" ] ] },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "(__dict({ _0 :? (0..1) | 'c ; _1 :? 'b }) -> tuple0) & (__array({ _0 :? 'b }) -> tuple0)",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "(__dict({ _0 :? (0..1) | 'c ; _1 :? 'b }) -> tuple0) & (__array({ _0 :? 'b }) -> tuple0) | 'a"
      ],
      [
        "(__dict({ _0 :? (0..1) | 'c ; _1 :? 'b }) -> tuple0) & (__array({ _0 :? 'b }) -> tuple0) | 'a",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "tuple0 -> __dict({ _0 :? 'a ; _1 :? 'b })", "tuple0 -> 'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'c" ],
    "constr": [
      [ "'c", "__dict({ _0 :? 'a ; _1 :? 'b }) | 'c" ],
      [ "__dict({ _0 :? 'a ; _1 :? 'b }) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "tuple0 -> __array({ _0 :? 'a })", "tuple0 -> 'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "__array({ _0 :? 'a }) | 'b" ],
      [ "__array({ _0 :? 'a }) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [ "__dict({ _0 :? 'b ; _1 :? 'c })", "any" ],
      [ "'a", "any" ],
      [ "__array({ _0 :? 'd })", "any" ]
    ],
    "prio": [ "'a", "'b", "'c" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g" ],
    "mono": [],
    "constr": [
      [
        "(__array({ _0 :? 'e }), int, 'e) | (__dict({ _0 :? 'd ; _1 :? 'e }), 'd, 'e) -> tuple0",
        "(__dict({ _0 :? 'b ; _1 :? 'c }), 'a, __array({ _0 :? 'f })) -> 'g"
      ]
    ],
    "prio": [ "'a", "'b", "'c" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "__array({ _0 :? 'b }) | 'a" ],
      [ "__array({ _0 :? 'b }) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'b | 'a" ], [ "'b | 'a", "'c" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "__array({ _0 :? 'c }) | 'a" ],
      [ "__array({ _0 :? 'c }) | 'a", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [
        "__dict({ _0 :? 'b | 'a ; _1 :? __array({ _0 :? 'd }) | 'c })", "any"
      ],
      [ "'a", "any" ]
    ],
    "prio": [ "'a", "'b", "'c", "'d" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g" ],
    "mono": [],
    "constr": [
      [
        "(__array({ _0 :? 'e }), int) | (__dict({ _0 :? 'f ; _1 :? 'e }), 'f) -> 'e",
        "(__dict({ _0 :? 'b | 'a ; _1 :? __array({ _0 :? 'd }) | 'c }), 'a) -> 'g"
      ]
    ],
    "prio": [ "'a", "'b", "'c", "'d" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "__array({ _0 :? 'b }) | 'a" ],
      [ "__array({ _0 :? 'b }) | 'a", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'b | 'a" ], [ "'b | 'a", "'c" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "__array({ _0 :? 'b }) | 'a" ],
      [ "__array({ _0 :? 'b }) | 'a", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'b | 'a" ], [ "'b | 'a", "'c" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "__array({ _0 :? 'b }) | 'c | 'a" ],
      [ "__array({ _0 :? 'b }) | 'c | 'a", "'c" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "__array({ _0 :? 'b }) | 'a", "empty" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "any", "empty" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "any", "__array({ _0 :? 'b }) | 'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "__array({ _0 :? 'b }) | 'a", "any" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "__array({ _0 :? 'c }) | 'b", "any" ],
      [ "0", "any" ],
      [ "'a", "any" ]
    ],
    "prio": [ "'a", "'b", "'c" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [],
    "constr": [
      [
        "(__array({ _0 :? 'e }), int, 'e) | (__dict({ _0 :? 'd ; _1 :? 'e }), 'd, 'e) -> tuple0",
        "(__array({ _0 :? 'c }) | 'b, 0, 'a) -> 'f"
      ]
    ],
    "prio": [ "'a", "'b", "'c" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "0 | 'a" ], [ "0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'b | 'a" ], [ "'b | 'a", "'c" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'b", "__dict({ _0 :? 0 | 'd ; _1 :? 'c | 'a })" ],
      [ "__dict({ _0 :? 0 | 'd ; _1 :? 'c | 'a })", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "0 | 'a" ], [ "0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'b | 'a" ], [ "'b | 'a", "'c" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'b", "__array({ _0 :? 'c | 'a })" ],
      [ "__array({ _0 :? 'c | 'a })", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "0 | 'a" ], [ "0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'b | 'a" ], [ "'b | 'a", "'c" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'b | 'a" ], [ "'b | 'a", "'c" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'b", "__array({ _0 :? 'c | 'a })" ],
      [ "__array({ _0 :? 'c | 'a })", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'b | 'a" ], [ "'b | 'a", "'c" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "tuple0", "tuple0" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "tuple0", "tuple0" ] ] },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [
        "__dict({ _0 :? 'c | 'b ; _1 :? __array({ _0 :? 'd | 'a }) })", "any"
      ],
      [ "'b", "any" ]
    ],
    "prio": [ "'a", "'b", "'c", "'d" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g" ],
    "mono": [],
    "constr": [
      [
        "(__array({ _0 :? 'e }), int) | (__dict({ _0 :? 'f ; _1 :? 'e }), 'f) -> 'e",
        "(__dict({ _0 :? 'c | 'b ; _1 :? __array({ _0 :? 'd | 'a }) }), 'b) -> 'g"
      ]
    ],
    "prio": [ "'a", "'b", "'c", "'d" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "__array({ _0 :? 'b | 'a })" ],
      [ "__array({ _0 :? 'b | 'a })", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'b | 'a" ], [ "'b | 'a", "'c" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "__array({ _0 :? 'b | 'a })" ],
      [ "__array({ _0 :? 'b | 'a })", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'b | 'a" ], [ "'b | 'a", "'c" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "__array({ _0 :? 'b | 'a }) | 'c" ],
      [ "__array({ _0 :? 'b | 'a }) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "__array({ _0 :? 'b | 'a })", "empty" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "any", "empty" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "any", "__array({ _0 :? 'b | 'a })" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "__array({ _0 :? 'b | 'a })", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "__array({ _0 :? 'b | 'a })", "any" ], [ "0", "any" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [
      [
        "(__array({ _0 :? 'c }), int) | (__dict({ _0 :? 'd ; _1 :? 'c }), 'd) -> 'c",
        "(__array({ _0 :? 'b | 'a }), 0) -> 'e"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'b | 'a" ], [ "'b | 'a", "'c" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'b | 'a" ], [ "'b | 'a", "'c" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'c | 'b | 'a" ], [ "'c | 'b | 'a", "'c" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "any", "'b | 'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b | 'a", "any" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [ [ "'b -> 'a -> 'd | 'a", "'c" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'c" ],
    "constr": [
      [ "'c", "('b -> 'a -> 'd | 'a) | 'c" ],
      [ "('b -> 'a -> 'd | 'a) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a", "any" ], [ "'b", "any" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [
      [
        "(__array({ _0 :? 'c }), int) | (__dict({ _0 :? 'd ; _1 :? 'c }), 'd) -> 'c",
        "('a, 'b) -> 'e"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'b & 'a" ], [ "'b & 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'a & int | 'b" ], [ "'a & int | 'b", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'a", "__dict({ _0 :? 'b & int | 'd ; _1 :? 'e & 'c })" ],
      [ "__dict({ _0 :? 'b & int | 'd ; _1 :? 'e & 'c })", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'b & 'a" ], [ "'b & 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'a & int | 'b" ], [ "'a & int | 'b", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "__array({ _0 :? 'c & 'b })" ],
      [ "__array({ _0 :? 'c & 'b })", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'b & 'a" ], [ "'b & 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'a & int | 'b" ], [ "'a & int | 'b", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'b & 'a" ], [ "'b & 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'a", "__dict({ _0 :? 'd | 'b ; _1 :? 'e & 'c })" ],
      [ "__dict({ _0 :? 'd | 'b ; _1 :? 'e & 'c })", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'b & 'a" ], [ "'b & 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'b & 'a" ], [ "'b & 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "__array({ _0 :? 'c & 'b })" ],
      [ "__array({ _0 :? 'c & 'b })", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'b & 'a" ], [ "'b & 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'a & int | 'b" ], [ "'a & int | 'b", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'a", "__dict({ _0 :? 'b & int | 'd ; _1 :? 'c })" ],
      [ "__dict({ _0 :? 'b & int | 'd ; _1 :? 'c })", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'a & int | 'b" ], [ "'a & int | 'b", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "__array({ _0 :? 'b })" ], [ "__array({ _0 :? 'b })", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'a & int | 'b" ], [ "'a & int | 'b", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'a", "__dict({ _0 :? 'd | 'b ; _1 :? 'c })" ],
      [ "__dict({ _0 :? 'd | 'b ; _1 :? 'c })", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "__array({ _0 :? 'b })" ], [ "__array({ _0 :? 'b })", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "any", "empty" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "empty", "empty" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "any", "any" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "any", "any" ] ] },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "'a", "any" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "empty", "any" ] ] },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "'a", "any" ] ] },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "'a", "any" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "empty", "any" ] ] },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "'a", "'a" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "empty", "empty" ] ] },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "'a", "'a" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "empty", "empty" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "__array({ _0 :? 'b })", "any" ], [ "'a", "any" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [
      [
        "(__array({ _0 :? 'c }), int) | (__dict({ _0 :? 'd ; _1 :? 'c }), 'd) -> 'c",
        "(__array({ _0 :? 'b }), 'a) -> 'e"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'a" ], [ "'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'a" ], [ "'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "'a", "empty" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "any", "empty" ] ] },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "any", "'a" ] ] },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "'a", "any" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [ "__array({ _0 :? 'b })", "any" ],
      [ "'a & int", "any" ],
      [ "'b", "any" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [
      [
        "(__array({ _0 :? 'd }), int, 'd) | (__dict({ _0 :? 'c ; _1 :? 'd }), 'c, 'd) -> tuple0",
        "(__array({ _0 :? 'b }), 'a & int, 'b) -> 'e"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'a" ], [ "'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ int" ], [ "'a \\ int", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "tuple0", "empty" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "tuple0", "empty" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [ "__array({ _0 :? 'b })", "any" ],
      [ "'a & int", "any" ],
      [ "'b", "any" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [
      [
        "(__array({ _0 :? 'd }), int, 'd) | (__dict({ _0 :? 'c ; _1 :? 'd }), 'c, 'd) -> tuple0",
        "(__array({ _0 :? 'b }), 'a & int, 'b) -> 'e"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'a" ], [ "'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ int" ], [ "'a \\ int", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "tuple0", "empty" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "tuple0", "empty" ] ] },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [ "__dict({ _0 :? 'd | 'b ; _1 :? 'c })", "any" ], [ "'a", "any" ]
    ],
    "prio": [ "'a", "'b", "'c", "'d" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g" ],
    "mono": [],
    "constr": [
      [
        "(__array({ _0 :? 'e }), int) | (__dict({ _0 :? 'f ; _1 :? 'e }), 'f) -> 'e",
        "(__dict({ _0 :? 'd | 'b ; _1 :? 'c }), 'a) -> 'g"
      ]
    ],
    "prio": [ "'a", "'b", "'c", "'d" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'a \\ 'b | 'c" ], [ "'a \\ 'b | 'c", "'c" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'a" ], [ "'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b", "'c", "'d" ],
    "constr": [ [ "'d", "'c | 'b | 'a" ], [ "'c | 'b | 'a", "'d" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'a \\ 'b | 'c" ], [ "'a \\ 'b | 'c", "'c" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'a" ], [ "'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b", "'c", "'d" ],
    "constr": [ [ "'d", "'c | 'b | 'a" ], [ "'c | 'b | 'a", "'d" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "'a", "empty" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "any", "empty" ] ] },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "any", "'a" ] ] },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "'a", "any" ] ] },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [ "__dict({ _0 :? 'd | 'b | 'a ; _1 :? 'c })", "any" ],
      [ "'b", "any" ],
      [ "'c", "any" ]
    ],
    "prio": [ "'a", "'b", "'c", "'d" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g" ],
    "mono": [],
    "constr": [
      [
        "(__array({ _0 :? 'f }), int, 'f) | (__dict({ _0 :? 'e ; _1 :? 'f }), 'e, 'f) -> tuple0",
        "(__dict({ _0 :? 'd | 'b | 'a ; _1 :? 'c }), 'b, 'c) -> 'g"
      ]
    ],
    "prio": [ "'a", "'b", "'c", "'d" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b", "'c", "'d" ],
    "constr": [ [ "'d", "'c | 'b | 'a" ], [ "'c | 'b | 'a", "'d" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'a" ], [ "'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "tuple0", "empty" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "tuple0", "empty" ] ] },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [ "__dict({ _0 :? 'd | 'b | 'a ; _1 :? 'c })", "any" ],
      [ "'a", "any" ],
      [ "'c", "any" ]
    ],
    "prio": [ "'a", "'b", "'c", "'d" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g" ],
    "mono": [],
    "constr": [
      [
        "(__array({ _0 :? 'f }), int, 'f) | (__dict({ _0 :? 'e ; _1 :? 'f }), 'e, 'f) -> tuple0",
        "(__dict({ _0 :? 'd | 'b | 'a ; _1 :? 'c }), 'a, 'c) -> 'g"
      ]
    ],
    "prio": [ "'a", "'b", "'c", "'d" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b", "'c", "'d" ],
    "constr": [ [ "'d", "'c | 'b | 'a" ], [ "'c | 'b | 'a", "'d" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'a" ], [ "'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "tuple0", "empty" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "tuple0", "empty" ] ] },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [
      [
        "('b & int -> 'a & int -> __array({ _0 :? 'd }) -> tuple0) & ('b -> 'a -> __dict({ _0 :? 'e | 'b | 'a ; _1 :? 'd }) -> tuple0)",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "('b & int -> 'a & int -> __array({ _0 :? 'd }) -> tuple0) & ('b -> 'a -> __dict({ _0 :? 'e | 'b | 'a ; _1 :? 'd }) -> tuple0) | 'c"
      ],
      [
        "('b & int -> 'a & int -> __array({ _0 :? 'd }) -> tuple0) & ('b -> 'a -> __dict({ _0 :? 'e | 'b | 'a ; _1 :? 'd }) -> tuple0) | 'c",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a", "'b, any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & ('b, any)" ], [ "'a & ('b, any)", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'a & ('b, any)", "'c, any" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'a", "'a \\ (('b, any) \\ ('c, any))" ],
      [ "'a \\ (('b, any) \\ ('c, any))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a", "any" ], [ "'a", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'a & ('c, any) -> ('c, 'c)", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "('a & ('c, any) -> ('c, 'c)) | 'b" ],
      [ "('a & ('c, any) -> ('c, 'c)) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "'a \\ (0 | bool(false) | str(_))", "~(0 | bool(false) | str(_))" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "'a \\ (0 | bool(false) | str(_))", "0 | bool(false) | str(_)" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (0 | bool(false) | str(_))" ],
      [ "'a & (0 | bool(false) | str(_))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "'a & (0 | bool(false) | str(_))", "~(0 | bool(false) | str(_))" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ (0 | bool(false) | str(_))" ],
      [ "'a \\ (0 | bool(false) | str(_))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "'a & (0 | bool(false) | str(_))", "0 | bool(false) | str(_)" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "'a & (0 | bool(false) | str(_))", "~(0 | bool(false) | str(_))" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ (0 | bool(false) | str(_))" ],
      [ "'a \\ (0 | bool(false) | str(_))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "('b \\ (0 | bool(false) | str(_)) -> 'a -> 'a) & ('b & (0 | bool(false) | str(_)) -> 'a -> 'b & (0 | bool(false) | str(_)))",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "('b \\ (0 | bool(false) | str(_)) -> 'a -> 'a) & ('b & (0 | bool(false) | str(_)) -> 'a -> 'b & (0 | bool(false) | str(_))) | 'c"
      ],
      [
        "('b \\ (0 | bool(false) | str(_)) -> 'a -> 'a) & ('b & (0 | bool(false) | str(_)) -> 'a -> 'b & (0 | bool(false) | str(_))) | 'c",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a", "~(0 | bool(false) | str(_))" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ (0 | bool(false) | str(_))" ],
      [ "'a \\ (0 | bool(false) | str(_))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "'a \\ (0 | bool(false) | str(_))", "0 | bool(false) | str(_)" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (0 | bool(false) | str(_))" ],
      [ "'a & (0 | bool(false) | str(_))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a", "0 | bool(false) | str(_)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (0 | bool(false) | str(_))" ],
      [ "'a & (0 | bool(false) | str(_))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "('a & (0 | bool(false) | str(_)) -> 1) & ('a \\ (0 | bool(false) | str(_)) -> 0)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "('a & (0 | bool(false) | str(_)) -> 1) & ('a \\ (0 | bool(false) | str(_)) -> 0) | 'b"
      ],
      [
        "('a & (0 | bool(false) | str(_)) -> 1) & ('a \\ (0 | bool(false) | str(_)) -> 0) | 'b",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "'a & (0 | bool(false) | str(_))", "0 | bool(false) | str(_)" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "'a & (0 | bool(false) | str(_))", "~(0 | bool(false) | str(_))" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ (0 | bool(false) | str(_))" ],
      [ "'a \\ (0 | bool(false) | str(_))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "'a \\ (0 | bool(false) | str(_))", "0 | bool(false) | str(_)" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (0 | bool(false) | str(_))" ],
      [ "'a & (0 | bool(false) | str(_))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "'a \\ (0 | bool(false) | str(_))", "~(0 | bool(false) | str(_))" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "'a \\ (0 | bool(false) | str(_))", "0 | bool(false) | str(_)" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (0 | bool(false) | str(_))" ],
      [ "'a & (0 | bool(false) | str(_))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "('b & (0 | bool(false) | str(_)) -> 'a -> 'a) & ('b \\ (0 | bool(false) | str(_)) -> 'a -> 'b \\ (0 | bool(false) | str(_)))",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "('b & (0 | bool(false) | str(_)) -> 'a -> 'a) & ('b \\ (0 | bool(false) | str(_)) -> 'a -> 'b \\ (0 | bool(false) | str(_))) | 'c"
      ],
      [
        "('b & (0 | bool(false) | str(_)) -> 'a -> 'a) & ('b \\ (0 | bool(false) | str(_)) -> 'a -> 'b \\ (0 | bool(false) | str(_))) | 'c",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [
        "('c & (0 | bool(false) | str(_)) -> 'b -> 'b) & (x1 -> 'b -> x1) where x1 = 'c \\ (0 | bool() \\ bool(~false) | str() \\ str(~_))",
        "'a -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "('b -> 'c \\ (0 | bool() \\ bool(~false) | str() \\ str(~_)) | 'a \\ (0 | bool() \\ bool(~false) | str() \\ str(~_))) | ('b -> 'b) | 'd"
      ],
      [
        "('b -> 'c \\ (0 | bool() \\ bool(~false) | str() \\ str(~_)) | 'a \\ (0 | bool() \\ bool(~false) | str() \\ str(~_))) | ('b -> 'b) | 'd",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (0 | bool(false) | str(_))" ],
      [ "'a & (0 | bool(false) | str(_))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "'a & (0 | bool(false) | str(_)) | 'b" ],
      [ "'a & (0 | bool(false) | str(_)) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [ [ "'b", "('a -> 'a) | 'b" ], [ "('a -> 'a) | 'b", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ (0 | bool() \\ bool(~false) | str() \\ str(~_))" ],
      [ "'a \\ (0 | bool() \\ bool(~false) | str() \\ str(~_))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "'a \\ (0 | bool() \\ bool(~false) | str() \\ str(~_)) | 'b" ],
      [ "'a \\ (0 | bool() \\ bool(~false) | str() \\ str(~_)) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [
        "'d",
        "('b -> 'c \\ (0 | bool() \\ bool(~false) | str() \\ str(~_)) | 'a \\ (0 | bool() \\ bool(~false) | str() \\ str(~_))) | 'd"
      ],
      [
        "('b -> 'c \\ (0 | bool() \\ bool(~false) | str() \\ str(~_)) | 'a \\ (0 | bool() \\ bool(~false) | str() \\ str(~_))) | 'd",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "('b -> 'a \\ (0 | bool() \\ bool(~false) | str() \\ str(~_))) | ('b -> 'b)",
        "any -> 'a \\ (0 | bool() \\ bool(~false) | str() \\ str(~_))"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a -> 'a", "'a -> 'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "any -> empty", "empty" ] ] },
  { "vars": [ "'a" ], "mono": [], "constr": [ [ "'a -> 'a", "empty" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "any -> 'a \\ (0 | bool() \\ bool(~false) | str() \\ str(~_))",
        "'a \\ (0 | bool() \\ bool(~false) | str() \\ str(~_)) -> 'b"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "'a \\ (0 | bool() \\ bool(~false) | str() \\ str(~_)) | 'b" ],
      [ "'a \\ (0 | bool() \\ bool(~false) | str() \\ str(~_)) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (0 | bool() \\ bool(~false) | str() \\ str(~_))" ],
      [ "'a & (0 | bool() \\ bool(~false) | str() \\ str(~_))", "'a" ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "empty", "empty" ] ] },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "('b -> 'a \\ (0 | bool() \\ bool(~false) | str() \\ str(~_))) | ('b -> 'b)",
        "'a -> 'c"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'c & 'b | 'a" ], [ "'c & 'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "any", "'a" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "empty", "empty" ] ] },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "'a", "any" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "('a \\ (0 | bool() \\ bool(~false) | str() \\ str(~_)) -> 'a \\ (0 | bool() \\ bool(~false) | str() \\ str(~_))) & ('a -> 'a)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "('a \\ (0 | bool() \\ bool(~false) | str() \\ str(~_)) -> 'a \\ (0 | bool() \\ bool(~false) | str() \\ str(~_))) & ('a -> 'a) | 'b"
      ],
      [
        "('a \\ (0 | bool() \\ bool(~false) | str() \\ str(~_)) -> 'a \\ (0 | bool() \\ bool(~false) | str() \\ str(~_))) & ('a -> 'a) | 'b",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "'a \\ (0 | bool(false) | str(_))", "~(0 | bool(false) | str(_))" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "'a \\ (0 | bool(false) | str(_))", "0 | bool(false) | str(_)" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (0 | bool(false) | str(_))" ],
      [ "'a & (0 | bool(false) | str(_))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "'a & (0 | bool(false) | str(_))", "~(0 | bool(false) | str(_))" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ (0 | bool(false) | str(_))" ],
      [ "'a \\ (0 | bool(false) | str(_))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "'a & (0 | bool(false) | str(_))", "0 | bool(false) | str(_)" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "int -> int", "'a \\ (0 | bool(false) | str(_)) -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (int | bool(false) | str(_))" ],
      [ "'a & (int | bool(false) | str(_))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (0 | bool(false) | str(_))" ],
      [ "'a & (0 | bool(false) | str(_))", "'a" ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "empty" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "'a & (0 | bool(false) | str(_))", "~(0 | bool(false) | str(_))" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ (0 | bool(false) | str(_))" ],
      [ "'a \\ (0 | bool(false) | str(_))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a", "any" ], [ "int", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "'a & (0 | bool(false) | str(_))", "~(0 | bool(false) | str(_))" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ (0 | bool(false) | str(_))" ],
      [ "'a \\ (0 | bool(false) | str(_))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "('b & int & ~0 -> 'a -> ('a, int)) & ('b & (0 | bool(false) | str(_)) -> 'a -> 'b & (0 | bool(false) | str(_)))",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "('b & int & ~0 -> 'a -> ('a, int)) & ('b & (0 | bool(false) | str(_)) -> 'a -> 'b & (0 | bool(false) | str(_))) | 'c"
      ],
      [
        "('b & int & ~0 -> 'a -> ('a, int)) & ('b & (0 | bool(false) | str(_)) -> 'a -> 'b & (0 | bool(false) | str(_))) | 'c",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a \\ tuple2", "'b, any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & tuple2" ], [ "'a & tuple2", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a & (0 | bool(false) | str(_), any)", "'b, any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ ((0 | bool(false) | str(_), any) \\ ('b, any))" ],
      [ "'a \\ ((0 | bool(false) | str(_), any) \\ ('b, any))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "'a & (0 | bool(false) | str(_))", "~(0 | bool(false) | str(_))" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ (0 | bool(false) | str(_))" ],
      [ "'a \\ (0 | bool(false) | str(_))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [ "'a & tuple2 & ~(0 | bool(false) | str(_), any)", "'b, any" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (tuple2 & ~('b, any) & ~(0 | bool(false) | str(_), any))"
      ],
      [
        "'a \\ (tuple2 & ~('b, any) & ~(0 | bool(false) | str(_), any))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "'a \\ (0 | bool(false) | str(_))", "~(0 | bool(false) | str(_))" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "'a \\ (0 | bool(false) | str(_))", "0 | bool(false) | str(_)" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (0 | bool(false) | str(_))" ],
      [ "'a & (0 | bool(false) | str(_))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "'a & ('b, any) & ~(0 | bool(false) | str(_), any)", "'c, any" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'a",
        "'a \\ (('b, any) & ~('c, any) & ~(0 | bool(false) | str(_), any))"
      ],
      [
        "'a \\ (('b, any) & ~('c, any) & ~(0 | bool(false) | str(_), any))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "int -> int", "'a \\ (0 | bool(false) | str(_)) -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (int | bool(false) | str(_))" ],
      [ "'a & (int | bool(false) | str(_))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (0 | bool(false) | str(_))" ],
      [ "'a & (0 | bool(false) | str(_))", "'a" ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "empty" ] ] },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "'a & ('b, any) & (0 | bool(false) | str(_), any)", "'c, any" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'a",
        "'a \\ (('b, any) & (0 | bool(false) | str(_), any) & ~('c, any))"
      ],
      [
        "'a \\ (('b, any) & (0 | bool(false) | str(_), any) & ~('c, any))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "'a & ('b, any) & (0 | bool(false) | str(_), any)", "any, 'c" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'a",
        "'a \\ (('b, any) & (0 | bool(false) | str(_), any) & ~(any, 'c))"
      ],
      [
        "'a \\ (('b, any) & (0 | bool(false) | str(_), any) & ~(any, 'c))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [ "'a & (0 | bool(false) | str(_))", "any" ], [ "'b", "any" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "(int, int) -> int", "('a & (0 | bool(false) | str(_)), 'b) -> 'c" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ (bool(false) | str(_))" ],
      [ "'a \\ (bool(false) | str(_))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ (0 | bool(false) | str(_))" ],
      [ "'a \\ (0 | bool(false) | str(_))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & 0", "0 | bool(false) | str(_)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [ "'a & tuple2 & ~(0 | bool(false) | str(_), any)", "'b, any" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'a",
        "'a \\ (tuple2 & ~('b, any) & ~(0 | bool(false) | str(_), any))"
      ],
      [
        "'a \\ (tuple2 & ~('b, any) & ~(0 | bool(false) | str(_), any))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "'a \\ (0 | bool(false) | str(_))", "~(0 | bool(false) | str(_))" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "'a \\ (0 | bool(false) | str(_))", "0 | bool(false) | str(_)" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (0 | bool(false) | str(_))" ],
      [ "'a & (0 | bool(false) | str(_))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [
        "('a & ('c & 0, any) & (any, 'd & int) -> int) & ('a & ('c & (int | bool(false) | str(_)), any) & ~(0 | bool(false) | str(_), any) -> int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "('a & ('c & 0, any) & (any, 'd & int) -> int) & ('a & ('c & (int | bool(false) | str(_)), any) & ~(0 | bool(false) | str(_), any) -> int) | 'b"
      ],
      [
        "('a & ('c & 0, any) & (any, 'd & int) -> int) & ('a & ('c & (int | bool(false) | str(_)), any) & ~(0 | bool(false) | str(_), any) -> int) | 'b",
        "'b"
      ]
    ]
  },
  { "vars": [], "mono": [], "constr": [] },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'a -> 'b -> 'b", "'c" ],
      [ "'c", "'a -> 'b -> 'b" ],
      [ "'a -> 'b -> 'b", "'c" ],
      [ "'c", "'a -> 'b -> 'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'b" ], [ "'b", "'a" ], [ "'a", "'b" ], [ "'b", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'b" ], [ "'b", "'a" ], [ "'a", "'b" ], [ "'b", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'a -> 'b -> 'a", "'c" ],
      [ "'c", "'a -> 'b -> 'a" ],
      [ "'a -> 'b -> 'a", "'c" ],
      [ "'c", "'a -> 'b -> 'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'b" ], [ "'b", "'a" ], [ "'a", "'b" ], [ "'b", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'b" ], [ "'b", "'a" ], [ "'a", "'b" ], [ "'b", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'a -> 'b -> 'b", "'a -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "('a -> 'a) | 'b" ], [ "('a -> 'a) | 'b", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a -> 'a", "'a -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'a -> 'b -> 'a", "'a -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "('b -> 'a) | 'c" ], [ "('b -> 'a) | 'c", "'c" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b -> 'a", "'b -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a", "tuple2" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & tuple2" ], [ "'a & tuple2", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a & tuple2", "'b, any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ (tuple2 \\ ('b, any))" ],
      [ "'a \\ (tuple2 \\ ('b, any))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'a & ('c, any) -> 'c", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "('a & ('c, any) -> 'c) | 'b" ],
      [ "('a & ('c, any) -> 'c) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a", "tuple2" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & tuple2" ], [ "'a & tuple2", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a & tuple2", "any, 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ (tuple2 \\ (any, 'b))" ],
      [ "'a \\ (tuple2 \\ (any, 'b))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'a & (any, 'b)", "'c, any" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'a", "'a \\ ((any, 'b) \\ ('c, any))" ],
      [ "'a \\ ((any, 'b) \\ ('c, any))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'b", "any" ], [ "'a", "any" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [ [ "'a & ('d, any) & (any, 'c) -> ('d, 'c)", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "('a & ('d, any) & (any, 'c) -> ('d, 'c)) | 'b" ],
      [ "('a & ('d, any) & (any, 'c) -> ('d, 'c)) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'b", "any" ], [ "'a", "any" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [ [ "'c -> 'b -> ('c, 'b)", "'a -> 'd" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [ "'d", "('b -> ('c | 'a, 'b)) | 'd" ],
      [ "('b -> ('c | 'a, 'b)) | 'd", "'d" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  { "vars": [ "'a" ], "mono": [], "constr": [ [ "'a -> empty", "empty" ] ] },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [ [ "'c -> ('b, 'c)", "'a -> 'd" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b", "'d" ],
    "constr": [
      [ "'d", "('b, 'c | 'a) | 'd" ], [ "('b, 'c | 'a) | 'd", "'d" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "empty", "empty" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'b, 'a", "tuple2" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'b, 'a", "any, 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "empty", "empty" ] ] },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "'a", "empty" ] ] },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'b, 'a", "'c, any" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "'a", "empty" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "empty", "empty" ] ] },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [ [ "'c -> 'b -> ('c, 'b)", "'a -> 'd" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'d" ],
    "constr": [
      [ "'d", "('b -> ('c | 'a, 'b)) | 'd" ],
      [ "('b -> ('c | 'a, 'b)) | 'd", "'d" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  { "vars": [ "'a" ], "mono": [], "constr": [ [ "'a -> empty", "empty" ] ] },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [ [ "'c -> ('a, 'c)", "'b -> 'd" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b", "'d" ],
    "constr": [
      [ "'d", "('a, 'c | 'b) | 'd" ], [ "('a, 'c | 'b) | 'd", "'d" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "empty", "empty" ] ] },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'b -> 'a -> ('a, 'b)", "'c" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'c" ],
    "constr": [
      [ "'c", "('b -> 'a -> ('a, 'b)) | 'c" ],
      [ "('b -> 'a -> ('a, 'b)) | 'c", "'c" ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int \\ 0", "any" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "int \\ 0", "~0" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "int \\ 0", "0" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int \\ 0", "any" ], [ "1", "any" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(int \\ 0, 1) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a", "int -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & (int -> 'b)" ], [ "'a & (int -> 'b)", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "int \\ 0", "any" ], [ "'a", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(int \\ 0, 'a) -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "empty" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "0", "any" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "0", "~0" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "0", "0" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "int -> 1", "'a & (int -> empty)" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "0", "any" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "0", "~0" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "0", "0" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "int -> int", "'a & (int -> 'b & int)" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "(int -> int) | 'a" ], [ "(int -> int) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "lst(x1) where x1 = 'a, lst(x1) | lst(tuple0)", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "lst(x1) where x1 = 'a, lst(x1) | lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "lst(x1) where x1 = 'a, lst(x1) | lst(tuple0)", "~lst(tuple0)" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "lst(x1) where x1 = 'a, lst(x1) | lst(tuple0)", "lst(tuple0)" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "lst(x1) where x1 = 'a, lst(x1) | lst(tuple0)",
        "lst(any, 'b & lst(x1)) where x1 = tuple0 | (any, lst(x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "lst(x1) | lst(tuple0) | 'b where x1 = 'a, lst(x1) | lst(tuple0)"
      ],
      [
        "lst(x1) | lst(tuple0) | 'b where x1 = 'a, lst(x1) | lst(tuple0)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "lst(x1) where x1 = 'a, lst(x1) | lst(tuple0)",
        "lst('b, x1) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [ [ "'b", "'a -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b & ('a -> 'c)" ], [ "'b & ('a -> 'c)", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [ [ "'c", "'b & ('a -> 'd) -> 'e" ] ],
    "prio": [ "'a", "'b", "'c", "'d" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'b", "'c", "'d" ],
    "constr": [
      [ "'c", "'c & ('b & ('a -> 'd) -> 'e)" ],
      [ "'c & ('b & ('a -> 'd) -> 'e)", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [ [ "'b", "x1 -> 'c where x1 = lst('a, x1) | lst(tuple0)" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "'b & (x1 -> 'c) where x1 = lst('a, x1) | lst(tuple0)" ],
      [ "'b & (x1 -> 'c) where x1 = lst('a, x1) | lst(tuple0)", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [ "'a", "any" ], [ "'b", "x1 where x1 = lst(tuple0 | (any, x1))" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a & lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "lst(tuple0)", "any" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "lst(tuple0)", "~lst(tuple0)" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "lst(tuple0)", "lst(tuple0)" ] ] },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'b & ('a -> 'd) -> x1 -> lst('d, 'f & lst(x2)) | lst(tuple0) where x1 = lst('a, x1) | lst(tuple0) and x2 = tuple0 | (any, lst(x2))",
        "'c & ('b & ('a -> 'd) -> 'e & (x2 -> 'f & lst(x1))) where x1 = tuple0 | (any, lst(x1)) and x2 = lst('a, x2) | lst(tuple0)"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b \\ ('a -> 'c)" ], [ "'b \\ ('a -> 'c)", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "arrow | 'a" ], [ "arrow | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "('b & ('a -> 'd) -> x4 -> lst('d, lst(x2) | lst(tuple0) | 'e & lst(x3)) | lst(tuple0)) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = 'd, lst(x2) | lst(tuple0) | 'e & lst(x1) and x3 = tuple0 | (any, lst(x3)) and x4 = lst('a, x4) | lst(tuple0)"
      ],
      [
        "('b & ('a -> 'd) -> x4 -> lst('d, lst(x2) | lst(tuple0) | 'e & lst(x3)) | lst(tuple0)) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = 'd, lst(x2) | lst(tuple0) | 'e & lst(x1) and x3 = tuple0 | (any, lst(x3)) and x4 = lst('a, x4) | lst(tuple0)",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [
        "'c",
        "(x4 -> lst('b, lst(x2) | lst(tuple0) | 'd & lst(x3)) | lst(tuple0)) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = 'b, lst(x2) | lst(tuple0) | 'd & lst(x1) and x3 = tuple0 | (any, lst(x3)) and x4 = lst('a, x4) | lst(tuple0)"
      ],
      [
        "(x4 -> lst('b, lst(x2) | lst(tuple0) | 'd & lst(x3)) | lst(tuple0)) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = 'b, lst(x2) | lst(tuple0) | 'd & lst(x1) and x3 = tuple0 | (any, lst(x3)) and x4 = lst('a, x4) | lst(tuple0)",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "lst(x2) | lst(tuple0) | 'b where x1 = tuple0 | (any, lst(x1)) and x2 = 'a, lst(x2) | lst(tuple0) | 'b & lst(x1)"
      ],
      [
        "lst(x2) | lst(tuple0) | 'b where x1 = tuple0 | (any, lst(x1)) and x2 = 'a, lst(x2) | lst(tuple0) | 'b & lst(x1)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "arrow",
        "('a -> 'b) -> x2 -> lst('b, x1) | lst(tuple0) where x1 = lst('b, x1) | lst(tuple0) and x2 = lst('a, x2) | lst(tuple0)"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "('a -> 'b) -> x2 -> lst('b, x1) | lst(tuple0) where x1 = lst('b, x1) | lst(tuple0) and x2 = lst('a, x2) | lst(tuple0)",
        "arrow"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a \\ lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a & (lst(any, x1) | lst(tuple0)) where x1 = lst(tuple0 | (any, x1))"
      ],
      [
        "'a & (lst(any, x1) | lst(tuple0)) where x1 = lst(tuple0 | (any, x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(any, x1) where x1 = lst(tuple0 | (any, x1))",
        "~lst(tuple0)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(any, x1) where x1 = lst(tuple0 | (any, x1))", "lst(tuple0)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ lst(any, x1) where x1 = lst(tuple0 | (any, x1))" ],
      [ "'a \\ lst(any, x1) where x1 = lst(tuple0 | (any, x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & lst(tuple0)", "~lst(tuple0)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ lst(tuple0)" ], [ "'a \\ lst(tuple0)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & lst(tuple0)", "lst(tuple0)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(any, x1) where x1 = lst(tuple0 | (any, x1))",
        "lst(any, 'b & lst(x1)) where x1 = tuple0 | (any, lst(x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(any, lst(x1)) \\ lst(any, 'b & lst(x1))) where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "'a \\ (lst(any, lst(x1)) \\ lst(any, 'b & lst(x1))) where x1 = tuple0 | (any, lst(x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(any, 'b & lst(x1)) where x1 = tuple0 | (any, lst(x1))",
        "lst('c, x1) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(any, 'b & lst(x1)) \\ lst('c, x2)) where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2))"
      ],
      [
        "'a \\ (lst(any, 'b & lst(x1)) \\ lst('c, x2)) where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'a", "'b -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'a", "'a & ('b -> 'c)" ], [ "'a & ('b -> 'c)", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [ [ "'b", "'a & ('c -> 'd) -> 'e" ] ],
    "prio": [ "'a", "'b", "'c", "'d" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'b", "'c", "'d" ],
    "constr": [
      [ "'b", "'b & ('a & ('c -> 'd) -> 'e)" ],
      [ "'b & ('a & ('c -> 'd) -> 'e)", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "'b", "'a & lst(x1) -> 'c where x1 = tuple0 | (any, lst(x1))" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b", "'b & ('a & lst(x1) -> 'c) where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "'b & ('a & lst(x1) -> 'c) where x1 = tuple0 | (any, lst(x1))", "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [ "'a", "any" ], [ "'b", "x1 where x1 = lst(tuple0 | (any, x1))" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a & lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & lst(tuple0)", "~lst(tuple0)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ lst(tuple0)" ], [ "'a \\ lst(tuple0)", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g", "'h" ],
    "mono": [],
    "constr": [
      [
        "('b & ('e -> 'f) -> ('a & lst('e, x2) & lst(any, 'd & lst(x1)) -> lst('f, 'h & lst(x3))) & ('a & lst(tuple0) -> lst(tuple0))) & ('b -> 'a & lst(tuple0) -> lst(tuple0)) where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = tuple0 | (any, lst(x3))",
        "'c & ('b & ('e -> 'f) -> 'g & ('d & lst(x2) -> 'h & lst(x1))) where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, lst(x2))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'b & (lst(x2) & lst('c, x1) | lst(tuple0)) | 'a where x1 = lst(tuple0 | (any, x1)) and x2 = any, 'b & (lst(x2) & lst('c, x1) | lst(tuple0))"
      ],
      [
        "'b & (lst(x2) & lst('c, x1) | lst(tuple0)) | 'a where x1 = lst(tuple0 | (any, x1)) and x2 = any, 'b & (lst(x2) & lst('c, x1) | lst(tuple0))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "('b & ('e -> 'f) -> ('d & lst(any, x6) & lst('e, x4) | 'a & lst(any, x6) & lst('e, x4) -> lst('f, lst(x3) | lst(tuple0) | 'g & lst(x2))) & (x7 -> lst(tuple0))) & ('b -> x7 -> lst(tuple0)) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = 'f, lst(x3) | lst(tuple0) | 'g & lst(x1) and x4 = lst(tuple0 | (any, x4)) and x5 = lst(tuple0 | (any, x5)) and x6 = 'd & (lst(any, x6) & lst('e, x5) | lst(tuple0)) and x7 = 'd & lst(tuple0) | 'a & lst(tuple0)"
      ],
      [
        "('b & ('e -> 'f) -> ('d & lst(any, x3) & lst('e, x6) | 'a & lst(any, x3) & lst('e, x6) -> lst('f, lst(x5) | lst(tuple0) | 'g & lst(x4))) & (x7 -> lst(tuple0))) & ('b -> x7 -> lst(tuple0)) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = 'd & (lst(any, x3) & lst('e, x2) | lst(tuple0)) and x4 = tuple0 | (any, lst(x4)) and x5 = 'f, lst(x5) | lst(tuple0) | 'g & lst(x1) and x6 = lst(tuple0 | (any, x6)) and x7 = 'd & lst(tuple0) | 'a & lst(tuple0)",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(x3) & ~lst('b, x2) & ~lst(tuple0) | lst(x3) & ~lst(x1) & ~lst(tuple0)) where x1 = any, 'a & (lst(x1) & lst('b, x2) | lst(tuple0)) and x2 = lst(tuple0 | (any, x2)) and x3 = tuple0 | (any, lst(x3))"
      ],
      [
        "'a \\ (lst(x2) & ~lst('b, x1) & ~lst(tuple0) | lst(x2) & ~lst(x3) & ~lst(tuple0)) where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = any, 'a & (lst(x3) & lst('b, x1) | lst(tuple0))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'e" ],
    "constr": [
      [
        "'e",
        "('b & lst(any, x3) & lst('c, x6) | 'a & lst(any, x3) & lst('c, x6) -> lst('d, lst(x5) | lst(tuple0) | 'f & lst(x4))) & ('b & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0)) | 'e where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = 'b & (lst(any, x3) & lst('c, x2) | lst(tuple0)) and x4 = tuple0 | (any, lst(x4)) and x5 = 'd, lst(x5) | lst(tuple0) | 'f & lst(x1) and x6 = lst(tuple0 | (any, x6))"
      ],
      [
        "('b & lst(any, x4) & lst('c, x6) | 'a & lst(any, x4) & lst('c, x6) -> lst('d, lst(x2) | lst(tuple0) | 'f & lst(x5))) & ('b & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0)) | 'e where x1 = tuple0 | (any, lst(x1)) and x2 = 'd, lst(x2) | lst(tuple0) | 'f & lst(x1) and x3 = lst(tuple0 | (any, x3)) and x4 = 'b & (lst(any, x4) & lst('c, x3) | lst(tuple0)) and x5 = tuple0 | (any, lst(x5)) and x6 = lst(tuple0 | (any, x6))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "lst(x2) | lst(tuple0) | 'b where x1 = tuple0 | (any, lst(x1)) and x2 = 'a, lst(x2) | lst(tuple0) | 'b & lst(x1)"
      ],
      [
        "lst(x2) | lst(tuple0) | 'b where x1 = tuple0 | (any, lst(x1)) and x2 = 'a, lst(x2) | lst(tuple0) | 'b & lst(x1)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'c" ],
    "constr": [
      [ "'c", "('b -> 'a & lst(tuple0) -> lst(tuple0)) | 'c" ],
      [ "('b -> 'a & lst(tuple0) -> lst(tuple0)) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "('a & lst(tuple0) -> lst(tuple0)) | 'b" ],
      [ "('a & lst(tuple0) -> lst(tuple0)) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'c" ],
    "constr": [
      [ "'c", "('b -> 'a & lst(tuple0) -> lst(tuple0)) | 'c" ],
      [ "('b -> 'a & lst(tuple0) -> lst(tuple0)) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "('a & lst(tuple0) -> lst(tuple0)) | 'b" ],
      [ "('a & lst(tuple0) -> lst(tuple0)) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "lst(x2) | 'b where x1 = tuple0 | (any, lst(x1)) and x2 = 'a, lst(x2) | 'b & lst(x1)"
      ],
      [
        "lst(x2) | 'b where x1 = tuple0 | (any, lst(x1)) and x2 = 'a, lst(x2) | 'b & lst(x1)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'b & lst(tuple0) | 'a" ], [ "'b & lst(tuple0) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "('b & ('e -> 'f) -> ('a & lst(any, 'd & lst(tuple0)) & lst('e, x1) -> lst('f, lst(tuple0) | 'g & lst(x2))) & (x3 -> lst(tuple0))) & ('b -> x3 -> lst(tuple0)) | 'c where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = 'd & lst(tuple0) | 'a & lst(tuple0)"
      ],
      [
        "('b & ('e -> 'f) -> ('a & lst(any, 'd & lst(tuple0)) & lst('e, x2) -> lst('f, lst(tuple0) | 'g & lst(x1))) & (x3 -> lst(tuple0))) & ('b -> x3 -> lst(tuple0)) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = 'd & lst(tuple0) | 'a & lst(tuple0)",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(x1) \\ lst(tuple0)) where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "'a \\ (lst(x1) \\ lst(tuple0)) where x1 = tuple0 | (any, lst(x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'e" ],
    "constr": [
      [
        "'e",
        "('a & lst(any, 'b & lst(tuple0)) & lst('c, x2) -> lst('d, lst(tuple0) | 'f & lst(x1))) & ('b & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0)) | 'e where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2))"
      ],
      [
        "('a & lst(any, 'b & lst(tuple0)) & lst('c, x2) -> lst('d, lst(tuple0) | 'f & lst(x1))) & ('b & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0)) | 'e where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "lst(tuple0) | 'a" ], [ "lst(tuple0) | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ ('b -> 'c)" ], [ "'a \\ ('b -> 'c)", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'c" ],
    "constr": [
      [ "'c", "('b \\ ('d -> 'e) -> 'a & lst(tuple0) -> lst(tuple0)) | 'c" ],
      [ "('b \\ ('d -> 'e) -> 'a & lst(tuple0) -> lst(tuple0)) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "(('a -> 'b) -> (lst('a, x1) & lst(any, lst(tuple0)) -> lst('b, lst(tuple0))) & (lst(tuple0) -> lst(tuple0))) & (any -> lst(tuple0) -> lst(tuple0)) where x1 = lst(tuple0 | (any, x1))",
        "~(any -> empty) -> lst(tuple0) -> lst(tuple0)"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "any -> lst(tuple0) -> lst(tuple0)",
        "(('a -> 'b) -> (lst('a, x1) & lst(any, lst(tuple0)) -> lst('b, lst(tuple0))) & (lst(tuple0) -> lst(tuple0))) & (any -> lst(tuple0) -> lst(tuple0)) where x1 = lst(tuple0 | (any, x1))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "any -> lst(tuple0) -> lst(tuple0)",
        "(('a -> 'b) -> (lst('a, x1) & lst(any, lst(tuple0)) -> lst('b, lst(tuple0))) & (lst(tuple0) -> lst(tuple0))) & (any -> lst(tuple0) -> lst(tuple0)) where x1 = lst(tuple0 | (any, x1))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "(('a -> 'b) -> (lst(any, x3) & lst('a, x4) -> lst('b, x1)) & (lst(tuple0) -> lst(tuple0))) & (any -> lst(tuple0) -> lst(tuple0)) where x1 = lst('b, x1) | lst(tuple0) and x2 = lst(tuple0 | (any, x2)) and x3 = lst(any, x3) & lst('a, x2) | lst(tuple0) and x4 = lst(tuple0 | (any, x4))",
        "(('a -> 'b) -> (lst('a, x1) & lst(any, lst(tuple0)) -> lst('b, lst(tuple0))) & (lst(tuple0) -> lst(tuple0))) & (any -> lst(tuple0) -> lst(tuple0)) where x1 = lst(tuple0 | (any, x1))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "(('a -> 'b) -> (lst('a, x1) & lst(any, lst(tuple0)) -> lst('b, lst(tuple0))) & (lst(tuple0) -> lst(tuple0))) & (any -> lst(tuple0) -> lst(tuple0)) where x1 = lst(tuple0 | (any, x1))",
        "any -> lst(tuple0) -> lst(tuple0)"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "(('a -> 'b) -> (lst('a, x1) & lst(any, lst(tuple0)) -> lst('b, lst(tuple0))) & (lst(tuple0) -> lst(tuple0))) & (any -> lst(tuple0) -> lst(tuple0)) where x1 = lst(tuple0 | (any, x1))",
        "any -> lst(tuple0) -> lst(tuple0)"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "(('a -> 'b) -> (lst('a, x1) & lst(any, lst(tuple0)) -> lst('b, lst(tuple0))) & (lst(tuple0) -> lst(tuple0))) & (any -> lst(tuple0) -> lst(tuple0)) where x1 = lst(tuple0 | (any, x1))",
        "(('a -> 'b) -> (lst(any, x2) & lst('a, x4) -> lst('b, x3)) & (lst(tuple0) -> lst(tuple0))) & (any -> lst(tuple0) -> lst(tuple0)) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(any, x2) & lst('a, x1) | lst(tuple0) and x3 = lst('b, x3) | lst(tuple0) and x4 = lst(tuple0 | (any, x4))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g", "'h" ],
    "mono": [],
    "constr": [
      [
        "'b -> 'a & lst(tuple0) -> lst(tuple0)",
        "'c & ('b & ('e -> 'f) -> 'g & ('d & lst(x1) -> 'h)) where x1 = tuple0 | (any, lst(x1))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'b & lst(tuple0) | 'a" ], [ "'b & lst(tuple0) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "('b -> 'd & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0)) | 'c"
      ],
      [
        "('b -> 'd & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0)) | 'c",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(x1) \\ lst(tuple0)) where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "'a \\ (lst(x1) \\ lst(tuple0)) where x1 = tuple0 | (any, lst(x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'c" ],
    "constr": [
      [ "'c", "('b & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0)) | 'c" ],
      [ "('b & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0)) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "lst(tuple0) | 'a" ], [ "lst(tuple0) | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'c" ],
    "constr": [
      [ "'c", "('b -> 'a & lst(tuple0) -> lst(tuple0)) | 'c" ],
      [ "('b -> 'a & lst(tuple0) -> lst(tuple0)) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "('a & lst(tuple0) -> lst(tuple0)) | 'b" ],
      [ "('a & lst(tuple0) -> lst(tuple0)) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ ('b -> 'c)" ], [ "'a \\ ('b -> 'c)", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'c" ],
    "constr": [
      [ "'c", "('b \\ ('d -> 'e) -> 'a & lst(tuple0) -> lst(tuple0)) | 'c" ],
      [ "('b \\ ('d -> 'e) -> 'a & lst(tuple0) -> lst(tuple0)) | 'c", "'c" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "any -> lst(tuple0) -> lst(tuple0)",
        "~(any -> empty) -> lst(tuple0) -> lst(tuple0)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "any -> lst(tuple0) -> lst(tuple0)",
        "any -> lst(tuple0) -> lst(tuple0)"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [],
    "constr": [
      [
        "'b -> 'a & lst(tuple0) -> lst(tuple0)",
        "'c & ('b & ('d -> 'e) -> 'f)"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ ('b -> 'c)" ], [ "'a \\ ('b -> 'c)", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'c" ],
    "constr": [
      [ "'c", "('b \\ ('d -> 'e) -> 'a & lst(tuple0) -> lst(tuple0)) | 'c" ],
      [ "('b \\ ('d -> 'e) -> 'a & lst(tuple0) -> lst(tuple0)) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'c" ],
    "constr": [
      [ "'c", "('b -> 'a & lst(tuple0) -> lst(tuple0)) | 'c" ],
      [ "('b -> 'a & lst(tuple0) -> lst(tuple0)) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "('a & lst(tuple0) -> lst(tuple0)) | 'b" ],
      [ "('a & lst(tuple0) -> lst(tuple0)) | 'b", "'b" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "~(any -> empty) -> lst(tuple0) -> lst(tuple0)",
        "any -> lst(tuple0) -> lst(tuple0)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "any -> lst(tuple0) -> lst(tuple0)",
        "~(any -> empty) -> lst(tuple0) -> lst(tuple0)"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'b -> 'a & lst(tuple0) -> lst(tuple0)", "'c" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'c" ],
    "constr": [
      [ "'c", "('b -> 'a & lst(tuple0) -> lst(tuple0)) | 'c" ],
      [ "('b -> 'a & lst(tuple0) -> lst(tuple0)) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'b", "'a -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b & ('a -> 'c)" ], [ "'b & ('a -> 'c)", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'a", "'b -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'a", "'a & ('b -> 'c)" ], [ "'a & ('b -> 'c)", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [],
    "constr": [
      [ "'a -> 'e", "'b & ('c -> 'f)" ], [ "'c -> 'f", "'d & ('a -> 'e)" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "arrow | 'a" ], [ "arrow | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "arrow | 'a" ], [ "arrow | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'b | 'a" ], [ "'b | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'b" ], [ "'b", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "('b -> any) | 'a" ], [ "('b -> any) | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [ [ "'b", "('a -> any) | 'b" ], [ "('a -> any) | 'b", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'b" ], [ "'b", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "('b -> 'c) | 'a" ], [ "('b -> 'c) | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'b" ],
    "constr": [ [ "'b", "('a -> 'c) | 'b" ], [ "('a -> 'c) | 'b", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'b" ], [ "'b", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "arrow | 'a" ], [ "arrow | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "arrow | 'a" ], [ "arrow | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "any -> empty, any -> empty", "arrow, arrow" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "any -> any, any -> any", "any -> empty, any -> empty" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "arrow, arrow", "any -> empty, any -> empty" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "any -> empty, any -> empty", "any -> any, any -> any" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "any -> empty, any -> empty", "arrow, arrow" ] ]
  },
  { "vars": [], "mono": [], "constr": [] },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "('b -> ~bool(true)) & ('a -> any)", "'c" ],
      [ "'c", "('b -> ~bool(true)) & ('a -> any)" ],
      [ "('b -> ~bool(true)) & ('a -> any)", "'c" ],
      [ "'c", "('b -> ~bool(true)) & ('a -> any)" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "x1 where x1 = lst('b | 'a, x1) | lst(tuple0)", "'c" ],
      [ "'c", "x1 where x1 = lst('b | 'a, x1) | lst(tuple0)" ],
      [ "x1 where x1 = lst('b | 'a, x1) | lst(tuple0)", "'c" ],
      [ "'c", "x1 where x1 = lst('b | 'a, x1) | lst(tuple0)" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "('b -> ~bool(true)) & ('a -> any)", "'c -> ~bool(true)" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "('b -> ~bool(true)) & ('a -> any)", "'c -> bool(true)" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "lst(x1) \\ lst('b, x2) where x1 = 'b | 'a, lst(x1) | lst(tuple0) and x2 = lst(tuple0 | (any, x2))",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "lst(x2) \\ lst('b, x1) where x1 = lst(tuple0 | (any, x1)) and x2 = 'b | 'a, lst(x2) | lst(tuple0)",
        "~lst(tuple0)"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "lst(x1) \\ lst('b, x2) where x1 = 'b | 'a, lst(x1) | lst(tuple0) and x2 = lst(tuple0 | (any, x2))",
        "lst(tuple0)"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "lst(x1) \\ lst('b, x2) where x1 = 'b | 'a, lst(x1) | lst(tuple0) and x2 = lst(tuple0 | (any, x2))",
        "lst(any, 'c & lst(x1)) where x1 = tuple0 | (any, lst(x1))"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [
        "'c",
        "lst(x1) | lst(tuple0) | 'c where x1 = 'b | 'a, lst(x1) | lst(tuple0)"
      ],
      [
        "lst(x1) | lst(tuple0) | 'c where x1 = 'b | 'a, lst(x1) | lst(tuple0)",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "lst(x1) \\ lst('b, x2) where x1 = 'b | 'a, lst(x1) | lst(tuple0) and x2 = lst(tuple0 | (any, x2))",
        "lst('c, x1) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'a \\ 'b | 'c" ], [ "'a \\ 'b | 'c", "'c" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "('b -> ~bool(true)) & ('a -> any)", "'a \\ 'b -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "any", "~bool(true)" ] ] },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "('d -> ~(bool() \\ bool(~true))) & ('c -> any) -> x1 -> x2 where x1 = lst(tuple0 | ('d | 'c, x1)) and x2 = lst(tuple0 | ('c \\ 'd, x2))",
        "('b -> ~bool(true)) & ('a -> any) -> 'e"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "'c & 'b | 'c & 'a" ], [ "'c & 'b | 'c & 'a", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b & 'a" ], [ "'b & 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'b", "'e" ],
    "constr": [
      [
        "'e",
        "(x1 -> x2) | 'e where x1 = lst(tuple0 | ('c & 'b | 'd & 'b | 'c & 'a, x1)) and x2 = lst(tuple0 | ('c & 'b & ~'d | 'c & 'a & ~'b, x2))"
      ],
      [
        "(x1 -> x2) | 'e where x1 = lst(tuple0 | ('c & 'b | 'd & 'b | 'c & 'a, x1)) and x2 = lst(tuple0 | ('c & 'b & ~'d | 'c & 'a & ~'b, x2))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "x1 -> x2 where x1 = lst(tuple0 | ('c & 'a | 'b, x1)) and x2 = lst(tuple0 | ('c & 'a & ~'b, x2))",
        "x1 -> 'd where x1 = lst('b | 'a, x1) | lst(tuple0)"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'a \\ 'b | 'c" ], [ "'a \\ 'b | 'c", "'c" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "lst(x1) | 'c where x1 = tuple0 | ('a \\ 'b, lst(x1))" ],
      [ "lst(x1) | 'c where x1 = tuple0 | ('a \\ 'b, lst(x1))", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'a \\ 'b", "any" ],
      [
        "x1 where x1 = lst(tuple0 | ('a \\ 'b, x1))",
        "x1 where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "lst('a \\ 'b, x1) where x1 = lst(tuple0 | ('a \\ 'b, x1))",
        "x1 where x1 = lst('a \\ 'b, x1) | lst(tuple0)"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  { "vars": [], "mono": [], "constr": [ [ "any", "bool(true)" ] ] },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "('d -> ~(bool() \\ bool(~true))) & ('c -> any) -> x2 -> x1 where x1 = lst(tuple0 | ('c \\ 'd, x1)) and x2 = lst(tuple0 | ('d | 'c, x2))",
        "('b -> ~bool(true)) & ('a -> any) -> 'e"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "'c & 'b | 'c & 'a" ], [ "'c & 'b | 'c & 'a", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b & 'a" ], [ "'b & 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'b", "'e" ],
    "constr": [
      [
        "'e",
        "(x2 -> x1) | 'e where x1 = lst(tuple0 | ('c & 'b & ~'d | 'c & 'a & ~'b, x1)) and x2 = lst(tuple0 | ('c & 'b | 'd & 'b | 'c & 'a, x2))"
      ],
      [
        "(x2 -> x1) | 'e where x1 = lst(tuple0 | ('c & 'b & ~'d | 'c & 'a & ~'b, x1)) and x2 = lst(tuple0 | ('c & 'b | 'd & 'b | 'c & 'a, x2))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "x1 -> x2 where x1 = lst(tuple0 | ('c & 'a | 'b, x1)) and x2 = lst(tuple0 | ('c & 'a & ~'b, x2))",
        "x1 -> 'd where x1 = lst('b | 'a, x1) | lst(tuple0)"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'a \\ 'b | 'c" ], [ "'a \\ 'b | 'c", "'c" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "lst(x1) | 'c where x1 = tuple0 | ('a \\ 'b, lst(x1))" ],
      [ "lst(x1) | 'c where x1 = tuple0 | ('a \\ 'b, lst(x1))", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "x1 where x1 = lst(tuple0 | ('a \\ 'b, x1))",
        "x1 where x1 = lst('a \\ 'b, x1) | lst(tuple0)"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "lst('b, x1) & lst(x2) where x1 = lst(tuple0 | (any, x1)) and x2 = 'b | 'a, lst(x2) | lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "lst('b, x2) & lst(x1) where x1 = 'b | 'a, lst(x1) | lst(tuple0) and x2 = lst(tuple0 | (any, x2))",
        "~lst(tuple0)"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "lst('b, x1) & lst(x2) where x1 = lst(tuple0 | (any, x1)) and x2 = 'b | 'a, lst(x2) | lst(tuple0)",
        "lst(tuple0)"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "lst('b, x1) & lst(x2) where x1 = lst(tuple0 | (any, x1)) and x2 = 'b | 'a, lst(x2) | lst(tuple0)",
        "lst(any, 'c & lst(x1)) where x1 = tuple0 | (any, lst(x1))"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [
        "'c",
        "lst(x1) | lst(tuple0) | 'c where x1 = 'b | 'a, lst(x1) | lst(tuple0)"
      ],
      [
        "lst(x1) | lst(tuple0) | 'c where x1 = 'b | 'a, lst(x1) | lst(tuple0)",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "lst('b, x1) & lst(x2) where x1 = lst(tuple0 | (any, x1)) and x2 = 'b | 'a, lst(x2) | lst(tuple0)",
        "lst('c, x1) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "('b -> ~bool(true)) & ('a -> any)", "'b -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "~bool(true) | 'a" ], [ "~bool(true) | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "~bool(true)", "~bool(true)" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "~bool(true)", "bool(true)" ] ] },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "('d -> ~(bool() \\ bool(~true))) & ('c -> any) -> x2 -> x1 where x1 = lst(tuple0 | ('c \\ 'd, x1)) and x2 = lst(tuple0 | ('d | 'c, x2))",
        "('b -> ~bool(true)) & ('a -> any) -> 'e"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "'c & 'b | 'c & 'a" ], [ "'c & 'b | 'c & 'a", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b & 'a" ], [ "'b & 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'b", "'e" ],
    "constr": [
      [
        "'e",
        "(x2 -> x1) | 'e where x1 = lst(tuple0 | ('c & 'b & ~'d | 'c & 'a & ~'b, x1)) and x2 = lst(tuple0 | ('c & 'b | 'd & 'b | 'c & 'a, x2))"
      ],
      [
        "(x2 -> x1) | 'e where x1 = lst(tuple0 | ('c & 'b & ~'d | 'c & 'a & ~'b, x1)) and x2 = lst(tuple0 | ('c & 'b | 'd & 'b | 'c & 'a, x2))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "x2 -> x1 where x1 = lst(tuple0 | ('c & 'a & ~'b, x1)) and x2 = lst(tuple0 | ('c & 'a | 'b, x2))",
        "x1 -> 'd where x1 = lst('b | 'a, x1) | lst(tuple0)"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'a \\ 'b | 'c" ], [ "'a \\ 'b | 'c", "'c" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "lst(x1) | 'c where x1 = tuple0 | ('a \\ 'b, lst(x1))" ],
      [ "lst(x1) | 'c where x1 = tuple0 | ('a \\ 'b, lst(x1))", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "x1 where x1 = lst(tuple0 | ('a \\ 'b, x1))",
        "x1 where x1 = lst('a \\ 'b, x1) | lst(tuple0)"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "lst(tuple0)", "~lst(tuple0)" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "lst(tuple0)", "x1 where x1 = lst('a \\ 'b, x1) | lst(tuple0)" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  { "vars": [], "mono": [], "constr": [ [ "lst(tuple0)", "lst(tuple0)" ] ] },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "('b -> ~bool(true)) & ('a -> any)", "'c -> ~bool(true)" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "('b -> ~bool(true)) & ('a -> any)", "'c -> bool(true)" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "('b -> ~bool(true)) & ('a -> any)", "any" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "lst(x1) \\ lst('b, x2) where x1 = 'b | 'a, lst(x1) | lst(tuple0) and x2 = lst(tuple0 | (any, x2))",
        "any"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "lst(x2) \\ lst('b, x1) where x1 = lst(tuple0 | (any, x1)) and x2 = 'b | 'a, lst(x2) | lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "lst(x1) \\ lst('b, x2) where x1 = 'b | 'a, lst(x1) | lst(tuple0) and x2 = lst(tuple0 | (any, x2))",
        "~lst(tuple0)"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "lst(x1) \\ lst('b, x2) where x1 = 'b | 'a, lst(x1) | lst(tuple0) and x2 = lst(tuple0 | (any, x2))",
        "lst(tuple0)"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "lst(x1) \\ lst('b, x2) where x1 = 'b | 'a, lst(x1) | lst(tuple0) and x2 = lst(tuple0 | (any, x2))",
        "lst(any, 'c & lst(x1)) where x1 = tuple0 | (any, lst(x1))"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [
        "'c",
        "lst(x1) | lst(tuple0) | 'c where x1 = 'b | 'a, lst(x1) | lst(tuple0)"
      ],
      [
        "lst(x1) | lst(tuple0) | 'c where x1 = 'b | 'a, lst(x1) | lst(tuple0)",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "lst(x2) \\ lst('b, x1) where x1 = lst(tuple0 | (any, x1)) and x2 = 'b | 'a, lst(x2) | lst(tuple0)",
        "lst('c, x1) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'a \\ 'b | 'c" ], [ "'a \\ 'b | 'c", "'c" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "('b -> ~bool(true)) & ('a -> any)", "'a \\ 'b -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "any", "~bool(true)" ] ] },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'c", "('b -> ~bool(true)) & ('a -> any) -> 'd" ] ],
    "prio": [ "'a", "'b", "'c" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "'c & (('b -> ~bool(true)) & ('a -> any) -> 'd)" ],
      [ "'c & (('b -> ~bool(true)) & ('a -> any) -> 'd)", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'c", "x1 -> 'd where x1 = lst('b | 'a, x1) | lst(tuple0)" ]
    ],
    "prio": [ "'a", "'b", "'c" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "'c & (x1 -> 'd) where x1 = lst('b | 'a, x1) | lst(tuple0)" ],
      [ "'c & (x1 -> 'd) where x1 = lst('b | 'a, x1) | lst(tuple0)", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'a \\ 'b", "any" ],
      [ "'c", "x1 where x1 = lst(tuple0 | (any, x1))" ]
    ],
    "prio": [ "'a", "'b", "'c" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a & lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "any", "bool(true)" ] ] },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'c & (('b -> ~bool(true)) & ('a -> any) -> 'd & (x2 -> 'e & lst(x1))) where x1 = tuple0 | (any, lst(x1)) and x2 = lst('b | 'a, x2) | lst(tuple0)",
        "('b -> ~bool(true)) & ('a -> any) -> 'f"
      ]
    ],
    "prio": [ "'a", "'b", "'c", "'d", "'e" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'b", "'c", "'d", "'e" ],
    "constr": [
      [
        "'c",
        "'c & (~(('b -> ~bool(true)) & ('a -> any) -> 'd & (x2 -> 'e & lst(x1))) | (('b -> ~bool(true)) & ('a -> any) -> 'f)) where x1 = tuple0 | (any, lst(x1)) and x2 = lst('b | 'a, x2) | lst(tuple0)"
      ],
      [
        "'c & (~(('b -> ~bool(true)) & ('a -> any) -> 'd & (x2 -> 'e & lst(x1))) | (('b -> ~bool(true)) & ('a -> any) -> 'f)) where x1 = tuple0 | (any, lst(x1)) and x2 = lst('b | 'a, x2) | lst(tuple0)",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'c & (x2 -> 'd & lst(x1)) where x1 = tuple0 | (any, lst(x1)) and x2 = lst('b | 'a, x2) | lst(tuple0)",
        "x1 -> 'e where x1 = lst('b | 'a, x1) | lst(tuple0)"
      ]
    ],
    "prio": [ "'a", "'b", "'c", "'d" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'b", "'c", "'d" ],
    "constr": [
      [
        "'c",
        "'c & (~(x1 -> 'd & lst(x3)) | (x2 -> 'e)) where x1 = lst('b | 'a, x1) | lst(tuple0) and x2 = lst('b | 'a, x2) | lst(tuple0) and x3 = tuple0 | (any, lst(x3))"
      ],
      [
        "'c & (~(x2 -> 'd & lst(x1)) | (x3 -> 'e)) where x1 = tuple0 | (any, lst(x1)) and x2 = lst('b | 'a, x2) | lst(tuple0) and x3 = lst('b | 'a, x3) | lst(tuple0)",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "lst('b, x2) & lst(x1) where x1 = 'b | 'a, lst(x1) | lst(tuple0) and x2 = lst(tuple0 | (any, x2))",
        "any"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "lst('b, x1) & lst(x2) where x1 = lst(tuple0 | (any, x1)) and x2 = 'b | 'a, lst(x2) | lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "lst('b, x1) & lst(x2) where x1 = lst(tuple0 | (any, x1)) and x2 = 'b | 'a, lst(x2) | lst(tuple0)",
        "~lst(tuple0)"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "lst('b, x1) & lst(x2) where x1 = lst(tuple0 | (any, x1)) and x2 = 'b | 'a, lst(x2) | lst(tuple0)",
        "lst(tuple0)"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "lst('b, x1) & lst(x2) where x1 = lst(tuple0 | (any, x1)) and x2 = 'b | 'a, lst(x2) | lst(tuple0)",
        "lst(any, 'c & lst(x1)) where x1 = tuple0 | (any, lst(x1))"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [
        "'c",
        "lst(x1) | lst(tuple0) | 'c where x1 = 'b | 'a, lst(x1) | lst(tuple0)"
      ],
      [
        "lst(x1) | lst(tuple0) | 'c where x1 = 'b | 'a, lst(x1) | lst(tuple0)",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "lst('b, x1) & lst(x2) where x1 = lst(tuple0 | (any, x1)) and x2 = 'b | 'a, lst(x2) | lst(tuple0)",
        "lst('c, x1) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "('b -> ~bool(true)) & ('a -> any)", "'b -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "~bool(true) | 'a" ], [ "~bool(true) | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "~bool(true)", "~bool(true)" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "~bool(true)", "bool(true)" ] ] },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'c & (('b -> ~bool(true)) & ('a -> any) -> 'd & (x1 -> 'e & lst(x2))) where x1 = lst('b | 'a, x1) | lst(tuple0) and x2 = tuple0 | (any, lst(x2))",
        "('b -> ~bool(true)) & ('a -> any) -> 'f"
      ]
    ],
    "prio": [ "'a", "'b", "'c", "'d", "'e" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'b", "'c", "'d", "'e" ],
    "constr": [
      [
        "'c",
        "'c & (~(('b -> ~bool(true)) & ('a -> any) -> 'd & (x2 -> 'e & lst(x1))) | (('b -> ~bool(true)) & ('a -> any) -> 'f)) where x1 = tuple0 | (any, lst(x1)) and x2 = lst('b | 'a, x2) | lst(tuple0)"
      ],
      [
        "'c & (~(('b -> ~bool(true)) & ('a -> any) -> 'd & (x2 -> 'e & lst(x1))) | (('b -> ~bool(true)) & ('a -> any) -> 'f)) where x1 = tuple0 | (any, lst(x1)) and x2 = lst('b | 'a, x2) | lst(tuple0)",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'c & (x1 -> 'd & lst(x2)) where x1 = lst('b | 'a, x1) | lst(tuple0) and x2 = tuple0 | (any, lst(x2))",
        "x1 -> 'e where x1 = lst('b | 'a, x1) | lst(tuple0)"
      ]
    ],
    "prio": [ "'a", "'b", "'c", "'d" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'b", "'c", "'d" ],
    "constr": [
      [
        "'c",
        "'c & (~(x2 -> 'd & lst(x1)) | (x3 -> 'e)) where x1 = tuple0 | (any, lst(x1)) and x2 = lst('b | 'a, x2) | lst(tuple0) and x3 = lst('b | 'a, x3) | lst(tuple0)"
      ],
      [
        "'c & (~(x2 -> 'd & lst(x1)) | (x3 -> 'e)) where x1 = tuple0 | (any, lst(x1)) and x2 = lst('b | 'a, x2) | lst(tuple0) and x3 = lst('b | 'a, x3) | lst(tuple0)",
        "'c"
      ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "lst(tuple0)", "any" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "lst(tuple0)", "~lst(tuple0)" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "lst(tuple0)", "lst(tuple0)" ] ] },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "('b -> ~bool(true)) & ('a -> any) -> x3 -> lst('a \\ 'b, 'e & lst(x1)) | lst(tuple0) | 'e & lst(x2) where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = lst('b | 'a, x3) | lst(tuple0)",
        "'c & (('b -> ~bool(true)) & ('a -> any) -> 'd & (x2 -> 'e & lst(x1))) where x1 = tuple0 | (any, lst(x1)) and x2 = lst('b | 'a, x2) | lst(tuple0)"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [
        "'c",
        "(('b -> ~bool(true)) & ('a -> any) -> x4 -> lst(x3) | lst(tuple0) | 'd & lst(x1)) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = 'a \\ 'b, lst(x3) | lst(tuple0) | 'd & lst(x2) and x4 = lst('b | 'a, x4) | lst(tuple0)"
      ],
      [
        "(('b -> ~bool(true)) & ('a -> any) -> x4 -> lst(x3) | lst(tuple0) | 'd & lst(x1)) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = 'a \\ 'b, lst(x3) | lst(tuple0) | 'd & lst(x2) and x4 = lst('b | 'a, x4) | lst(tuple0)",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [
        "'c",
        "(x4 -> lst(x2) | lst(tuple0) | 'd & lst(x3)) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = 'a \\ 'b, lst(x2) | lst(tuple0) | 'd & lst(x1) and x3 = tuple0 | (any, lst(x3)) and x4 = lst('b | 'a, x4) | lst(tuple0)"
      ],
      [
        "(x1 -> lst(x4) | lst(tuple0) | 'd & lst(x3)) | 'c where x1 = lst('b | 'a, x1) | lst(tuple0) and x2 = tuple0 | (any, lst(x2)) and x3 = tuple0 | (any, lst(x3)) and x4 = 'a \\ 'b, lst(x4) | lst(tuple0) | 'd & lst(x2)",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [
        "'c",
        "lst(x2) | lst(tuple0) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = 'a \\ 'b, lst(x2) | lst(tuple0) | 'c & lst(x1)"
      ],
      [
        "lst(x2) | lst(tuple0) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = 'a \\ 'b, lst(x2) | lst(tuple0) | 'c & lst(x1)",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "arrow", "'a -> ~bool(true)" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "arrow", "'a -> bool(true)" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a \\ lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a & (lst(any, x1) | lst(tuple0)) where x1 = lst(tuple0 | (any, x1))"
      ],
      [
        "'a & (lst(any, x1) | lst(tuple0)) where x1 = lst(tuple0 | (any, x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(any, x1) where x1 = lst(tuple0 | (any, x1))",
        "~lst(tuple0)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(any, x1) where x1 = lst(tuple0 | (any, x1))", "lst(tuple0)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ lst(any, x1) where x1 = lst(tuple0 | (any, x1))" ],
      [ "'a \\ lst(any, x1) where x1 = lst(tuple0 | (any, x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & lst(tuple0)", "~lst(tuple0)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ lst(tuple0)" ], [ "'a \\ lst(tuple0)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & lst(tuple0)", "lst(tuple0)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(any, x1) where x1 = lst(tuple0 | (any, x1))",
        "lst(any, 'b & lst(x1)) where x1 = tuple0 | (any, lst(x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(any, lst(x1)) \\ lst(any, 'b & lst(x1))) where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "'a \\ (lst(any, lst(x1)) \\ lst(any, 'b & lst(x1))) where x1 = tuple0 | (any, lst(x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(any, 'b & lst(x1)) where x1 = tuple0 | (any, lst(x1))",
        "lst('c, x1) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(any, 'b & lst(x1)) \\ lst('c, x2)) where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2))"
      ],
      [
        "'a \\ (lst(any, 'b & lst(x2)) \\ lst('c, x1)) where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'b", "'a -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b & ('a -> 'c)" ], [ "'b & ('a -> 'c)", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "'b", "'a & lst(x1) -> 'c where x1 = tuple0 | (any, lst(x1))" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b", "'b & ('a & lst(x1) -> 'c) where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "'b & ('a & lst(x1) -> 'c) where x1 = tuple0 | (any, lst(x1))", "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'a", "'b -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'a", "'a & ('b -> 'c)" ], [ "'a & ('b -> 'c)", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a", "~bool(true)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ bool(true)" ], [ "'a \\ bool(true)", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a \\ bool(true)", "bool(true)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & bool(true)" ], [ "'a & bool(true)", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & lst(tuple0)", "~lst(tuple0)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ lst(tuple0)" ], [ "'a \\ lst(tuple0)", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g" ],
    "mono": [],
    "constr": [
      [
        "'b & ('e -> empty) -> ('a & lst('e, x2) & lst(any, 'd & lst(x1)) -> empty) & ('a & lst(tuple0) -> lst(tuple0)) where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2))",
        "'c & ('b & ('e -> empty) -> 'f & ('d & lst(x1) -> 'g)) where x1 = tuple0 | (any, lst(x1))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'b & (lst(x2) & lst('c, x1) | lst(tuple0)) | 'a where x1 = lst(tuple0 | (any, x1)) and x2 = any, 'b & (lst(x2) & lst('c, x1) | lst(tuple0))"
      ],
      [
        "'b & (lst(x2) & lst('c, x1) | lst(tuple0)) | 'a where x1 = lst(tuple0 | (any, x1)) and x2 = any, 'b & (lst(x2) & lst('c, x1) | lst(tuple0))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "('b & ('e -> empty) -> ('d & lst(any, x2) & lst('e, x3) | 'a & lst(any, x2) & lst('e, x3) -> empty) & ('d & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0))) | 'c where x1 = lst(tuple0 | (any, x1)) and x2 = 'd & (lst(any, x2) & lst('e, x1) | lst(tuple0)) and x3 = lst(tuple0 | (any, x3))"
      ],
      [
        "('b & ('e -> empty) -> ('d & lst(any, x3) & lst('e, x2) | 'a & lst(any, x3) & lst('e, x2) -> empty) & ('d & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0))) | 'c where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = 'd & (lst(any, x3) & lst('e, x1) | lst(tuple0))",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(x3) & ~lst('b, x2) & ~lst(tuple0) | lst(x3) & ~lst(x1) & ~lst(tuple0)) where x1 = any, 'a & (lst(x1) & lst('b, x2) | lst(tuple0)) and x2 = lst(tuple0 | (any, x2)) and x3 = tuple0 | (any, lst(x3))"
      ],
      [
        "'a \\ (lst(x3) & ~lst('b, x2) & ~lst(tuple0) | lst(x3) & ~lst(x1) & ~lst(tuple0)) where x1 = any, 'a & (lst(x1) & lst('b, x2) | lst(tuple0)) and x2 = lst(tuple0 | (any, x2)) and x3 = tuple0 | (any, lst(x3))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'d" ],
    "constr": [
      [
        "'d",
        "('b & lst(any, x2) & lst('c, x3) | 'a & lst(any, x2) & lst('c, x3) -> empty) & ('b & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0)) | 'd where x1 = lst(tuple0 | (any, x1)) and x2 = 'b & (lst(any, x2) & lst('c, x1) | lst(tuple0)) and x3 = lst(tuple0 | (any, x3))"
      ],
      [
        "('b & lst(any, x2) & lst('c, x3) | 'a & lst(any, x2) & lst('c, x3) -> empty) & ('b & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0)) | 'd where x1 = lst(tuple0 | (any, x1)) and x2 = 'b & (lst(any, x2) & lst('c, x1) | lst(tuple0)) and x3 = lst(tuple0 | (any, x3))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "lst(tuple0) | 'a" ], [ "lst(tuple0) | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c", "('b & ('d -> empty) -> 'a & lst(tuple0) -> lst(tuple0)) | 'c"
      ],
      [
        "('b & ('d -> empty) -> 'a & lst(tuple0) -> lst(tuple0)) | 'c", "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "('a & lst(tuple0) -> lst(tuple0)) | 'b" ],
      [ "('a & lst(tuple0) -> lst(tuple0)) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ ('b -> empty)" ], [ "'a \\ ('b -> empty)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "arrow | 'a" ], [ "arrow | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "arrow -> lst(tuple0) -> lst(tuple0)", "arrow" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "('a -> empty) -> (lst(any, x3) & lst('a, x1) -> empty) & (lst(tuple0) -> lst(tuple0)) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = lst(any, x3) & lst('a, x2) | lst(tuple0)",
        "arrow -> lst(tuple0) -> lst(tuple0)"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & lst(tuple0)", "~lst(tuple0)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ lst(tuple0)" ], [ "'a \\ lst(tuple0)", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g", "'h" ],
    "mono": [],
    "constr": [
      [
        "'b & ('e -> 'h \\ bool(true)) -> ('a & lst('e, x1) & lst(any, 'd & lst(x2)) -> 'g) & ('a & lst(tuple0) -> lst(tuple0)) where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2))",
        "'c & ('b & ('e -> 'h \\ bool(true)) -> 'f & ('d & lst(x1) -> 'g)) where x1 = tuple0 | (any, lst(x1))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'b & (lst(x2) & lst('c, x1) | lst(tuple0)) | 'a where x1 = lst(tuple0 | (any, x1)) and x2 = any, 'b & (lst(x2) & lst('c, x1) | lst(tuple0))"
      ],
      [
        "'b & (lst(x2) & lst('c, x1) | lst(tuple0)) | 'a where x1 = lst(tuple0 | (any, x1)) and x2 = any, 'b & (lst(x2) & lst('c, x1) | lst(tuple0))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "('b & ('e -> 'g \\ bool(true)) -> ('d & lst(any, x2) & lst('e, x3) | 'a & lst(any, x2) & lst('e, x3) -> lst(tuple0) | 'f) & ('d & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0))) | 'c where x1 = lst(tuple0 | (any, x1)) and x2 = 'd & (lst(any, x2) & lst('e, x1) | lst(tuple0)) and x3 = lst(tuple0 | (any, x3))"
      ],
      [
        "('b & ('e -> 'g \\ bool(true)) -> ('d & lst(any, x3) & lst('e, x1) | 'a & lst(any, x3) & lst('e, x1) -> lst(tuple0) | 'f) & ('d & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0))) | 'c where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = 'd & (lst(any, x3) & lst('e, x2) | lst(tuple0))",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(x1) & ~lst('b, x2) & ~lst(tuple0) | lst(x1) & ~lst(x3) & ~lst(tuple0)) where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = any, 'a & (lst(x3) & lst('b, x2) | lst(tuple0))"
      ],
      [
        "'a \\ (lst(x1) & ~lst('b, x3) & ~lst(tuple0) | lst(x1) & ~lst(x2) & ~lst(tuple0)) where x1 = tuple0 | (any, lst(x1)) and x2 = any, 'a & (lst(x2) & lst('b, x3) | lst(tuple0)) and x3 = lst(tuple0 | (any, x3))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'d" ],
    "constr": [
      [
        "'d",
        "('b & lst(any, x2) & lst('c, x3) | 'a & lst(any, x2) & lst('c, x3) -> lst(tuple0) | 'e) & ('b & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0)) | 'd where x1 = lst(tuple0 | (any, x1)) and x2 = 'b & (lst(any, x2) & lst('c, x1) | lst(tuple0)) and x3 = lst(tuple0 | (any, x3))"
      ],
      [
        "('b & lst(any, x3) & lst('c, x1) | 'a & lst(any, x3) & lst('c, x1) -> lst(tuple0) | 'e) & ('b & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0)) | 'd where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = 'b & (lst(any, x3) & lst('c, x2) | lst(tuple0))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "lst(tuple0) | 'a" ], [ "lst(tuple0) | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "('b & ('d -> 'e \\ bool(true)) -> 'a & lst(tuple0) -> lst(tuple0)) | 'c"
      ],
      [
        "('b & ('d -> 'e \\ bool(true)) -> 'a & lst(tuple0) -> lst(tuple0)) | 'c",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "('a & lst(tuple0) -> lst(tuple0)) | 'b" ],
      [ "('a & lst(tuple0) -> lst(tuple0)) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ ('b -> 'c \\ bool(true))" ],
      [ "'a \\ ('b -> 'c \\ bool(true))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "arrow | 'a" ], [ "arrow | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "arrow -> lst(tuple0) -> lst(tuple0)", "arrow" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "('a -> ~bool(true)) -> (lst(any, x2) & lst('a, x3) -> lst(tuple0)) & (lst(tuple0) -> lst(tuple0)) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(any, x2) & lst('a, x1) | lst(tuple0) and x3 = lst(tuple0 | (any, x3))",
        "arrow -> lst(tuple0) -> lst(tuple0)"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [ "'a", "any" ], [ "'b", "x1 where x1 = lst(tuple0 | (any, x1))" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a & lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a", "bool(true)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & bool(true)" ], [ "'a & bool(true)", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & lst(tuple0)", "~lst(tuple0)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ lst(tuple0)" ], [ "'a \\ lst(tuple0)", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g", "'h" ],
    "mono": [],
    "constr": [
      [
        "'b & ('e -> 'h & bool(true)) -> ('a & lst('e, x3) & lst(any, 'd & lst(x1)) -> lst('e, 'g & lst(x2))) & ('a & lst(tuple0) -> lst(tuple0)) where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = lst(tuple0 | (any, x3))",
        "'c & ('b & ('e -> 'h & bool(true)) -> 'f & ('d & lst(x2) -> 'g & lst(x1))) where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, lst(x2))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'b & (lst(x2) & lst('c, x1) | lst(tuple0)) | 'a where x1 = lst(tuple0 | (any, x1)) and x2 = any, 'b & (lst(x2) & lst('c, x1) | lst(tuple0))"
      ],
      [
        "'b & (lst(x1) & lst('c, x2) | lst(tuple0)) | 'a where x1 = any, 'b & (lst(x1) & lst('c, x2) | lst(tuple0)) and x2 = lst(tuple0 | (any, x2))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "('b & ('e -> 'g & bool(true)) -> ('d & lst(any, x6) & lst('e, x2) | 'a & lst(any, x6) & lst('e, x2) -> lst('e, lst(x4) | lst(tuple0) | 'f & lst(x1))) & ('d & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0))) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = tuple0 | (any, lst(x3)) and x4 = 'e, lst(x4) | lst(tuple0) | 'f & lst(x3) and x5 = lst(tuple0 | (any, x5)) and x6 = 'd & (lst(any, x6) & lst('e, x5) | lst(tuple0))"
      ],
      [
        "('b & ('e -> 'g & bool(true)) -> ('d & lst(any, x6) & lst('e, x4) | 'a & lst(any, x6) & lst('e, x4) -> lst('e, lst(x3) | lst(tuple0) | 'f & lst(x1))) & ('d & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0))) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = 'e, lst(x3) | lst(tuple0) | 'f & lst(x2) and x4 = lst(tuple0 | (any, x4)) and x5 = lst(tuple0 | (any, x5)) and x6 = 'd & (lst(any, x6) & lst('e, x5) | lst(tuple0))",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(x2) & ~lst('b, x1) & ~lst(tuple0) | lst(x2) & ~lst(x3) & ~lst(tuple0)) where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = any, 'a & (lst(x3) & lst('b, x1) | lst(tuple0))"
      ],
      [
        "'a \\ (lst(x2) & ~lst('b, x3) & ~lst(tuple0) | lst(x2) & ~lst(x1) & ~lst(tuple0)) where x1 = any, 'a & (lst(x1) & lst('b, x3) | lst(tuple0)) and x2 = tuple0 | (any, lst(x2)) and x3 = lst(tuple0 | (any, x3))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'d" ],
    "constr": [
      [
        "'d",
        "('b & lst(any, x6) & lst('c, x1) | 'a & lst(any, x6) & lst('c, x1) -> lst('c, lst(x4) | lst(tuple0) | 'e & lst(x3))) & ('b & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0)) | 'd where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = tuple0 | (any, lst(x3)) and x4 = 'c, lst(x4) | lst(tuple0) | 'e & lst(x2) and x5 = lst(tuple0 | (any, x5)) and x6 = 'b & (lst(any, x6) & lst('c, x5) | lst(tuple0))"
      ],
      [
        "('b & lst(any, x3) & lst('c, x1) | 'a & lst(any, x3) & lst('c, x1) -> lst('c, lst(x6) | lst(tuple0) | 'e & lst(x5))) & ('b & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0)) | 'd where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = 'b & (lst(any, x3) & lst('c, x2) | lst(tuple0)) and x4 = tuple0 | (any, lst(x4)) and x5 = tuple0 | (any, lst(x5)) and x6 = 'c, lst(x6) | lst(tuple0) | 'e & lst(x4)",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "lst(x2) | lst(tuple0) | 'b where x1 = tuple0 | (any, lst(x1)) and x2 = 'a, lst(x2) | lst(tuple0) | 'b & lst(x1)"
      ],
      [
        "lst(x2) | lst(tuple0) | 'b where x1 = tuple0 | (any, lst(x1)) and x2 = 'a, lst(x2) | lst(tuple0) | 'b & lst(x1)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "('b & ('d -> 'e & bool(true)) -> 'a & lst(tuple0) -> lst(tuple0)) | 'c"
      ],
      [
        "('b & ('d -> 'e & bool(true)) -> 'a & lst(tuple0) -> lst(tuple0)) | 'c",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "('a & lst(tuple0) -> lst(tuple0)) | 'b" ],
      [ "('a & lst(tuple0) -> lst(tuple0)) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "('b & ('d -> 'e & bool(true)) -> 'a & lst(tuple0) -> lst(tuple0)) | 'c"
      ],
      [
        "('b & ('d -> 'e & bool(true)) -> 'a & lst(tuple0) -> lst(tuple0)) | 'c",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "('a & lst(tuple0) -> lst(tuple0)) | 'b" ],
      [ "('a & lst(tuple0) -> lst(tuple0)) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "lst(x2) | 'b where x1 = tuple0 | (any, lst(x1)) and x2 = 'a, lst(x2) | 'b & lst(x1)"
      ],
      [
        "lst(x2) | 'b where x1 = tuple0 | (any, lst(x1)) and x2 = 'a, lst(x2) | 'b & lst(x1)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'b & lst(tuple0) | 'a" ], [ "'b & lst(tuple0) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "('b & ('e -> 'g & bool(true)) -> ('a & lst(any, 'd & lst(tuple0)) & lst('e, x2) -> lst('e, lst(tuple0) | 'f & lst(x1))) & ('d & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0))) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2))"
      ],
      [
        "('b & ('e -> 'g & bool(true)) -> ('a & lst(any, 'd & lst(tuple0)) & lst('e, x2) -> lst('e, lst(tuple0) | 'f & lst(x1))) & ('d & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0))) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2))",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(x1) \\ lst(tuple0)) where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "'a \\ (lst(x1) \\ lst(tuple0)) where x1 = tuple0 | (any, lst(x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'d" ],
    "constr": [
      [
        "'d",
        "('a & lst(any, 'b & lst(tuple0)) & lst('c, x2) -> lst('c, lst(tuple0) | 'e & lst(x1))) & ('b & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0)) | 'd where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2))"
      ],
      [
        "('a & lst(any, 'b & lst(tuple0)) & lst('c, x1) -> lst('c, lst(tuple0) | 'e & lst(x2))) & ('b & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0)) | 'd where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "lst(tuple0) | 'a" ], [ "lst(tuple0) | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ ('b -> 'c & bool(true))" ],
      [ "'a \\ ('b -> 'c & bool(true))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "arrow | 'a" ], [ "arrow | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "('a -> bool(true)) -> (lst('a, x1) & lst(any, lst(tuple0)) -> lst('a, lst(tuple0))) & (lst(tuple0) -> lst(tuple0)) where x1 = lst(tuple0 | (any, x1))",
        "arrow"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "arrow -> lst(tuple0) -> lst(tuple0)",
        "('a -> bool(true)) -> (lst('a, x1) & lst(any, lst(tuple0)) -> lst('a, lst(tuple0))) & (lst(tuple0) -> lst(tuple0)) where x1 = lst(tuple0 | (any, x1))"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "arrow -> lst(tuple0) -> lst(tuple0)",
        "('a -> bool(true)) -> (lst('a, x1) & lst(any, lst(tuple0)) -> lst('a, lst(tuple0))) & (lst(tuple0) -> lst(tuple0)) where x1 = lst(tuple0 | (any, x1))"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "('a -> bool(true)) -> (lst(any, x3) & lst('a, x1) -> lst('a, x4)) & (lst(tuple0) -> lst(tuple0)) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = lst(any, x3) & lst('a, x2) | lst(tuple0) and x4 = lst('a, x4) | lst(tuple0)",
        "('a -> bool(true)) -> (lst('a, x1) & lst(any, lst(tuple0)) -> lst('a, lst(tuple0))) & (lst(tuple0) -> lst(tuple0)) where x1 = lst(tuple0 | (any, x1))"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "('a -> bool(true)) -> (lst('a, x1) & lst(any, lst(tuple0)) -> lst('a, lst(tuple0))) & (lst(tuple0) -> lst(tuple0)) where x1 = lst(tuple0 | (any, x1))",
        "arrow -> lst(tuple0) -> lst(tuple0)"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "('a -> bool(true)) -> (lst('a, x1) & lst(any, lst(tuple0)) -> lst('a, lst(tuple0))) & (lst(tuple0) -> lst(tuple0)) where x1 = lst(tuple0 | (any, x1))",
        "arrow -> lst(tuple0) -> lst(tuple0)"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "('a -> bool(true)) -> (lst('a, x1) & lst(any, lst(tuple0)) -> lst('a, lst(tuple0))) & (lst(tuple0) -> lst(tuple0)) where x1 = lst(tuple0 | (any, x1))",
        "('a -> bool(true)) -> (lst(any, x4) & lst('a, x2) -> lst('a, x1)) & (lst(tuple0) -> lst(tuple0)) where x1 = lst('a, x1) | lst(tuple0) and x2 = lst(tuple0 | (any, x2)) and x3 = lst(tuple0 | (any, x3)) and x4 = lst(any, x4) & lst('a, x3) | lst(tuple0)"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & lst(tuple0)", "~lst(tuple0)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ lst(tuple0)" ], [ "'a \\ lst(tuple0)", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g", "'h" ],
    "mono": [],
    "constr": [
      [
        "'b & ('e -> 'h) -> ('a & lst('e, x1) & lst(any, 'd & lst(x2)) -> lst('e, 'g & lst(x3)) | 'g & lst(x4)) & ('a & lst(tuple0) -> lst(tuple0)) where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = tuple0 | (any, lst(x3)) and x4 = tuple0 | (any, lst(x4))",
        "'c & ('b & ('e -> 'h) -> 'f & ('d & lst(x1) -> 'g & lst(x2))) where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, lst(x2))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'b & (lst(x1) & lst('c, x2) | lst(tuple0)) | 'a where x1 = any, 'b & (lst(x1) & lst('c, x2) | lst(tuple0)) and x2 = lst(tuple0 | (any, x2))"
      ],
      [
        "'b & (lst(x2) & lst('c, x1) | lst(tuple0)) | 'a where x1 = lst(tuple0 | (any, x1)) and x2 = any, 'b & (lst(x2) & lst('c, x1) | lst(tuple0))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "('b & ('e -> 'g) -> ('d & lst(any, x5) & lst('e, x1) | 'a & lst(any, x5) & lst('e, x1) -> lst(x3) | lst(tuple0) | 'f & lst(x6)) & ('d & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0))) | 'c where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = 'e, lst(x3) | lst(tuple0) | 'f & lst(x2) and x4 = lst(tuple0 | (any, x4)) and x5 = 'd & (lst(any, x5) & lst('e, x4) | lst(tuple0)) and x6 = tuple0 | (any, lst(x6))"
      ],
      [
        "('b & ('e -> 'g) -> ('d & lst(any, x5) & lst('e, x1) | 'a & lst(any, x5) & lst('e, x1) -> lst(x6) | lst(tuple0) | 'f & lst(x2)) & ('d & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0))) | 'c where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = tuple0 | (any, lst(x3)) and x4 = lst(tuple0 | (any, x4)) and x5 = 'd & (lst(any, x5) & lst('e, x4) | lst(tuple0)) and x6 = 'e, lst(x6) | lst(tuple0) | 'f & lst(x3)",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(x1) & ~lst('b, x2) & ~lst(tuple0) | lst(x1) & ~lst(x3) & ~lst(tuple0)) where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = any, 'a & (lst(x3) & lst('b, x2) | lst(tuple0))"
      ],
      [
        "'a \\ (lst(x1) & ~lst('b, x2) & ~lst(tuple0) | lst(x1) & ~lst(x3) & ~lst(tuple0)) where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = any, 'a & (lst(x3) & lst('b, x2) | lst(tuple0))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'d" ],
    "constr": [
      [
        "'d",
        "('b & lst(any, x2) & lst('c, x3) | 'a & lst(any, x2) & lst('c, x3) -> lst(x5) | lst(tuple0) | 'e & lst(x6)) & ('b & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0)) | 'd where x1 = lst(tuple0 | (any, x1)) and x2 = 'b & (lst(any, x2) & lst('c, x1) | lst(tuple0)) and x3 = lst(tuple0 | (any, x3)) and x4 = tuple0 | (any, lst(x4)) and x5 = 'c, lst(x5) | lst(tuple0) | 'e & lst(x4) and x6 = tuple0 | (any, lst(x6))"
      ],
      [
        "('b & lst(any, x3) & lst('c, x4) | 'a & lst(any, x3) & lst('c, x4) -> lst(x5) | lst(tuple0) | 'e & lst(x6)) & ('b & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0)) | 'd where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = 'b & (lst(any, x3) & lst('c, x1) | lst(tuple0)) and x4 = lst(tuple0 | (any, x4)) and x5 = 'c, lst(x5) | lst(tuple0) | 'e & lst(x2) and x6 = tuple0 | (any, lst(x6))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "lst(x2) | lst(tuple0) | 'b where x1 = tuple0 | (any, lst(x1)) and x2 = 'a, lst(x2) | lst(tuple0) | 'b & lst(x1)"
      ],
      [
        "lst(x2) | lst(tuple0) | 'b where x1 = tuple0 | (any, lst(x1)) and x2 = 'a, lst(x2) | lst(tuple0) | 'b & lst(x1)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'c" ],
    "constr": [
      [ "'c", "('b & ('d -> 'e) -> 'a & lst(tuple0) -> lst(tuple0)) | 'c" ],
      [ "('b & ('d -> 'e) -> 'a & lst(tuple0) -> lst(tuple0)) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "('a & lst(tuple0) -> lst(tuple0)) | 'b" ],
      [ "('a & lst(tuple0) -> lst(tuple0)) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'c" ],
    "constr": [
      [ "'c", "('b & ('d -> 'e) -> 'a & lst(tuple0) -> lst(tuple0)) | 'c" ],
      [ "('b & ('d -> 'e) -> 'a & lst(tuple0) -> lst(tuple0)) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "('a & lst(tuple0) -> lst(tuple0)) | 'b" ],
      [ "('a & lst(tuple0) -> lst(tuple0)) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "lst(x2) | 'b where x1 = tuple0 | (any, lst(x1)) and x2 = 'a, lst(x2) | 'b & lst(x1)"
      ],
      [
        "lst(x2) | 'b where x1 = tuple0 | (any, lst(x1)) and x2 = 'a, lst(x2) | 'b & lst(x1)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'b & lst(tuple0) | 'a" ], [ "'b & lst(tuple0) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "('b & ('e -> 'g) -> ('a & lst(any, 'd & lst(tuple0)) & lst('e, x3) -> lst('e, lst(tuple0) | 'f & lst(x1)) | lst(tuple0) | 'f & lst(x2)) & ('d & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0))) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = lst(tuple0 | (any, x3))"
      ],
      [
        "('b & ('e -> 'g) -> ('a & lst(any, 'd & lst(tuple0)) & lst('e, x3) -> lst('e, lst(tuple0) | 'f & lst(x2)) | lst(tuple0) | 'f & lst(x1)) & ('d & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0))) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = lst(tuple0 | (any, x3))",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(x1) \\ lst(tuple0)) where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "'a \\ (lst(x1) \\ lst(tuple0)) where x1 = tuple0 | (any, lst(x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'d" ],
    "constr": [
      [
        "'d",
        "('a & lst(any, 'b & lst(tuple0)) & lst('c, x1) -> lst('c, lst(tuple0) | 'e & lst(x3)) | lst(tuple0) | 'e & lst(x2)) & ('b & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0)) | 'd where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = tuple0 | (any, lst(x3))"
      ],
      [
        "('a & lst(any, 'b & lst(tuple0)) & lst('c, x3) -> lst('c, lst(tuple0) | 'e & lst(x2)) | lst(tuple0) | 'e & lst(x1)) & ('b & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0)) | 'd where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = lst(tuple0 | (any, x3))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "lst(tuple0) | 'a" ], [ "lst(tuple0) | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ ('b -> 'c)" ], [ "'a \\ ('b -> 'c)", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "arrow | 'a" ], [ "arrow | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "('a -> any) -> (lst('a, x1) & lst(any, lst(tuple0)) -> lst('a, lst(tuple0)) | lst(tuple0)) & (lst(tuple0) -> lst(tuple0)) where x1 = lst(tuple0 | (any, x1))",
        "arrow"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "arrow -> lst(tuple0) -> lst(tuple0)",
        "('a -> any) -> (lst('a, x1) & lst(any, lst(tuple0)) -> lst('a, lst(tuple0)) | lst(tuple0)) & (lst(tuple0) -> lst(tuple0)) where x1 = lst(tuple0 | (any, x1))"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "arrow -> lst(tuple0) -> lst(tuple0)",
        "('a -> any) -> (lst('a, x1) & lst(any, lst(tuple0)) -> lst('a, lst(tuple0)) | lst(tuple0)) & (lst(tuple0) -> lst(tuple0)) where x1 = lst(tuple0 | (any, x1))"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "('a -> any) -> (lst(any, x4) & lst('a, x2) -> x1) & (lst(tuple0) -> lst(tuple0)) where x1 = lst('a, x1) | lst(tuple0) and x2 = lst(tuple0 | (any, x2)) and x3 = lst(tuple0 | (any, x3)) and x4 = lst(any, x4) & lst('a, x3) | lst(tuple0)",
        "('a -> any) -> (lst('a, x1) & lst(any, lst(tuple0)) -> lst('a, lst(tuple0)) | lst(tuple0)) & (lst(tuple0) -> lst(tuple0)) where x1 = lst(tuple0 | (any, x1))"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "('a -> any) -> (lst('a, x1) & lst(any, lst(tuple0)) -> lst('a, lst(tuple0)) | lst(tuple0)) & (lst(tuple0) -> lst(tuple0)) where x1 = lst(tuple0 | (any, x1))",
        "arrow -> lst(tuple0) -> lst(tuple0)"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "('a -> any) -> (lst('a, x1) & lst(any, lst(tuple0)) -> lst('a, lst(tuple0)) | lst(tuple0)) & (lst(tuple0) -> lst(tuple0)) where x1 = lst(tuple0 | (any, x1))",
        "arrow -> lst(tuple0) -> lst(tuple0)"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "('a -> any) -> (lst('a, x1) & lst(any, lst(tuple0)) -> lst('a, lst(tuple0)) | lst(tuple0)) & (lst(tuple0) -> lst(tuple0)) where x1 = lst(tuple0 | (any, x1))",
        "('a -> any) -> (lst(any, x3) & lst('a, x1) -> x4) & (lst(tuple0) -> lst(tuple0)) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = lst(any, x3) & lst('a, x2) | lst(tuple0) and x4 = lst('a, x4) | lst(tuple0)"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g", "'h" ],
    "mono": [],
    "constr": [
      [
        "'b & ('e -> 'h) -> 'a & lst(tuple0) -> lst(tuple0)",
        "'c & ('b & ('e -> 'h) -> 'f & ('d & lst(x1) -> 'g)) where x1 = tuple0 | (any, lst(x1))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'b & lst(tuple0) | 'a" ], [ "'b & lst(tuple0) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "('b & ('e -> 'f) -> 'd & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0)) | 'c"
      ],
      [
        "('b & ('e -> 'f) -> 'd & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0)) | 'c",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(x1) \\ lst(tuple0)) where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "'a \\ (lst(x1) \\ lst(tuple0)) where x1 = tuple0 | (any, lst(x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'c" ],
    "constr": [
      [ "'c", "('b & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0)) | 'c" ],
      [ "('b & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0)) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "lst(tuple0) | 'a" ], [ "lst(tuple0) | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'c" ],
    "constr": [
      [ "'c", "('b & ('d -> 'e) -> 'a & lst(tuple0) -> lst(tuple0)) | 'c" ],
      [ "('b & ('d -> 'e) -> 'a & lst(tuple0) -> lst(tuple0)) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "('a & lst(tuple0) -> lst(tuple0)) | 'b" ],
      [ "('a & lst(tuple0) -> lst(tuple0)) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ ('b -> 'c)" ], [ "'a \\ ('b -> 'c)", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "arrow | 'a" ], [ "arrow | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "arrow -> lst(tuple0) -> lst(tuple0)", "arrow" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "arrow -> lst(tuple0) -> lst(tuple0)",
        "arrow -> lst(tuple0) -> lst(tuple0)"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [],
    "constr": [
      [
        "'b -> 'a & lst(tuple0) -> lst(tuple0)",
        "'c & ('b -> 'e & ('d & lst(x1) -> 'f)) where x1 = tuple0 | (any, lst(x1))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'b & lst(tuple0) | 'a" ], [ "'b & lst(tuple0) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "('b -> 'd & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0)) | 'c"
      ],
      [
        "('b -> 'd & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0)) | 'c",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(x1) \\ lst(tuple0)) where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "'a \\ (lst(x1) \\ lst(tuple0)) where x1 = tuple0 | (any, lst(x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'c" ],
    "constr": [
      [ "'c", "('b & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0)) | 'c" ],
      [ "('b & lst(tuple0) | 'a & lst(tuple0) -> lst(tuple0)) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "lst(tuple0) | 'a" ], [ "lst(tuple0) | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'c" ],
    "constr": [
      [ "'c", "('b -> 'a & lst(tuple0) -> lst(tuple0)) | 'c" ],
      [ "('b -> 'a & lst(tuple0) -> lst(tuple0)) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "('a & lst(tuple0) -> lst(tuple0)) | 'b" ],
      [ "('a & lst(tuple0) -> lst(tuple0)) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "arrow | 'a" ], [ "arrow | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "any -> lst(tuple0) -> lst(tuple0)", "arrow" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "any -> lst(tuple0) -> lst(tuple0)",
        "any -> lst(tuple0) -> lst(tuple0)"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [ "'b -> 'a & lst(tuple0) -> lst(tuple0)", "'c & ('b -> 'd)" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "arrow | 'a" ], [ "arrow | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'c" ],
    "constr": [
      [ "'c", "('b -> 'a & lst(tuple0) -> lst(tuple0)) | 'c" ],
      [ "('b -> 'a & lst(tuple0) -> lst(tuple0)) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "('a & lst(tuple0) -> lst(tuple0)) | 'b" ],
      [ "('a & lst(tuple0) -> lst(tuple0)) | 'b", "'b" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "arrow", "any -> lst(tuple0) -> lst(tuple0)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "any -> lst(tuple0) -> lst(tuple0)", "arrow" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'b -> 'a & lst(tuple0) -> lst(tuple0)", "'c" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'c" ],
    "constr": [
      [ "'c", "('b -> 'a & lst(tuple0) -> lst(tuple0)) | 'c" ],
      [ "('b -> 'a & lst(tuple0) -> lst(tuple0)) | 'c", "'c" ]
    ]
  },
  { "vars": [], "mono": [], "constr": [] },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b -> bool(true | false) | (bool(true), 'a), x1 where x1 = lst('b, x1) | lst(tuple0)",
        "'c"
      ],
      [
        "'c",
        "'b -> bool(true | false) | (bool(true), 'a), x1 where x1 = lst('b, x1) | lst(tuple0)"
      ],
      [
        "'b -> bool(true | false) | (bool(true), 'a), x1 where x1 = lst('b, x1) | lst(tuple0)",
        "'c"
      ],
      [
        "'c",
        "'b -> bool(true | false) | (bool(true), 'a), x1 where x1 = lst('b, x1) | lst(tuple0)"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b -> bool(false) | (bool(true), 'a), x1 where x1 = lst('b, x1) | lst(tuple0)",
        "'c"
      ],
      [
        "'c",
        "'b -> bool(false) | (bool(true), 'a), x1 where x1 = lst('b, x1) | lst(tuple0)"
      ],
      [
        "'b -> bool(false) | (bool(true), 'a), x1 where x1 = lst('b, x1) | lst(tuple0)",
        "'c"
      ],
      [
        "'c",
        "'b -> bool(false) | (bool(true), 'a), x1 where x1 = lst('b, x1) | lst(tuple0)"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b -> bool(true | false) | (bool(true), 'a)", "'c -> ~bool(false)" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b -> bool(true | false) | (bool(true), 'a)", "'c -> bool(false)" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b -> bool(true | false) | (bool(true), 'a)", "'c -> ~bool(true)" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b -> bool(true | false) | (bool(true), 'a)", "'c -> bool(true)" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "('b -> bool(true | false) | (bool(true), 'a), x1) \\ (any, lst(tuple0)) where x1 = lst('b, x1) | lst(tuple0)",
        "tuple2"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "('b -> bool(true | false) | (bool(true), 'a), x1) \\ (any, lst(tuple0)) where x1 = lst('b, x1) | lst(tuple0)",
        "any, 'c"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "lst(x1) | 'b where x1 = 'a, lst(x1) | lst(tuple0)" ],
      [ "lst(x1) | 'b where x1 = 'a, lst(x1) | lst(tuple0)", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "('b -> bool(true | false) | (bool(true), 'a), x1) \\ (any, lst(tuple0)) where x1 = lst('b, x1) | lst(tuple0)",
        "'c, any"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "('b -> bool(true | false) | (bool(true), 'a)) | 'c" ],
      [ "('b -> bool(true | false) | (bool(true), 'a)) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "lst(x1) where x1 = 'a, lst(x1) | lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "lst(x1) where x1 = 'a, lst(x1) | lst(tuple0)", "~lst(tuple0)" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "lst(x1) where x1 = 'a, lst(x1) | lst(tuple0)", "lst(tuple0)" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "lst(x1) where x1 = 'a, lst(x1) | lst(tuple0)",
        "lst(any, 'b & lst(x1)) where x1 = tuple0 | (any, lst(x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "lst(x1) | lst(tuple0) | 'b where x1 = 'a, lst(x1) | lst(tuple0)"
      ],
      [
        "lst(x1) | lst(tuple0) | 'b where x1 = 'a, lst(x1) | lst(tuple0)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "lst(x1) where x1 = 'a, lst(x1) | lst(tuple0)",
        "lst('b, x1) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b -> bool(true | false) | (bool(true), 'a)", "'b -> 'c" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "bool(true | false) | (bool(true), 'a) | 'b" ],
      [ "bool(true | false) | (bool(true), 'a) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "bool(true | false) | (bool(true), 'a)",
        "bool(false) | bool(true) | (bool(true), any)"
      ]
    ],
    "prio": [ "'a" ]
  },
  { "vars": [], "mono": [], "constr": [ [ "bool(false)", "~bool(false)" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b -> bool(true | false) | (bool(true), 'a)", "any" ],
      [ "x1 where x1 = lst('b, x1) | lst(tuple0)", "any" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "(('d -> bool(true | false) | (bool(true), 'c), x3) -> x2) & (('d -> bool(false) | (bool(true), 'c), x3) -> x1) where x1 = lst(tuple0 | ('c, x1)) and x2 = lst(tuple0 | ('d | 'c, x2)) and x3 = lst(tuple0 | ('d, x3))",
        "('b -> bool(true | false) | (bool(true), 'a), x1) -> 'e where x1 = lst('b, x1) | lst(tuple0)"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'a" ], [ "'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b", "'d" ],
    "constr": [
      [ "'d", "lst(x1) | 'd where x1 = tuple0 | ('c | 'b | 'a, lst(x1))" ],
      [ "lst(x1) | 'd where x1 = tuple0 | ('c | 'b | 'a, lst(x1))", "'d" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "x1 where x1 = lst(tuple0 | ('b | 'a, x1))",
        "x1 where x1 = lst('b | 'a, x1) | lst(tuple0)"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  { "vars": [], "mono": [], "constr": [ [ "bool(false)", "bool(false)" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "bool(true)", "~bool(false)" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "bool(true)", "bool(false)" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "bool(true)", "~bool(true)" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b -> bool(true | false) | (bool(true), 'a)", "any" ],
      [ "x1 where x1 = lst('b, x1) | lst(tuple0)", "any" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "(('d -> bool(true | false) | (bool(true), 'c), x3) -> x1) & (('d -> bool(false) | (bool(true), 'c), x3) -> x2) where x1 = lst(tuple0 | ('d | 'c, x1)) and x2 = lst(tuple0 | ('c, x2)) and x3 = lst(tuple0 | ('d, x3))",
        "('b -> bool(true | false) | (bool(true), 'a), x1) -> 'e where x1 = lst('b, x1) | lst(tuple0)"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'a" ], [ "'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b", "'d" ],
    "constr": [
      [ "'d", "lst(x1) | 'd where x1 = tuple0 | ('c | 'b | 'a, lst(x1))" ],
      [ "lst(x1) | 'd where x1 = tuple0 | ('c | 'b | 'a, lst(x1))", "'d" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "any" ],
      [
        "x1 where x1 = lst(tuple0 | ('b | 'a, x1))",
        "x1 where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "lst('b, x1) where x1 = lst(tuple0 | ('b | 'a, x1))",
        "x1 where x1 = lst('b | 'a, x1) | lst(tuple0)"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  { "vars": [], "mono": [], "constr": [ [ "bool(true)", "bool(true)" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "bool(true), 'a", "~bool(false)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "bool(true), 'a", "bool(false)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "bool(true), 'a", "~bool(true)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "bool(true), 'a", "bool(true)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [ [ "bool(true), 'a", "any, 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b -> bool(true | false) | (bool(true), 'a)", "any" ],
      [ "x1 where x1 = lst('b, x1) | lst(tuple0)", "any" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "(('d -> bool(true | false) | (bool(true), 'c), x2) -> x3) & (('d -> bool(false) | (bool(true), 'c), x2) -> x1) where x1 = lst(tuple0 | ('c, x1)) and x2 = lst(tuple0 | ('d, x2)) and x3 = lst(tuple0 | ('d | 'c, x3))",
        "('b -> bool(true | false) | (bool(true), 'a), x1) -> 'e where x1 = lst('b, x1) | lst(tuple0)"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'a" ], [ "'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b", "'d" ],
    "constr": [
      [ "'d", "lst(x1) | 'd where x1 = tuple0 | ('c | 'b | 'a, lst(x1))" ],
      [ "lst(x1) | 'd where x1 = tuple0 | ('c | 'b | 'a, lst(x1))", "'d" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'a", "any" ],
      [
        "x1 where x1 = lst(tuple0 | ('b | 'a, x1))",
        "x1 where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "lst('a, x1) where x1 = lst(tuple0 | ('b | 'a, x1))",
        "x1 where x1 = lst('b | 'a, x1) | lst(tuple0)"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "('b -> bool(true | false) | (bool(true), 'a), x1) & (any, lst(tuple0)) where x1 = lst('b, x1) | lst(tuple0)",
        "tuple2"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "('b -> bool(true | false) | (bool(true), 'a), x1) & (any, lst(tuple0)) where x1 = lst('b, x1) | lst(tuple0)",
        "any, 'c"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "lst(tuple0) | 'a" ], [ "lst(tuple0) | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "('b -> bool(true | false) | (bool(true), 'a), x1) & (any, lst(tuple0)) where x1 = lst('b, x1) | lst(tuple0)",
        "'c, any"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "('b -> bool(true | false) | (bool(true), 'a)) | 'c" ],
      [ "('b -> bool(true | false) | (bool(true), 'a)) | 'c", "'c" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "lst(tuple0)", "~lst(tuple0)" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "lst(tuple0)", "x1 where x1 = lst('b | 'a, x1) | lst(tuple0)" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  { "vars": [], "mono": [], "constr": [ [ "lst(tuple0)", "lst(tuple0)" ] ] },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b -> bool(false) | (bool(true), 'a)", "'c -> ~bool(false)" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b -> bool(false) | (bool(true), 'a)", "'c -> bool(false)" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b -> bool(false) | (bool(true), 'a)", "'c -> ~bool(true)" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b -> bool(false) | (bool(true), 'a)", "'c -> bool(true)" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "('b -> bool(false) | (bool(true), 'a), x1) \\ (any, lst(tuple0)) where x1 = lst('b, x1) | lst(tuple0)",
        "tuple2"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "('b -> bool(false) | (bool(true), 'a), x1) \\ (any, lst(tuple0)) where x1 = lst('b, x1) | lst(tuple0)",
        "any, 'c"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "lst(x1) | 'b where x1 = 'a, lst(x1) | lst(tuple0)" ],
      [ "lst(x1) | 'b where x1 = 'a, lst(x1) | lst(tuple0)", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "('b -> bool(false) | (bool(true), 'a), x1) \\ (any, lst(tuple0)) where x1 = lst('b, x1) | lst(tuple0)",
        "'c, any"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "('b -> bool(false) | (bool(true), 'a)) | 'c" ],
      [ "('b -> bool(false) | (bool(true), 'a)) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "lst(x1) where x1 = 'a, lst(x1) | lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "lst(x1) where x1 = 'a, lst(x1) | lst(tuple0)", "~lst(tuple0)" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "lst(x1) where x1 = 'a, lst(x1) | lst(tuple0)", "lst(tuple0)" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "lst(x1) where x1 = 'a, lst(x1) | lst(tuple0)",
        "lst(any, 'b & lst(x1)) where x1 = tuple0 | (any, lst(x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "lst(x1) | lst(tuple0) | 'b where x1 = 'a, lst(x1) | lst(tuple0)"
      ],
      [
        "lst(x1) | lst(tuple0) | 'b where x1 = 'a, lst(x1) | lst(tuple0)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "lst(x1) where x1 = 'a, lst(x1) | lst(tuple0)",
        "lst('b, x1) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b -> bool(false) | (bool(true), 'a)", "'b -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "bool(false) | (bool(true), 'a) | 'b" ],
      [ "bool(false) | (bool(true), 'a) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "bool(false) | (bool(true), 'a)",
        "bool(false) | bool(true) | (bool(true), any)"
      ]
    ],
    "prio": [ "'a" ]
  },
  { "vars": [], "mono": [], "constr": [ [ "bool(false)", "~bool(false)" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b -> bool(false) | (bool(true), 'a)", "any" ],
      [ "x1 where x1 = lst('b, x1) | lst(tuple0)", "any" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "(('d -> bool(true | false) | (bool(true), 'c), x1) -> x2) & (('d -> bool(false) | (bool(true), 'c), x1) -> x3) where x1 = lst(tuple0 | ('d, x1)) and x2 = lst(tuple0 | ('d | 'c, x2)) and x3 = lst(tuple0 | ('c, x3))",
        "('b -> bool(false) | (bool(true), 'a), x1) -> 'e where x1 = lst('b, x1) | lst(tuple0)"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'a" ], [ "'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [ "'c", "lst(x1) | 'c where x1 = tuple0 | ('b | 'a, lst(x1))" ],
      [ "lst(x1) | 'c where x1 = tuple0 | ('b | 'a, lst(x1))", "'c" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 where x1 = lst(tuple0 | ('a, x1))",
        "x1 where x1 = lst('a, x1) | lst(tuple0)"
      ]
    ],
    "prio": [ "'a" ]
  },
  { "vars": [], "mono": [], "constr": [ [ "bool(false)", "bool(false)" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "bool(true), 'a", "~bool(false)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "bool(true), 'a", "bool(false)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "bool(true), 'a", "~bool(true)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "bool(true), 'a", "bool(true)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [ [ "bool(true), 'a", "any, 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b -> bool(false) | (bool(true), 'a)", "any" ],
      [ "x1 where x1 = lst('b, x1) | lst(tuple0)", "any" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "(('d -> bool(true | false) | (bool(true), 'c), x1) -> x2) & (('d -> bool(false) | (bool(true), 'c), x1) -> x3) where x1 = lst(tuple0 | ('d, x1)) and x2 = lst(tuple0 | ('d | 'c, x2)) and x3 = lst(tuple0 | ('c, x3))",
        "('b -> bool(false) | (bool(true), 'a), x1) -> 'e where x1 = lst('b, x1) | lst(tuple0)"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'a" ], [ "'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [ "'c", "lst(x1) | 'c where x1 = tuple0 | ('b | 'a, lst(x1))" ],
      [ "lst(x1) | 'c where x1 = tuple0 | ('b | 'a, lst(x1))", "'c" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "any" ],
      [
        "x1 where x1 = lst(tuple0 | ('a, x1))",
        "x1 where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "lst('a, x1) where x1 = lst(tuple0 | ('a, x1))",
        "x1 where x1 = lst('a, x1) | lst(tuple0)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "('b -> bool(false) | (bool(true), 'a), x1) & (any, lst(tuple0)) where x1 = lst('b, x1) | lst(tuple0)",
        "tuple2"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "('b -> bool(false) | (bool(true), 'a), x1) & (any, lst(tuple0)) where x1 = lst('b, x1) | lst(tuple0)",
        "any, 'c"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "lst(tuple0) | 'a" ], [ "lst(tuple0) | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "('b -> bool(false) | (bool(true), 'a), x1) & (any, lst(tuple0)) where x1 = lst('b, x1) | lst(tuple0)",
        "'c, any"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "('b -> bool(false) | (bool(true), 'a)) | 'c" ],
      [ "('b -> bool(false) | (bool(true), 'a)) | 'c", "'c" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "lst(tuple0)", "~lst(tuple0)" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "lst(tuple0)", "x1 where x1 = lst('a, x1) | lst(tuple0)" ]
    ],
    "prio": [ "'a" ]
  },
  { "vars": [], "mono": [], "constr": [ [ "lst(tuple0)", "lst(tuple0)" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "{ f :? 'a ; proto :? x1 ..} & { f : any ; proto : any ..} where x1 = { f :? 'a ; proto :? x1 ..}",
        "any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "{ f :? 'a ; proto :? x1 ..} & { f : any ; proto : any ..} where x1 = { f :? 'a ; proto :? x1 ..}",
        "~{ f : any ..}"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "{ f :? 'a ; proto :? x1 ..} & { f : any ; proto : any ..} where x1 = { f :? 'a ; proto :? x1 ..}",
        "{ f : 'b ..}"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "{ f :? 'a ; proto :? x1 ..} & { f : any ; proto : any ..} where x1 = { f :? 'a ; proto :? x1 ..}",
        "{ f : any ..}"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "{ f :? 'a ; proto :? x1 ..} & { f : any ..} & ~{ f : any ; proto : any ..} where x1 = { f :? 'a ; proto :? x1 ..}",
        "any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "{ f :? 'a ; proto :? x1 ..} & { f : any ..} & ~{ f : any ; proto : any ..} where x1 = { f :? 'a ; proto :? x1 ..}",
        "~{ f : any ..}"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "{ f :? 'a ; proto :? x1 ..} & { f : any ..} & ~{ f : any ; proto : any ..} where x1 = { f :? 'a ; proto :? x1 ..}",
        "{ f : 'b ..}"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "{ f :? 'a ; proto :? x1 ..} & { f : any ..} & ~{ f : any ; proto : any ..} where x1 = { f :? 'a ; proto :? x1 ..}",
        "{ f : any ..}"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "{ f :? 'a ; proto :? x1 ..} & { f :? empty ; proto : any ..} where x1 = { f :? 'a ; proto :? x1 ..}",
        "any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "{ f :? 'a ; proto :? x1 ..} & { f :? empty ; proto : any ..} where x1 = { f :? 'a ; proto :? x1 ..}",
        "~{ f : any ..}"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "{ f :? 'a ; proto :? x1 ..} & { f :? empty ; proto : any ..} where x1 = { f :? 'a ; proto :? x1 ..}",
        "{ f : any ..}"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "{ f :? 'a ; proto :? x1 ..} & { f :? empty ; proto : any ..} where x1 = { f :? 'a ; proto :? x1 ..}",
        "~{ proto : any ..}"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "{ f :? 'a ; proto :? x1 ..} & { f :? empty ; proto : any ..} where x1 = { f :? 'a ; proto :? x1 ..}",
        "{ proto : 'b ..}"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "{ f :? 'a ; proto :? x1 ..} | 'b where x1 = { f :? 'a ; proto :? x1 ..}"
      ],
      [
        "{ f :? 'a ; proto :? x1 ..} | 'b where x1 = { f :? 'a ; proto :? x1 ..}",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [ [ "'b", "x1 -> 'c where x1 = { f :? 'a ; proto :? x1 ..}" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "'b & (x1 -> 'c) where x1 = { f :? 'a ; proto :? x1 ..}" ],
      [ "'b & (x1 -> 'c) where x1 = { f :? 'a ; proto :? x1 ..}", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "{ f :? 'a ; proto :? x1 ..} & { f :? empty ; proto : any ..} where x1 = { f :? 'a ; proto :? x1 ..}",
        "{ proto : any ..}"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "record & ~{ f :? empty ; proto : any ..} & ~{ f : any ..}", "any" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "record & ~{ f :? empty ; proto : any ..} & ~{ f : any ..}",
        "~{ f : any ..}"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "record & ~{ f :? empty ; proto : any ..} & ~{ f : any ..}",
        "{ f : any ..}"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "record & ~{ f :? empty ; proto : any ..} & ~{ f : any ..}",
        "~{ proto : any ..}"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "record & ~{ f :? empty ; proto : any ..} & ~{ f : any ..}",
        "{ proto : any ..}"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x1 -> tuple0 | 'c | 'a where x1 = { f :? 'a ; proto :? x1 ..}",
        "'b & (x1 -> 'c) where x1 = { f :? 'a ; proto :? x1 ..}"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x1 -> tuple0 | 'c | 'a) | 'b where x1 = { f :? 'a ; proto :? x1 ..}"
      ],
      [
        "(x1 -> tuple0 | 'c | 'a) | 'b where x1 = { f :? 'a ; proto :? x1 ..}",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "tuple0 | 'b | 'a" ], [ "tuple0 | 'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "lst(x4) \\ lst(x1, x3) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = lst(tuple0 | (any, x3)) and x4 = lst(x4) | lst(tuple0) | 'a \\ (lst(any, x2) \\ lst(x4)), lst(x4) | lst(tuple0)",
        "any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "lst(x3) \\ lst(x1, x4) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = lst(x3) | lst(tuple0) | 'a \\ (lst(any, x2) \\ lst(x3)), lst(x3) | lst(tuple0) and x4 = lst(tuple0 | (any, x4))",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "lst(x4) \\ lst(x1, x3) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = lst(tuple0 | (any, x3)) and x4 = lst(x4) | lst(tuple0) | 'a \\ (lst(any, x2) \\ lst(x4)), lst(x4) | lst(tuple0)",
        "~lst(tuple0)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "lst(x4) \\ lst(x1, x2) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = lst(tuple0 | (any, x3)) and x4 = lst(x4) | lst(tuple0) | 'a \\ (lst(any, x3) \\ lst(x4)), lst(x4) | lst(tuple0)",
        "lst(tuple0)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "lst(x4) \\ lst(x1, x2) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = lst(tuple0 | (any, x3)) and x4 = lst(x4) | lst(tuple0) | 'a \\ (lst(any, x3) \\ lst(x4)), lst(x4) | lst(tuple0)",
        "~lst(x1, x2) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "lst(x4) \\ lst(x1, x2) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = lst(tuple0 | (any, x3)) and x4 = lst(x4) | lst(tuple0) | 'a \\ (lst(any, x3) \\ lst(x4)), lst(x4) | lst(tuple0)",
        "lst(x1, x2) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "lst(x4) \\ lst(x1, x2) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = lst(tuple0 | (any, x3)) and x4 = lst(x4) | lst(tuple0) | 'a \\ (lst(any, x3) \\ lst(x4)), lst(x4) | lst(tuple0)",
        "lst(any, 'b & lst(x1)) where x1 = tuple0 | (any, lst(x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "lst(x2) | lst(tuple0) | 'b where x1 = lst(tuple0 | (any, x1)) and x2 = lst(x2) | lst(tuple0) | 'a \\ (lst(any, x1) \\ lst(x2)), lst(x2) | lst(tuple0)"
      ],
      [
        "lst(x2) | lst(tuple0) | 'b where x1 = lst(tuple0 | (any, x1)) and x2 = lst(x2) | lst(tuple0) | 'a \\ (lst(any, x1) \\ lst(x2)), lst(x2) | lst(tuple0)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "lst(x3) \\ lst(x1, x4) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = lst(x3) | lst(tuple0) | 'a \\ (lst(any, x2) \\ lst(x3)), lst(x3) | lst(tuple0) and x4 = lst(tuple0 | (any, x4))",
        "lst('b, x1) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "'a \\ lst(x1) | 'b where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a \\ lst(x1) | 'b where x1 = tuple0 | (any, lst(x1))", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'b",
        "x3 -> 'c where x1 = lst(tuple0 | (any, x1)) and x2 = lst(x2) | lst(tuple0) | 'a \\ (lst(any, x1) \\ lst(x2)), x3 and x3 = lst(x2) | lst(tuple0)"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "'b & (x3 -> 'c) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(x2) | lst(tuple0) | 'a \\ (lst(any, x1) \\ lst(x2)), x3 and x3 = lst(x2) | lst(tuple0)"
      ],
      [
        "'b & (x3 -> 'c) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(x2) | lst(tuple0) | 'a \\ (lst(any, x1) \\ lst(x2)), x3 and x3 = lst(x2) | lst(tuple0)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))", "any" ],
      [ "'b", "x1 where x1 = lst(tuple0 | (any, x1))" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a & lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "lst(tuple0)", "any" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "lst(tuple0)", "~lst(tuple0)" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "lst(tuple0)", "lst(tuple0)" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "lst(x4) & lst(x1, x2) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = lst(tuple0 | (any, x3)) and x4 = lst(x4) | lst(tuple0) | 'a \\ (lst(any, x3) \\ lst(x4)), lst(x4) | lst(tuple0)",
        "any"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "lst(x4) & lst(x1, x2) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = lst(tuple0 | (any, x3)) and x4 = lst(x4) | lst(tuple0) | 'a \\ (lst(any, x3) \\ lst(x4)), lst(x4) | lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "lst(x4) & lst(x1, x2) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = lst(tuple0 | (any, x3)) and x4 = lst(x4) | lst(tuple0) | 'a \\ (lst(any, x3) \\ lst(x4)), lst(x4) | lst(tuple0)",
        "~lst(tuple0)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "lst(x4) & lst(x1, x2) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = lst(tuple0 | (any, x3)) and x4 = lst(x4) | lst(tuple0) | 'a \\ (lst(any, x3) \\ lst(x4)), lst(x4) | lst(tuple0)",
        "lst(tuple0)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "lst(x4) & lst(x1, x2) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = lst(tuple0 | (any, x3)) and x4 = lst(x4) | lst(tuple0) | 'a \\ (lst(any, x3) \\ lst(x4)), lst(x4) | lst(tuple0)",
        "~lst(x1, x2) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "lst(x3) & lst(x1, x4) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = lst(x3) | lst(tuple0) | 'a \\ (lst(any, x2) \\ lst(x3)), lst(x3) | lst(tuple0) and x4 = lst(tuple0 | (any, x4))",
        "lst(any, 'b & lst(x1)) where x1 = tuple0 | (any, lst(x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "lst(x2) | lst(tuple0) | 'b where x1 = lst(tuple0 | (any, x1)) and x2 = lst(x2) | lst(tuple0) | 'a \\ (lst(any, x1) \\ lst(x2)), lst(x2) | lst(tuple0)"
      ],
      [
        "lst(x2) | lst(tuple0) | 'b where x1 = lst(tuple0 | (any, x1)) and x2 = lst(x2) | lst(tuple0) | 'a \\ (lst(any, x1) \\ lst(x2)), lst(x2) | lst(tuple0)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "lst(x4) & lst(x1, x2) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = lst(tuple0 | (any, x3)) and x4 = lst(x4) | lst(tuple0) | 'a \\ (lst(any, x3) \\ lst(x4)), lst(x4) | lst(tuple0)",
        "lst('b, x1) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "lst(x2) \\ lst(any, x3) | lst(x1) | 'b where x1 = lst(x1) | lst(tuple0) | 'a \\ (lst(any, x3) \\ lst(x1)), lst(x1) | lst(tuple0) and x2 = tuple0 | (any, lst(x2)) and x3 = lst(tuple0 | (any, x3))"
      ],
      [
        "lst(x1) \\ lst(any, x2) | lst(x3) | 'b where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = lst(x3) | lst(tuple0) | 'a \\ (lst(any, x2) \\ lst(x3)), lst(x3) | lst(tuple0)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'b & (x4 -> 'c & lst(x2)) where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = lst(x3) | lst(tuple0) | 'a \\ (lst(any, x1) \\ lst(x3)), x4 and x4 = lst(x3) | lst(tuple0)",
        "lst(x1) \\ lst(any, x3) | lst(x2) -> 'd where x1 = tuple0 | (any, lst(x1)) and x2 = lst(x2) | lst(tuple0) | 'a \\ (lst(any, x3) \\ lst(x2)), lst(x2) | lst(tuple0) and x3 = lst(tuple0 | (any, x3))"
      ]
    ],
    "prio": [ "'a", "'b", "'c" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [
        "'b",
        "'b & (~(x7 -> 'c & lst(x3)) | (lst(x4) \\ lst(any, x5) | lst(x6) -> 'd)) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(x2) | lst(tuple0) | 'a \\ (lst(any, x1) \\ lst(x2)), x7 and x3 = tuple0 | (any, lst(x3)) and x4 = tuple0 | (any, lst(x4)) and x5 = lst(tuple0 | (any, x5)) and x6 = lst(x6) | lst(tuple0) | 'a \\ (lst(any, x5) \\ lst(x6)), lst(x6) | lst(tuple0) and x7 = lst(x2) | lst(tuple0)"
      ],
      [
        "'b & (~(x4 -> 'c & lst(x3)) | (lst(x5) \\ lst(any, x6) | lst(x7) -> 'd)) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(x2) | lst(tuple0) | 'a \\ (lst(any, x1) \\ lst(x2)), x4 and x3 = tuple0 | (any, lst(x3)) and x4 = lst(x2) | lst(tuple0) and x5 = tuple0 | (any, lst(x5)) and x6 = lst(tuple0 | (any, x6)) and x7 = lst(x7) | lst(tuple0) | 'a \\ (lst(any, x6) \\ lst(x7)), lst(x7) | lst(tuple0)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'b & (x4 -> 'c & lst(x3)) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(x2) | lst(tuple0) | 'a \\ (lst(any, x1) \\ lst(x2)), x4 and x3 = tuple0 | (any, lst(x3)) and x4 = lst(x2) | lst(tuple0)",
        "x3 -> 'd where x1 = lst(tuple0 | (any, x1)) and x2 = lst(x2) | lst(tuple0) | 'a \\ (lst(any, x1) \\ lst(x2)), x3 and x3 = lst(x2) | lst(tuple0)"
      ]
    ],
    "prio": [ "'a", "'b", "'c" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [
        "'b",
        "'b & (~(x7 -> 'c & lst(x4)) | (x3 -> 'd)) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(x2) | lst(tuple0) | 'a \\ (lst(any, x1) \\ lst(x2)), x3 and x3 = lst(x2) | lst(tuple0) and x4 = tuple0 | (any, lst(x4)) and x5 = lst(tuple0 | (any, x5)) and x6 = lst(x6) | lst(tuple0) | 'a \\ (lst(any, x5) \\ lst(x6)), x7 and x7 = lst(x6) | lst(tuple0)"
      ],
      [
        "'b & (~(x6 -> 'c & lst(x2)) | (x7 -> 'd)) where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = lst(tuple0 | (any, x3)) and x4 = lst(x4) | lst(tuple0) | 'a \\ (lst(any, x3) \\ lst(x4)), x7 and x5 = lst(x5) | lst(tuple0) | 'a \\ (lst(any, x1) \\ lst(x5)), x6 and x6 = lst(x5) | lst(tuple0) and x7 = lst(x4) | lst(tuple0)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "'a & lst(x1) where x1 = tuple0 | (any, lst(x1))", "any" ],
      [ "'a & lst(x1) where x1 = tuple0 | (any, lst(x1))", "any" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [
        "(x2, x3) -> x1 where x1 = lst(tuple0 | ('b, x1) | ('c, x3)) and x2 = lst(tuple0 | ('b, x2)) and x3 = lst(tuple0 | ('c, x3))",
        "('a & lst(x1), 'a & lst(x1)) -> 'd where x1 = tuple0 | (any, lst(x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(x2) \\ lst(x3) | lst(x2) \\ lst(x1)) where x1 = tuple0 | ('b, lst(x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = tuple0 | ('c, lst(x3))"
      ],
      [
        "'a \\ (lst(x2) \\ lst(x3) | lst(x2) \\ lst(x1)) where x1 = tuple0 | ('b, lst(x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = tuple0 | ('c, lst(x3))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "lst(x2) | 'c where x1 = lst(tuple0 | ('b, x1)) and x2 = tuple0 | ('a, lst(x2)) | ('b, x1)"
      ],
      [
        "lst(x2) | 'c where x1 = lst(tuple0 | ('b, x1)) and x2 = tuple0 | ('a, lst(x2)) | ('b, x1)",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "x2 where x1 = lst(tuple0 | ('b, x1)) and x2 = lst(tuple0 | ('a, x2) | ('b, x1))",
        "empty"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "lst(x3) & lst(x1, x4) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = lst(x3) | lst(tuple0) | 'a \\ (lst(any, x2) \\ lst(x3)), lst(x3) | lst(tuple0) and x4 = lst(tuple0 | (any, x4))",
        "lst(x1, x2) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x3 -> lst(tuple0) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(x2) | lst(tuple0) | 'a \\ (lst(any, x1) \\ lst(x2)), x3 and x3 = lst(x2) | lst(tuple0)",
        "'b & (x3 -> empty) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(x2) | lst(tuple0) | 'a \\ (lst(any, x1) \\ lst(x2)), x3 and x3 = lst(x2) | lst(tuple0)"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "lst(x4) & lst(x1, x2) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = lst(tuple0 | (any, x3)) and x4 = lst(x4) | lst(tuple0) | 'a \\ (lst(any, x3) \\ lst(x4)), lst(x4) | lst(tuple0)",
        "lst(x1, x2) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "x8 -> lst('a \\ lst(x3), 'c & lst(x2) & lst(x4)) | lst(x5) where x1 = lst(tuple0 | ('e, x1)) and x2 = tuple0 | ('d, lst(x2)) and x3 = tuple0 | (any, lst(x3)) and x4 = tuple0 | ('e, lst(x4)) and x5 = tuple0 | ('d, lst(x5)) | ('e, x1) and x6 = lst(tuple0 | (any, x6)) and x7 = lst(x7) | lst(tuple0) | 'a \\ (lst(any, x6) \\ lst(x7)), x8 and x8 = lst(x7) | lst(tuple0)",
        "'b & (x4 -> 'c & lst(x2) & lst(x5)) where x1 = lst(tuple0 | (any, x1)) and x2 = tuple0 | ('d, lst(x2)) and x3 = lst(x3) | lst(tuple0) | 'a \\ (lst(any, x1) \\ lst(x3)), x4 and x4 = lst(x3) | lst(tuple0) and x5 = tuple0 | ('e, lst(x5))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "(x4 -> lst(x5)) | 'b where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = lst(x3) | lst(tuple0) | 'a \\ (lst(any, x2) \\ lst(x3)), x4 and x4 = lst(x3) | lst(tuple0) and x5 = tuple0 | ('a \\ lst(x1) | 'c, lst(x5))"
      ],
      [
        "(x5 -> lst(x4)) | 'b where x1 = lst(tuple0 | (any, x1)) and x2 = lst(x2) | lst(tuple0) | 'a \\ (lst(any, x1) \\ lst(x2)), x5 and x3 = tuple0 | (any, lst(x3)) and x4 = tuple0 | ('a \\ lst(x3) | 'c, lst(x4)) and x5 = lst(x2) | lst(tuple0)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b",
        "lst(x2) | 'b where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | ('a \\ lst(x1) | 'c, lst(x2))"
      ],
      [
        "lst(x2) | 'b where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | ('a \\ lst(x1) | 'c, lst(x2))",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "'a \\ lst(x1) | 'c where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a \\ lst(x1) | 'c where x1 = tuple0 | (any, lst(x1))", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "'a \\ lst(x1) | 'b where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a \\ lst(x1) | 'b where x1 = tuple0 | (any, lst(x1))", "'b" ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "str(_const), (0..)", "any" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "str(_const), (0..)",
        "(str(_const), any) | (str(_uminus), any) | (str(_add), tuple2)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "str(_const), (0..)", "~(str(_add), tuple2)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "str(_const), (0..)", "str(_add), tuple2" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "str(_const), (0..)", "~(str(_uminus), any)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "str(_const), (0..)", "str(_uminus), any" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "str(_const), (0..)", "any, 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "(0..) | 'a" ], [ "(0..) | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "str(_add), (x1, x1) where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))",
        "any"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "str(_add), (x1, x1) where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))",
        "(str(_const), any) | (str(_uminus), any) | (str(_add), tuple2)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "str(_add), (x1, x1) where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))",
        "~(str(_add), tuple2)"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "str(_add), (x1, x1) where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))",
        "any, 'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "(x1, x1) | 'a where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))"
      ],
      [
        "(x1, x1) | 'a where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "x1, x1 where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))",
        "any, 'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "(str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..)) | 'a where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))"
      ],
      [
        "(str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..)) | 'a where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "str(_add), (x1, x1) where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))",
        "any, 'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "(x1, x1) | 'a where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))"
      ],
      [
        "(x1, x1) | 'a where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "x1, x1 where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))",
        "'a, any"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "(str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..)) | 'a where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))"
      ],
      [
        "(str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..)) | 'a where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "'a",
        "x1 -> 'b where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a & (x1 -> 'b) where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))"
      ],
      [
        "'a & (x1 -> 'b) where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "'a & (x1 -> 'b) where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))",
        "x1 -> 'c where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'a",
        "'a & (~(x1 -> 'b) | (x2 -> 'c)) where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..)) and x2 = (str(_uminus), x2) | (str(_add), (x2, x2)) | (str(_const), (0..))"
      ],
      [
        "'a & (~(x1 -> 'b) | (x2 -> 'c)) where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..)) and x2 = (str(_uminus), x2) | (str(_add), (x2, x2)) | (str(_const), (0..))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a", "any" ], [ "'a", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "('a, 'a) -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "empty" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "str(_add), (x1, x1) where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))",
        "str(_add), tuple2"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "str(_uminus), x1 where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))",
        "any"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "str(_uminus), x1 where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))",
        "(str(_const), any) | (str(_uminus), any) | (str(_add), tuple2)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "str(_uminus), x1 where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))",
        "~(str(_add), tuple2)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "str(_uminus), x1 where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))",
        "str(_add), tuple2"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "str(_uminus), x1 where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))",
        "~(str(_uminus), any)"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "str(_uminus), x1 where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))",
        "any, 'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "(str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..)) | 'a where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))"
      ],
      [
        "(str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..)) | 'a where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "'a & (x1 -> empty) where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))",
        "x1 -> 'b where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "0", "any" ], [ "empty", "any" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "(int, int) -> int", "arrow" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "str(_uminus), x1 where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))",
        "str(_uminus), any"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "x1 -> (0..) where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))",
        "'a & (x1 -> empty) where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "str(_add), (x1, x1) where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))",
        "str(_add), tuple2"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "str(_uminus), x1 where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))",
        "any"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "str(_uminus), x1 where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))",
        "(str(_const), any) | (str(_uminus), any) | (str(_add), tuple2)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "str(_uminus), x1 where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))",
        "~(str(_add), tuple2)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "str(_uminus), x1 where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))",
        "str(_add), tuple2"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "str(_uminus), x1 where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))",
        "~(str(_uminus), any)"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "str(_uminus), x1 where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))",
        "any, 'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "(str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..)) | 'a where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))"
      ],
      [
        "(str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..)) | 'a where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "'a & (x1 -> 'b & int) where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))",
        "x1 -> 'c where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'a",
        "'a & (~(x1 -> 'b & int) | (x2 -> 'c)) where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..)) and x2 = (str(_uminus), x2) | (str(_add), (x2, x2)) | (str(_const), (0..))"
      ],
      [
        "'a & (~(x1 -> 'b & int) | (x2 -> 'c)) where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..)) and x2 = (str(_uminus), x2) | (str(_add), (x2, x2)) | (str(_const), (0..))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "0", "any" ], [ "'a & int", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(0, 'a & int) -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ int" ], [ "'a \\ int", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "empty" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "str(_uminus), x1 where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))",
        "str(_uminus), any"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "x1 -> int where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))",
        "'a & (x1 -> empty) where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "str(_uminus), x1 where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))",
        "str(_uminus), any"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "x1 -> int where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))",
        "'a & (x1 -> 'b & int) where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "(x1 -> int) | 'a where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))"
      ],
      [
        "(x1 -> int) | 'a where x1 = (str(_uminus), x1) | (str(_add), (x1, x1)) | (str(_const), (0..))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> bool(true | false)", "'a -> ~bool(true)" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'b", "any" ], [ "'a", "any" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "(int, int) -> bool(true | false)", "('b, 'a) -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "bool(true | false)", "~bool(true)" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a", "any" ], [ "'b & int", "any" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "('a, 'b & int) -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ int" ], [ "'a \\ int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "empty" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'b", "any" ], [ "'a & int", "any" ], [ "int", "any" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [
      [
        "(__array({ _0 :? 'd }), int, 'd) | (__dict({ _0 :? 'c ; _1 :? 'd }), 'c, 'd) -> tuple0",
        "('b, 'a & int, int) -> 'e"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'a & int | 'b" ], [ "'a & int | 'b", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "__dict({ _0 :? 'a & int | 'c ; _1 :? int | 'd })" ],
      [ "__dict({ _0 :? 'a & int | 'c ; _1 :? int | 'd })", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'a & int | 'b" ], [ "'a & int | 'b", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "__array({ _0 :? int | 'b })" ],
      [ "__array({ _0 :? int | 'b })", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'a & int | 'b" ], [ "'a & int | 'b", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "__array({ _0 :? int | 'b })" ],
      [ "__array({ _0 :? int | 'b })", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ int" ], [ "'a \\ int", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "tuple0", "empty" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "tuple0", "empty" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "tuple0", "tuple0" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "empty", "tuple0" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "empty", "tuple0" ] ] },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [
      [ "'b", "__dict({ _0 :? 'a & int | 'c ; _1 :? int | 'd }) -> 'e" ]
    ],
    "prio": [ "'a", "'b", "'c", "'d" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'b", "'c", "'d" ],
    "constr": [
      [ "'b", "__dict({ _0 :? 'a & int | 'c ; _1 :? int | 'd }) -> 'e" ],
      [ "__dict({ _0 :? 'a & int | 'c ; _1 :? int | 'd }) -> 'e", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & int", "any" ], [ "1", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "('a & int, 1) -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ int" ], [ "'a \\ int", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "empty" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a", "int -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & (int -> 'b)" ], [ "'a & (int -> 'b)", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'b", "'a & int -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "'b & ('a & int -> 'c)" ], [ "'b & ('a & int -> 'c)", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'b", "'a & int -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "'b & ('a & int -> 'c)" ], [ "'b & ('a & int -> 'c)", "'b" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "bool(true | false)", "bool(true)" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g", "'h", "'i" ],
    "mono": [],
    "constr": [
      [
        "__dict({ _0 :? 'c & int | 'd ; _1 :? int | 'e }) -> 'f & (int -> 'g & ('b & int -> 'h & ('a & int -> 'i)))",
        "__array({ _0 :? int | 'e }) -> 'f"
      ]
    ],
    "prio": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g", "'h", "'i" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g", "'h", "'i" ],
    "mono": [],
    "constr": [
      [
        "__dict({ _0 :? 'c & int | 'd ; _1 :? int | 'e }) -> 'c & int -> 'b & int -> 'a & int -> tuple0",
        "__dict({ _0 :? 'c & int | 'd ; _1 :? int | 'e }) -> 'f & (int -> 'g & ('b & int -> 'h & ('a & int -> 'i)))"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ int" ], [ "'a \\ int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "(int -> 'a & int -> arrow) | 'b" ],
      [ "(int -> 'a & int -> arrow) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "('a & int -> arrow) | 'b" ],
      [ "('a & int -> arrow) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "arrow | 'a" ], [ "arrow | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ int" ], [ "'a \\ int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "(int -> arrow) | 'a" ], [ "(int -> arrow) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "arrow | 'a" ], [ "arrow | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'c" ],
    "constr": [
      [ "'c", "(int -> 'b & int -> 'a & int -> tuple0) | 'c" ],
      [ "(int -> 'b & int -> 'a & int -> tuple0) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'c" ],
    "constr": [
      [ "'c", "('b & int -> 'a & int -> tuple0) | 'c" ],
      [ "('b & int -> 'a & int -> tuple0) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "('a & int -> tuple0) | 'b" ],
      [ "('a & int -> tuple0) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "__dict({ _0 :? int | 'a ; _1 :? int | 'b }) -> int -> arrow",
        "__dict({ _0 :? int | 'a ; _1 :? int | 'b }) -> int -> int -> int -> tuple0"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "__dict({ _0 :? int | 'a ; _1 :? int | 'b }) -> int -> int -> arrow",
        "__dict({ _0 :? int | 'a ; _1 :? int | 'b }) -> int -> int -> int -> tuple0"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "__dict({ _0 :? int | 'a ; _1 :? int | 'b }) -> int -> int -> int -> tuple0",
        "__dict({ _0 :? int | 'a ; _1 :? int | 'b }) -> int -> arrow"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "__dict({ _0 :? int | 'a ; _1 :? int | 'b }) -> int -> int -> int -> tuple0",
        "__dict({ _0 :? int | 'a ; _1 :? int | 'b }) -> int -> int -> arrow"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g" ],
    "mono": [],
    "constr": [
      [
        "__dict({ _0 :? 'b & int | 'c ; _1 :? int | 'd }) -> 'e & (int -> 'f & ('a & int -> 'g))",
        "__array({ _0 :? int | 'd }) -> 'e"
      ]
    ],
    "prio": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [
      [
        "__dict({ _0 :? 'a & int | 'b ; _1 :? int | 'c }) -> 'd & (int -> 'e)",
        "__array({ _0 :? int | 'c }) -> 'd"
      ]
    ],
    "prio": [ "'a", "'b", "'c", "'d", "'e" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [
        "__dict({ _0 :? 'a & int | 'b ; _1 :? int | 'c }) -> 'd",
        "__array({ _0 :? int | 'c }) -> 'd"
      ]
    ],
    "prio": [ "'a", "'b", "'c", "'d" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'a", "__array({ _0 :? int | 'b }) -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'a", "__array({ _0 :? int | 'b }) -> 'c" ],
      [ "__array({ _0 :? int | 'b }) -> 'c", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & int", "any" ], [ "1", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "('a & int, 1) -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ int" ], [ "'a \\ int", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "empty" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a", "int -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & (int -> 'b)" ], [ "'a & (int -> 'b)", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'b", "'a & int -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "'b & ('a & int -> 'c)" ], [ "'b & ('a & int -> 'c)", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'b", "'a & int -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "'b & ('a & int -> 'c)" ], [ "'b & ('a & int -> 'c)", "'b" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "bool(true | false)", "bool(true)" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g", "'h" ],
    "mono": [],
    "constr": [
      [
        "__array({ _0 :? int | 'd }) -> 'c & int -> 'b & int -> 'a & int -> tuple0",
        "__array({ _0 :? int | 'd }) -> 'e & (int -> 'f & ('b & int -> 'g & ('a & int -> 'h)))"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ int" ], [ "'a \\ int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "(int -> 'a & int -> arrow) | 'b" ],
      [ "(int -> 'a & int -> arrow) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "('a & int -> arrow) | 'b" ],
      [ "('a & int -> arrow) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "arrow | 'a" ], [ "arrow | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ int" ], [ "'a \\ int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "(int -> arrow) | 'a" ], [ "(int -> arrow) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "arrow | 'a" ], [ "arrow | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'c" ],
    "constr": [
      [ "'c", "(int -> 'b & int -> 'a & int -> tuple0) | 'c" ],
      [ "(int -> 'b & int -> 'a & int -> tuple0) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'c" ],
    "constr": [
      [ "'c", "('b & int -> 'a & int -> tuple0) | 'c" ],
      [ "('b & int -> 'a & int -> tuple0) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "('a & int -> tuple0) | 'b" ],
      [ "('a & int -> tuple0) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "__array({ _0 :? int | 'a }) -> int -> arrow",
        "__array({ _0 :? int | 'a }) -> int -> int -> int -> tuple0"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "__array({ _0 :? int | 'a }) -> int -> int -> arrow",
        "__array({ _0 :? int | 'a }) -> int -> int -> int -> tuple0"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "__array({ _0 :? int | 'a }) -> int -> int -> int -> tuple0",
        "__array({ _0 :? int | 'a }) -> int -> arrow"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "__array({ _0 :? int | 'a }) -> int -> int -> int -> tuple0",
        "__array({ _0 :? int | 'a }) -> int -> int -> arrow"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "tuple0 -> __array({ _0 :? 'a })", "tuple0 -> 'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "__array({ _0 :? 'a }) | 'b" ],
      [ "__array({ _0 :? 'a }) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [
        "__dict({ _0 :? int | 'b ; _1 :? int | 'c }) | __array({ _0 :? int | 'c }) -> int -> int -> int -> tuple0",
        "__array({ _0 :? 'a }) -> 'd"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "'b & int | 'a \\ int" ], [ "'b & int | 'a \\ int", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "(int -> int -> int -> tuple0) | 'a" ],
      [ "(int -> int -> int -> tuple0) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "int -> int -> int -> tuple0", "0 -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "(int -> int -> tuple0) | 'a" ],
      [ "(int -> int -> tuple0) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "int -> int -> tuple0", "'a -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "(int -> tuple0) | 'a" ], [ "(int -> tuple0) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int -> tuple0", "empty" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a", "any" ], [ "'b & int", "any" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "('a, 'b & int) -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ int" ], [ "'a \\ int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "empty" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ], [ "1", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(int, 1) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "int -> tuple0", "int -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [ "'b & int -> 'a & int -> __array({ _0 :? int | 'd })", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'c" ],
    "constr": [
      [ "'c", "('b & int -> 'a & int -> __array({ _0 :? int | 'd })) | 'c" ],
      [ "('b & int -> 'a & int -> __array({ _0 :? int | 'd })) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "empty", "'a -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a -> empty", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "('a -> empty) | 'b" ], [ "('a -> empty) | 'b", "'b" ]
    ]
  },
  { "vars": [], "mono": [], "constr": [] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "int", "'a" ], [ "'a", "int" ], [ "int", "'a" ], [ "'a", "int" ]
    ]
  },
  { "vars": [ "'a" ], "mono": [], "constr": [ [ "empty", "int -> 'a" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "empty", "int" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "empty", "'a -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "empty", "int | bool(true | false)" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "~int" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "empty", "any" ], [ "1", "any" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "(int, int) -> int", "arrow" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "int", "int" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "bool(true | false)", "~int" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "bool(true | false)", "int" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "(bool(false) -> bool(true)) & (bool(true) -> bool(false))", "arrow"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a -> empty", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "('a -> empty) | 'b" ], [ "('a -> empty) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "empty", "'a -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "empty", "int | bool(true | false)" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "~int" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "int", "int" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "bool(true | false)", "~int" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "bool(true | false)", "int" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a -> empty", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "('a -> empty) | 'b" ], [ "('a -> empty) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "empty", "'a -> 'b" ] ],
    "prio": [ "'a" ]
  },
  { "vars": [], "mono": [], "constr": [ [ "empty", "any" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "int", "~int" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "empty", "any" ], [ "1", "any" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "(int, int) -> int", "arrow" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "int", "int" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "bool(true | false)", "~int" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "bool(true | false)", "int" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "bool(true | false)", "~bool(true | false)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "(bool(false) -> bool(true)) & (bool(true) -> bool(false))", "arrow"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "bool(true | false)", "bool(true | false)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "~(int | bool(true | false))", "~int" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "~(int | bool(true | false))", "int" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "~(int | bool(true | false))", "~bool(true | false)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "~(int | bool(true | false))", "bool(true | false)" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a -> empty", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "('a -> empty) | 'b" ], [ "('a -> empty) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "empty", "'a -> 'b" ] ],
    "prio": [ "'a" ]
  },
  { "vars": [], "mono": [], "constr": [ [ "empty", "any" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "int", "~int" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "empty", "any" ], [ "1", "any" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "(int, int) -> int", "arrow" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "int", "int" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "bool(true | false)", "~int" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "bool(true | false)", "int" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "bool(true | false)", "~bool(true | false)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "(bool(false) -> bool(true)) & (bool(true) -> bool(false))", "arrow"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "bool(true | false)", "bool(true | false)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "~(int | bool(true | false))", "~int" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "~(int | bool(true | false))", "int" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "~(int | bool(true | false))", "~bool(true | false)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "~(int | bool(true | false))", "bool(true | false)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "42", "any" ], [ "empty", "x1 where x1 = lst(tuple0 | (any, x1))" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a -> empty", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "('a -> empty) | 'b" ], [ "('a -> empty) | 'b", "'b" ]
    ]
  },
  { "vars": [], "mono": [], "constr": [] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "any", "'a" ], [ "'a", "any" ], [ "any", "'a" ], [ "'a", "any" ]
    ]
  },
  { "vars": [ "'a" ], "mono": [], "constr": [ [ "empty", "any -> 'a" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "empty", "any" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "int", "~int" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "empty", "any" ], [ "1", "any" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "(int, int) -> int", "arrow" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "empty", "int | bool(true | false)" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "int" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "bool(true | false)", "~int" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "bool(true | false)", "int" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "bool(true | false)", "~bool(true | false)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "(bool(false) -> bool(true)) & (bool(true) -> bool(false))", "arrow"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "empty", "int | bool(true | false)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "bool(true | false)", "bool(true | false)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "~(int | bool(true | false))", "~int" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "~(int | bool(true | false))", "int" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "~(int | bool(true | false))", "~bool(true | false)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "~(int | bool(true | false))", "bool(true | false)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "42", "any" ], [ "empty", "x1 where x1 = lst(tuple0 | (any, x1))" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "empty", "int | bool(true | false)" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a \\ (int | bool(true | false) | chr((0..255)) | str(enum))",
        "~str(enum)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a \\ (int | bool(true | false) | chr((0..255)) | str(enum))",
        "str(enum)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (int | bool(true | false) | chr((0..255)) | str(enum))" ],
      [ "'a & (int | bool(true | false) | chr((0..255)) | str(enum))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & chr((0..255))", "~str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & chr((0..255))", "str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ chr((0..255))" ], [ "'a \\ chr((0..255))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & int", "~str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & int", "str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ int" ], [ "'a \\ int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & bool(true | false)", "~str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & bool(true | false)", "str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ bool(true | false)" ],
      [ "'a \\ bool(true | false)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & str(enum)", "~str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ str(enum)" ], [ "'a \\ str(enum)", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & str(enum)", "str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & bool(true | false)", "~bool(true | false)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ bool(true | false)" ],
      [ "'a \\ bool(true | false)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & str(enum)", "~str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ str(enum)" ], [ "'a \\ str(enum)", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & bool(true | false)", "bool(true | false)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & str(enum)", "~str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ str(enum)" ], [ "'a \\ str(enum)", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & int", "~bool(true | false)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & int", "bool(true | false)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ int" ], [ "'a \\ int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & bool(true | false)", "~str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & bool(true | false)", "str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ bool(true | false)" ],
      [ "'a \\ bool(true | false)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & int", "~int" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ int" ], [ "'a \\ int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & bool(true | false)", "~str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & bool(true | false)", "str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ bool(true | false)" ],
      [ "'a \\ bool(true | false)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & int", "int" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & bool(true | false)", "~str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & bool(true | false)", "str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ bool(true | false)" ],
      [ "'a \\ bool(true | false)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & str(enum)", "~str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ str(enum)" ], [ "'a \\ str(enum)", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & chr((0..255))", "~bool(true | false)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & chr((0..255))", "bool(true | false)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ chr((0..255))" ], [ "'a \\ chr((0..255))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & int", "~str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & int", "str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ int" ], [ "'a \\ int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & chr((0..255))", "~int" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & chr((0..255))", "int" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ chr((0..255))" ], [ "'a \\ chr((0..255))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & int", "~str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & int", "str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ int" ], [ "'a \\ int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & chr((0..255))", "~chr((0..255))" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ chr((0..255))" ], [ "'a \\ chr((0..255))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & int", "~str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & int", "str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ int" ], [ "'a \\ int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & chr((0..255))", "chr((0..255))" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & int", "~str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & int", "str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ int" ], [ "'a \\ int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & bool(true | false)", "~str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & bool(true | false)", "str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ bool(true | false)" ],
      [ "'a \\ bool(true | false)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & str(enum)", "~str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ str(enum)" ], [ "'a \\ str(enum)", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a \\ (int | bool(true | false) | chr((0..255)) | str(enum))",
        "~bool(true | false)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a \\ (int | bool(true | false) | chr((0..255)) | str(enum))",
        "bool(true | false)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (int | bool(true | false) | chr((0..255)) | str(enum))" ],
      [ "'a & (int | bool(true | false) | chr((0..255)) | str(enum))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & chr((0..255))", "~str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & chr((0..255))", "str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ chr((0..255))" ], [ "'a \\ chr((0..255))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a \\ (int | bool(true | false) | chr((0..255)) | str(enum))",
        "~int"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a \\ (int | bool(true | false) | chr((0..255)) | str(enum))", "int"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (int | bool(true | false) | chr((0..255)) | str(enum))" ],
      [ "'a & (int | bool(true | false) | chr((0..255)) | str(enum))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & chr((0..255))", "~str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & chr((0..255))", "str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ chr((0..255))" ], [ "'a \\ chr((0..255))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a \\ (int | bool(true | false) | chr((0..255)) | str(enum))",
        "~chr((0..255))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a \\ (int | bool(true | false) | chr((0..255)) | str(enum))",
        "chr((0..255))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (int | bool(true | false) | chr((0..255)) | str(enum))" ],
      [ "'a & (int | bool(true | false) | chr((0..255)) | str(enum))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & chr((0..255))", "~str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & chr((0..255))", "str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ chr((0..255))" ], [ "'a \\ chr((0..255))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a \\ (int | bool(true | false) | chr((0..255)) | str(enum))",
        "~tuple0"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ tuple0" ], [ "'a \\ tuple0", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a \\ (int | bool(true | false) | chr((0..255)) | str(enum) | tuple0)",
        "tuple0"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a & (int | bool(true | false) | chr((0..255)) | str(enum) | tuple0)"
      ],
      [
        "'a & (int | bool(true | false) | chr((0..255)) | str(enum) | tuple0)",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & chr((0..255))", "~str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & chr((0..255))", "str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ chr((0..255))" ], [ "'a \\ chr((0..255))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & chr((0..255))", "~str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & chr((0..255))", "str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ chr((0..255))" ], [ "'a \\ chr((0..255))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & int", "~str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & int", "str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ int" ], [ "'a \\ int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & bool(true | false)", "~str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & bool(true | false)", "str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ bool(true | false)" ],
      [ "'a \\ bool(true | false)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & str(enum)", "~str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ str(enum)" ], [ "'a \\ str(enum)", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a \\ (int | bool(true | false) | chr((0..255)) | str(enum))",
        "tuple0"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a & (int | bool(true | false) | chr((0..255)) | str(enum) | tuple0)"
      ],
      [
        "'a & (int | bool(true | false) | chr((0..255)) | str(enum) | tuple0)",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & chr((0..255))", "~str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & chr((0..255))", "str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ chr((0..255))" ], [ "'a \\ chr((0..255))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & int", "~str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & int", "str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ int" ], [ "'a \\ int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & bool(true | false)", "~str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & bool(true | false)", "str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ bool(true | false)" ],
      [ "'a \\ bool(true | false)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & str(enum)", "~str(enum)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ str(enum)" ], [ "'a \\ str(enum)", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "('a & tuple0 -> str(_unit)) & ('a \\ (int | bool(true | false) | chr((0..255)) | str(enum) | tuple0) -> str(_object)) & ('a & chr((0..255)) -> str(_char)) & ('a & int -> str(_int)) & ('a & bool(true | false) -> str(_bool)) & ('a & str(enum) -> str(_string))",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "('a & tuple0 -> str(_unit)) & ('a \\ (int | bool(true | false) | chr((0..255)) | str(enum) | tuple0) -> str(_object)) & ('a & chr((0..255)) -> str(_char)) & ('a & int -> str(_int)) & ('a & bool(true | false) -> str(_bool)) & ('a & str(enum) -> str(_string)) | 'b"
      ],
      [
        "('a & tuple0 -> str(_unit)) & ('a \\ (int | bool(true | false) | chr((0..255)) | str(enum) | tuple0) -> str(_object)) & ('a & chr((0..255)) -> str(_char)) & ('a & int -> str(_int)) & ('a & bool(true | false) -> str(_bool)) & ('a & str(enum) -> str(_string)) | 'b",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "tuple0 -> __ref({ _0 :? 'a })", "tuple0 -> 'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "__ref({ _0 :? 'a }) | 'b" ],
      [ "__ref({ _0 :? 'a }) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a \\ (0 | bool(false))", "bool(false)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (0 | bool(false))" ], [ "'a & (0 | bool(false))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "tuple0 -> __ref({ _0 :? 'a })", "tuple0 -> 'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "__ref({ _0 :? 'a }) | 'b" ],
      [ "__ref({ _0 :? 'a }) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & 0", "bool(false)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ 0" ], [ "'a \\ 0", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "tuple0 -> __ref({ _0 :? 'a })", "tuple0 -> 'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "__ref({ _0 :? 'a }) | 'b" ],
      [ "__ref({ _0 :? 'a }) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & bool(false)", "bool(false)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & bool(false)", "~bool(false)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ bool(false)" ], [ "'a \\ bool(false)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "__ref({ _0 :? 'a })", "any" ], [ "tuple0", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "(__ref({ _0 :? 'b }), 'b) -> tuple0",
        "(__ref({ _0 :? 'a }), tuple0) -> 'c"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "tuple0 | 'a" ], [ "tuple0 | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "tuple0", "any" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "tuple0", "any" ] ] },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "__ref({ _0 :? 'b }) -> 'b", "__ref({ _0 :? tuple0 | 'a }) -> 'c" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "tuple0 | 'a" ], [ "tuple0 | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "tuple0 | 'a" ], [ "tuple0 | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "tuple0 | 'b | 'a" ], [ "tuple0 | 'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "any", "tuple0 | 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "tuple0 | 'a", "any" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & 0", "~0" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ 0" ], [ "'a \\ 0", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "tuple0 -> __ref({ _0 :? 'a })", "tuple0 -> 'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "__ref({ _0 :? 'a }) | 'b" ],
      [ "__ref({ _0 :? 'a }) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & bool(false)", "bool(false)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & bool(false)", "~bool(false)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ bool(false)" ], [ "'a \\ bool(false)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & 0", "0" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & 0", "~bool(false)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "__ref({ _0 :? 'a })", "any" ], [ "tuple0", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "(__ref({ _0 :? 'b }), 'b) -> tuple0",
        "(__ref({ _0 :? 'a }), tuple0) -> 'c"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "tuple0 | 'a" ], [ "tuple0 | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "tuple0", "any" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "tuple0", "any" ] ] },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "__ref({ _0 :? 'b }) -> 'b", "__ref({ _0 :? tuple0 | 'a }) -> 'c" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "tuple0 | 'a" ], [ "tuple0 | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "tuple0 | 'a" ], [ "tuple0 | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "tuple0 | 'b | 'a" ], [ "tuple0 | 'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "any", "tuple0 | 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "tuple0 | 'a", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "tuple0 -> __ref({ _0 :? 'a })", "tuple0 -> 'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "__ref({ _0 :? 'a }) | 'b" ],
      [ "__ref({ _0 :? 'a }) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & bool(false)", "bool(false)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & bool(false)", "~bool(false)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ bool(false)" ], [ "'a \\ bool(false)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a \\ (0 | bool(false))", "~0" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a \\ (0 | bool(false))", "0" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (0 | bool(false))" ], [ "'a & (0 | bool(false))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "tuple0 -> __ref({ _0 :? 'a })", "tuple0 -> 'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "__ref({ _0 :? 'a }) | 'b" ],
      [ "__ref({ _0 :? 'a }) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & 0", "bool(false)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ 0" ], [ "'a \\ 0", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [ "__ref({ _0 :? 'b })", "any" ], [ "'a \\ (0 | bool(false))", "any" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [
        "(__ref({ _0 :? 'c }), 'c) -> tuple0",
        "(__ref({ _0 :? 'b }), 'a \\ (0 | bool(false))) -> 'd"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "'a \\ (0 | bool(false)) | 'b" ],
      [ "'a \\ (0 | bool(false)) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "'a \\ (0 | bool(false)) | 'b" ],
      [ "'a \\ (0 | bool(false)) | 'b", "'c" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (0 | bool(false))" ], [ "'a & (0 | bool(false))", "'a" ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "tuple0", "empty" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "tuple0 -> __ref({ _0 :? 'a })", "tuple0 -> 'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "__ref({ _0 :? 'a }) | 'b" ],
      [ "__ref({ _0 :? 'a }) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & 0", "bool(false)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ 0" ], [ "'a \\ 0", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a \\ (0 | bool(false))", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a \\ (0 | bool(false))", "~bool(false)" ] ],
    "prio": [ "'a" ]
  },
  { "vars": [], "mono": [], "constr": [ [ "empty", "any" ] ] },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [
        "__ref({ _0 :? 'c }) -> 'c",
        "__ref({ _0 :? 'a \\ (0 | bool(false)) | 'b }) -> 'd"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "'a \\ (0 | bool(false)) | 'b" ],
      [ "'a \\ (0 | bool(false)) | 'b", "'c" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "'a \\ (0 | bool(false)) | 'b" ],
      [ "'a \\ (0 | bool(false)) | 'b", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "'a \\ (0 | bool(false)) | 'c | 'b" ],
      [ "'a \\ (0 | bool(false)) | 'c | 'b", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "any", "'a \\ (0 | bool(false)) | 'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'a \\ (0 | bool(false)) | 'b", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "tuple0 -> __ref({ _0 :? 'a })", "tuple0 -> 'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "__ref({ _0 :? 'a }) | 'b" ],
      [ "__ref({ _0 :? 'a }) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & 0", "bool(false)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ 0" ], [ "'a \\ 0", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "tuple0 -> __ref({ _0 :? 'a })", "tuple0 -> 'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "__ref({ _0 :? 'a }) | 'b" ],
      [ "__ref({ _0 :? 'a }) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & bool(false)", "bool(false)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & bool(false)", "~bool(false)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ bool(false)" ], [ "'a \\ bool(false)", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "('a \\ (0 | bool(false)) -> 'a \\ (0 | bool(false)) | 'c) & ('a & 0 -> tuple0 | 'c) & ('a & bool(false) -> tuple0 | 'c)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "('a \\ (0 | bool(false)) -> 'a \\ (0 | bool(false)) | 'c) & ('a & 0 -> tuple0 | 'c) & ('a & bool(false) -> tuple0 | 'c) | 'b"
      ],
      [
        "('a \\ (0 | bool(false)) -> 'a \\ (0 | bool(false)) | 'c) & ('a & 0 -> tuple0 | 'c) & ('a & bool(false) -> tuple0 | 'c) | 'b",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "tuple0 -> __ref({ _0 :? 'a })", "tuple0 -> 'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "__ref({ _0 :? 'a }) | 'b" ],
      [ "__ref({ _0 :? 'a }) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & bool(true)", "~bool(true)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ bool(true)" ], [ "'a \\ bool(true)", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "tuple0 -> __ref({ _0 :? 'a })", "tuple0 -> 'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "__ref({ _0 :? 'a }) | 'b" ],
      [ "__ref({ _0 :? 'a }) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a \\ bool(true)", "~bool(true)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a \\ bool(true)", "bool(true)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & bool(true)" ], [ "'a & bool(true)", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "42", "any" ], [ "69", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "__ref({ _0 :? 'a })", "any" ], [ "42, 69", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "(__ref({ _0 :? 'b }), 'b) -> tuple0",
        "(__ref({ _0 :? 'a }), (42, 69)) -> 'c"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "(42, 69) | 'a" ], [ "(42, 69) | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "(42, 69) | 'a" ], [ "(42, 69) | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "42, 69", "any" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "tuple0", "any" ] ] },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "__ref({ _0 :? 'b }) -> 'b", "__ref({ _0 :? (42, 69) | 'a }) -> 'c" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "(42, 69) | 'a" ], [ "(42, 69) | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "(42, 69) | 'a" ], [ "(42, 69) | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "(42, 69) | 'b | 'a" ], [ "(42, 69) | 'b | 'a", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "any", "(42, 69) | 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "(42, 69) | 'a", "any" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "__ref({ _0 :? 'a })", "any" ], [ "69", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "(__ref({ _0 :? 'b }), 'b) -> tuple0",
        "(__ref({ _0 :? 'a }), 69) -> 'c"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "69 | 'a" ], [ "69 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "69 | 'a" ], [ "69 | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "69", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & bool(true)", "bool(true)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "42", "any" ], [ "empty", "any" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "empty", "any" ] ] },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "__ref({ _0 :? 'b }) -> 'b", "__ref({ _0 :? 69 | 'a }) -> 'c" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "69 | 'a" ], [ "69 | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "69 | 'a" ], [ "69 | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "69 | 'b | 'a" ], [ "69 | 'b | 'a", "'b" ] ]
  },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "any", "69 | 'a" ] ] },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "69 | 'a", "any" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "tuple0 -> __ref({ _0 :? 'a })", "tuple0 -> 'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "__ref({ _0 :? 'a }) | 'b" ],
      [ "__ref({ _0 :? 'a }) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a \\ bool(true)", "~bool(true)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a \\ bool(true)", "bool(true)" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & bool(true)" ], [ "'a & bool(true)", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "('a & bool(true) -> 69 | 'c) & ('a \\ bool(true) -> (42, 69) | 'c)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "('a & bool(true) -> 69 | 'c) & ('a \\ bool(true) -> (42, 69) | 'c) | 'b"
      ],
      [
        "('a & bool(true) -> 69 | 'c) & ('a \\ bool(true) -> (42, 69) | 'c) | 'b",
        "'b"
      ]
    ]
  },
  { "vars": [ "'a" ], "mono": [], "constr": [ [ "42", "'a" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "42 | 'a" ], [ "42 | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "__ref({ _0 :? int })", "any" ], [ "bool(true)", "any" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "(__ref({ _0 :? int }), int) -> tuple0",
        "(__ref({ _0 :? int }), bool(true)) -> 'a"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "__ref({ _0 :? int })", "any" ], [ "69", "any" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "(__ref({ _0 :? int }), int) -> tuple0",
        "(__ref({ _0 :? int }), 69) -> 'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "69", "any" ] ] },
  { "vars": [ "'a" ], "mono": [], "constr": [ [ "69", "'a" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "69 | 'a" ], [ "69 | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "__ref({ _0 :? 'a }) -> 'a", "arrow" ] ]
  },
  { "vars": [ "'a" ], "mono": [], "constr": [ [ "empty", "'a" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "__ref({ _0 :? 'a }) -> 'a", "arrow" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "empty", "bool(true | false)" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "bool(true | false)", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "empty", "any" ], [ "bool(false)", "any" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(__ref({ _0 :? 'a }), 'a) -> tuple0", "arrow" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "bool(false)", "any" ] ] },
  { "vars": [ "'a" ], "mono": [], "constr": [ [ "tuple0", "'a" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> bool(true | false)", "'a -> ~bool(true)" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a -> __ref({ _0 :? 'a })", "42 -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "42 | 'a" ], [ "42 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "__ref({ _0 :? 42 | 'a }) | 'b" ],
      [ "__ref({ _0 :? 42 | 'a }) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "__ref({ _0 :? 'b }) -> 'b", "__ref({ _0 :? 42 | 'a }) -> 'c" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "42 | 'a" ], [ "42 | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "42 | 'a" ], [ "42 | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "42 | 'b | 'a" ], [ "42 | 'b | 'a", "'b" ] ]
  },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "any", "42 | 'a" ] ] },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "42 | 'a", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "42 | 'a \\ Nil", "Nil" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "int -> int", "42 | 'a \\ Nil -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & (Nil | int)" ], [ "'a & (Nil | int)", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "__ref({ _0 :? 42 | 'a & (Nil | int) })", "any" ], [ "int", "any" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "(__ref({ _0 :? 'b }), 'b) -> tuple0",
        "(__ref({ _0 :? 42 | 'a & (Nil | int) }), int) -> 'c"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int \\ 42 | 'a" ], [ "int \\ 42 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "int | 'a & (Nil | int)" ], [ "int | 'a & (Nil | int)", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int", "any" ], [ "100", "any" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> bool(true | false)", "(int, 100) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "bool(true | false)", "~bool(true)" ] ]
  },
  { "vars": [], "mono": [], "constr": [] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "__ref({ _0 :? int | 'a & (Nil | int) })", "any" ], [ "Nil", "any" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "(__ref({ _0 :? 'b }), 'b) -> tuple0",
        "(__ref({ _0 :? int | 'a & (Nil | int) }), Nil) -> 'c"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Nil | 'a" ], [ "Nil | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Nil | int" ], [ "Nil | int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "any" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "any" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "bool(true | false)", "bool(true)" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "tuple0", "any" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "int", "~Nil" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "Nil" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "~Nil" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "tuple0", "any" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [ "__ref({ _0 :? 'a }) -> 'a", "__ref({ _0 :? Nil | int }) -> 'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Nil | int" ], [ "Nil | int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Nil | int" ], [ "Nil | int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Nil | int | 'a" ], [ "Nil | int | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "any", "Nil | int" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "Nil | int", "any" ] ] },
  { "vars": [ "'a" ], "mono": [], "constr": [ [ "Nil | int", "'a" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Nil | int | 'a" ], [ "Nil | int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "tuple0 -> __ref({ _0 :? 'a })", "tuple0 -> 'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "__ref({ _0 :? 'a }) | 'b" ],
      [ "__ref({ _0 :? 'a }) | 'b", "'b" ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "42", "any" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "42", "any" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "bool(true | false)", "~bool(true)" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "42", "any" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "42", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "__ref({ _0 :? 'a })", "any" ], [ "42", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "(__ref({ _0 :? 'b }), 'b) -> tuple0",
        "(__ref({ _0 :? 'a }), 42) -> 'c"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "42 | 'a" ], [ "42 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "42 | 'a" ], [ "42 | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "bool(true | false)", "bool(true)" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "tuple0", "any" ] ] },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "__ref({ _0 :? 'b }) -> 'b", "__ref({ _0 :? 42 | 'a }) -> 'c" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "42 | 'a" ], [ "42 | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "42 | 'a" ], [ "42 | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "42 | 'b | 'a" ], [ "42 | 'b | 'a", "'b" ] ]
  },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "any", "42 | 'a" ] ] },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "42 | 'a", "any" ] ] },
  { "vars": [ "'a", "'b" ], "mono": [], "constr": [ [ "42 | 'b", "'a" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "42 | 'b | 'a" ], [ "42 | 'b | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "42", "any" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "42", "any" ] ] },
  { "vars": [], "mono": [], "constr": [] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "tuple0 -> __ref({ _0 :? 'a })", "tuple0 -> 'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "__ref({ _0 :? 'a }) | 'b" ],
      [ "__ref({ _0 :? 'a }) | 'b", "'b" ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "any" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "any" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "any" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "bool(true | false)", "~bool(true)" ] ]
  },
  { "vars": [], "mono": [], "constr": [] },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "any" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "__ref({ _0 :? 'a })", "any" ], [ "Nil", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "(__ref({ _0 :? 'b }), 'b) -> tuple0",
        "(__ref({ _0 :? 'a }), Nil) -> 'c"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Nil | 'a" ], [ "Nil | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "Nil | 'a" ], [ "Nil | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "any" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "bool(true | false)", "bool(true)" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "tuple0", "any" ] ] },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "__ref({ _0 :? 'b }) -> 'b", "__ref({ _0 :? Nil | 'a }) -> 'c" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "Nil | 'a" ], [ "Nil | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "Nil | 'a" ], [ "Nil | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "Nil | 'b | 'a" ], [ "Nil | 'b | 'a", "'b" ] ]
  },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "any", "Nil | 'a" ] ] },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "Nil | 'a", "any" ] ] },
  { "vars": [ "'a", "'b" ], "mono": [], "constr": [ [ "Nil | 'b", "'a" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Nil | 'b | 'a" ], [ "Nil | 'b | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "__ref({ _0 :? int }) -> int", "__ref({ _0 :? int }) -> 'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int \\ 0", "~0" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "int \\ 0", "0" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "__ref({ _0 :? int })", "any" ], [ "0", "any" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "(__ref({ _0 :? int }), int) -> tuple0",
        "(__ref({ _0 :? int }), 0) -> 'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "0", "any" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "0", "~0" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "__ref({ _0 :? int })", "any" ], [ "69", "any" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "(__ref({ _0 :? int }), int) -> tuple0",
        "(__ref({ _0 :? int }), 69) -> 'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "69", "any" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "tuple0", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "__ref({ _0 :? int }) -> int", "__ref({ _0 :? int }) -> 'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "0", "0" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a -> int | bool(false)", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "('a -> int | bool(false)) | 'b" ],
      [ "('a -> int | bool(false)) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> bool(true | false)", "'a -> ~bool(true)" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'b -> __ref({ _0 :? 'b })", "'a \\ Nil -> 'c" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'a \\ Nil | 'b" ], [ "'a \\ Nil | 'b", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [ "'c", "__ref({ _0 :? 'a \\ Nil | 'b }) | 'c" ],
      [ "__ref({ _0 :? 'a \\ Nil | 'b }) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & Nil" ], [ "'a & Nil", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "__ref({ _0 :? 'a })", "empty" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'b -> __ref({ _0 :? 'b })", "'a & Nil -> 'c" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'a & Nil | 'b" ], [ "'a & Nil | 'b", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [ "'c", "__ref({ _0 :? 'a & Nil | 'b }) | 'c" ],
      [ "__ref({ _0 :? 'a & Nil | 'b }) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ Nil" ], [ "'a \\ Nil", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "__ref({ _0 :? 'a })", "empty" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & Nil", "~Nil" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ Nil" ], [ "'a \\ Nil", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a & Nil", "Nil" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a \\ Nil", "~Nil" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a \\ Nil", "Nil" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & Nil" ], [ "'a & Nil", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'b -> __ref({ _0 :? 'b })", "'a & Nil -> 'c" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'a & Nil | 'b" ], [ "'a & Nil | 'b", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [ "'c", "__ref({ _0 :? 'a & Nil | 'b }) | 'c" ],
      [ "__ref({ _0 :? 'a & Nil | 'b }) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ Nil" ], [ "'a \\ Nil", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "__ref({ _0 :? 'a })", "empty" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a \\ Nil", "any" ], [ "0", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [ "(int, int) -> bool(true | false)", "('a \\ Nil, 0) -> 'b" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & (Nil | int)" ], [ "'a & (Nil | int)", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & Nil" ], [ "'a & Nil", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "bool(true | false)", "empty" ] ] },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'b -> __ref({ _0 :? 'b })", "'a & Nil -> 'c" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'a & Nil | 'b" ], [ "'a & Nil | 'b", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [ "'c", "__ref({ _0 :? 'a & Nil | 'b }) | 'c" ],
      [ "__ref({ _0 :? 'a & Nil | 'b }) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ Nil" ], [ "'a \\ Nil", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "__ref({ _0 :? 'a })", "empty" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "bool(true | false)", "~bool(true)" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "0", "any" ], [ "'a & int", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(0, 'a & int) -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ int" ], [ "'a \\ int", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "empty" ] ] },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'b -> __ref({ _0 :? 'b })", "'a & Nil -> 'c" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'a & Nil | 'b" ], [ "'a & Nil | 'b", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [ "'c", "__ref({ _0 :? 'a & Nil | 'b }) | 'c" ],
      [ "__ref({ _0 :? 'a & Nil | 'b }) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ Nil" ], [ "'a \\ Nil", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "__ref({ _0 :? 'a })", "empty" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [ "__ref({ _0 :? 'a & int | 'b })", "any" ], [ "int", "any" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [
        "(__ref({ _0 :? 'c }), 'c) -> tuple0",
        "(__ref({ _0 :? 'a & int | 'b }), int) -> 'd"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "~'a & int | 'b" ], [ "~'a & int | 'b", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "int | 'a" ], [ "int | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "bool(true | false)", "bool(true)" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "tuple0", "any" ] ] },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "__ref({ _0 :? 'b }) -> 'b", "__ref({ _0 :? int | 'a }) -> 'c" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "int | 'a" ], [ "int | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "int | 'a" ], [ "int | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "int | 'b | 'a" ], [ "int | 'b | 'a", "'b" ] ]
  },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "any", "int | 'a" ] ] },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "int | 'a", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "0", "any" ], [ "int | 'a", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(0, int | 'a) -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int", "any" ], [ "int", "any" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int, int", "any" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "int, int", "any" ] ] },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'b -> __ref({ _0 :? 'b })", "'a & Nil -> 'c" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'a & Nil | 'b" ], [ "'a & Nil | 'b", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [ "'c", "__ref({ _0 :? 'a & Nil | 'b }) | 'c" ],
      [ "__ref({ _0 :? 'a & Nil | 'b }) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ Nil" ], [ "'a \\ Nil", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "__ref({ _0 :? 'a })", "empty" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [ "('a & int -> (int, int)) & ('a & Nil -> 'a & Nil)", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "('a & int -> (int, int)) & ('a & Nil -> 'a & Nil) | 'b" ],
      [ "('a & int -> (int, int)) & ('a & Nil -> 'a & Nil) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> bool(true | false)", "'a -> ~bool(true)" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a -> __ref({ _0 :? 'a })", "int -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "__ref({ _0 :? int | 'a }) | 'b" ],
      [ "__ref({ _0 :? int | 'a }) | 'b", "'b" ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "~Nil" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "int", "Nil" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ], [ "0", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> bool(true | false)", "(int, 0) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "bool(true | false)", "~bool(true)" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "0", "any" ], [ "int", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(0, int) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "__ref({ _0 :? int | 'a })", "any" ], [ "int", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "(__ref({ _0 :? 'b }), 'b) -> tuple0",
        "(__ref({ _0 :? int | 'a }), int) -> 'c"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "int | 'a" ], [ "int | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "bool(true | false)", "bool(true)" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "tuple0", "any" ] ] },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "__ref({ _0 :? 'b }) -> 'b", "__ref({ _0 :? int | 'a }) -> 'c" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "int | 'a" ], [ "int | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "int | 'a" ], [ "int | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "int | 'b | 'a" ], [ "int | 'b | 'a", "'b" ] ]
  },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "any", "int | 'a" ] ] },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "int | 'a", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "0", "any" ], [ "int | 'a", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(0, int | 'a) -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int", "any" ], [ "int", "any" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int, int", "any" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "int, int", "any" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "any" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a -> __ref({ _0 :? 'a })", "Nil -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Nil | 'a" ], [ "Nil | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "__ref({ _0 :? Nil | 'a }) | 'b" ],
      [ "__ref({ _0 :? Nil | 'a }) | 'b", "'b" ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "~Nil" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "Nil" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "Nil | int -> Nil | (int, int)", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "(Nil | int -> Nil | (int, int)) | 'a" ],
      [ "(Nil | int -> Nil | (int, int)) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> bool(true | false)", "'a -> ~bool(true)" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "any" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a -> __ref({ _0 :? 'a })", "Nil -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Nil | 'a" ], [ "Nil | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "__ref({ _0 :? Nil | 'a }) | 'b" ],
      [ "__ref({ _0 :? Nil | 'a }) | 'b", "'b" ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "~Nil" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "Nil" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "Nil, Nil", "any" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a -> __ref({ _0 :? 'a })", "(Nil, Nil) -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "(Nil, Nil) | 'a" ], [ "(Nil, Nil) | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "__ref({ _0 :? (Nil, Nil) | 'a }) | 'b" ],
      [ "__ref({ _0 :? (Nil, Nil) | 'a }) | 'b", "'b" ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil, Nil", "~Nil" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "Nil, Nil", "Nil" ] ] },
  { "vars": [ "'a" ], "mono": [], "constr": [ [ "Nil, Nil", "'a, any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Nil | 'a" ], [ "Nil | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "~Nil" ] ] },
  { "vars": [ "'a" ], "mono": [], "constr": [ [ "Nil, Nil", "any, 'a" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Nil | 'a" ], [ "Nil | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "Nil" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "(Nil, ~Nil) & (Nil | int, Nil | int)", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "'a -> __ref({ _0 :? 'a })",
        "(Nil, ~Nil) & (Nil | int, Nil | int) -> 'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "(Nil, ~Nil) & (Nil | int, Nil | int) | 'a" ],
      [ "(Nil, ~Nil) & (Nil | int, Nil | int) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "__ref({ _0 :? (Nil, ~Nil) & (Nil | int, Nil | int) | 'a }) | 'b"
      ],
      [
        "__ref({ _0 :? (Nil, ~Nil) & (Nil | int, Nil | int) | 'a }) | 'b",
        "'b"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "(Nil, ~Nil) & (Nil | int, Nil | int)", "~Nil" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "(Nil, ~Nil) & (Nil | int, Nil | int)", "Nil" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(Nil, ~Nil) & (Nil | int, Nil | int)", "'a, any" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Nil | 'a" ], [ "Nil | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "~Nil" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(Nil, ~Nil) & (Nil | int, Nil | int)", "any, 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "Nil" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "(Nil | int, Nil | int) & ~(Nil, any) & ~(any, ~Nil)", "any" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "'a -> __ref({ _0 :? 'a })",
        "(Nil | int, Nil | int) & ~(Nil, any) & ~(any, ~Nil) -> 'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "(Nil | int, Nil | int) & ~(Nil, any) & ~(any, ~Nil) | 'a" ],
      [ "(Nil | int, Nil | int) & ~(Nil, any) & ~(any, ~Nil) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "__ref({ _0 :? (Nil | int, Nil | int) & ~(Nil, any) & ~(any, ~Nil) | 'a }) | 'b"
      ],
      [
        "__ref({ _0 :? (Nil | int, Nil | int) & ~(Nil, any) & ~(any, ~Nil) | 'a }) | 'b",
        "'b"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "(Nil | int, Nil | int) & ~(Nil, any) & ~(any, ~Nil)", "~Nil" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "(Nil | int, Nil | int) & ~(Nil, any) & ~(any, ~Nil)", "Nil" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "(Nil | int, Nil | int) & ~(Nil, any) & ~(any, ~Nil)", "'a, any" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "~Nil" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "int", "Nil" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "(Nil | int, Nil | int) & ~(Nil, any) & ~(any, ~Nil)", "any, 'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Nil | 'a" ], [ "Nil | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "~Nil" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "(Nil | int, Nil | int) & ~(Nil, any) & ~(any, ~Nil)", "'a, any" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "Nil" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "(Nil | int, Nil | int) & ~(Nil, any) & ~(any, Nil)", "any" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "'a -> __ref({ _0 :? 'a })",
        "(Nil | int, Nil | int) & ~(Nil, any) & ~(any, Nil) -> 'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "(Nil | int, Nil | int) & ~(Nil, any) & ~(any, Nil) | 'a" ],
      [ "(Nil | int, Nil | int) & ~(Nil, any) & ~(any, Nil) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "__ref({ _0 :? (Nil | int, Nil | int) & ~(Nil, any) & ~(any, Nil) | 'a }) | 'b"
      ],
      [
        "__ref({ _0 :? (Nil | int, Nil | int) & ~(Nil, any) & ~(any, Nil) | 'a }) | 'b",
        "'b"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "(Nil | int, Nil | int) & ~(Nil, any) & ~(any, Nil)", "~Nil" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "(Nil | int, Nil | int) & ~(Nil, any) & ~(any, Nil)", "Nil" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "(Nil | int, Nil | int) & ~(Nil, any) & ~(any, Nil)", "'a, any" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "~Nil" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "int", "Nil" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "(Nil | int, Nil | int) & ~(Nil, any) & ~(any, Nil)", "any, 'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "~Nil" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "int", "Nil" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "(Nil | int, Nil | int) & ~(Nil, any) & ~(any, Nil)", "any, 'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "(Nil | int, Nil | int) & ~(Nil, any) & ~(any, Nil)", "'a, any" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int", "any" ], [ "int", "any" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> bool(true | false)", "(int, int) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "bool(true | false)", "~bool(true)" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "(Nil | int, Nil | int) & ~(Nil, any) & ~(any, Nil)", "any, 'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "(Nil | int, Nil | int) & ~(Nil, any) & ~(any, Nil)", "'a, any" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int", "any" ], [ "int", "any" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "__ref({ _0 :? (Nil | int, Nil | int) & ~(Nil, any) & ~(any, Nil) | 'a })",
        "any"
      ],
      [ "int, int", "any" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "(__ref({ _0 :? 'b }), 'b) -> tuple0",
        "(__ref({ _0 :? (Nil | int, Nil | int) & ~(Nil, any) & ~(any, Nil) | 'a }), (int, int)) -> 'c"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "(Nil | int, Nil | int) & ~(Nil, any) & ~(any, Nil) | 'a" ],
      [ "(Nil | int, Nil | int) & ~(Nil, any) & ~(any, Nil) | 'a", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int, int", "any" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "bool(true | false)", "bool(true)" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "tuple0", "any" ] ] },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "__ref({ _0 :? 'b }) -> 'b",
        "__ref({ _0 :? (Nil | int, Nil | int) & ~(Nil, any) & ~(any, Nil) | 'a }) -> 'c"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "(Nil | int, Nil | int) & ~(Nil, any) & ~(any, Nil) | 'a" ],
      [ "(Nil | int, Nil | int) & ~(Nil, any) & ~(any, Nil) | 'a", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "(Nil | int, Nil | int) & ~(Nil, any) & ~(any, Nil) | 'a" ],
      [ "(Nil | int, Nil | int) & ~(Nil, any) & ~(any, Nil) | 'a", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b", "(Nil | int, Nil | int) & ~(Nil, any) & ~(any, Nil) | 'b | 'a"
      ],
      [
        "(Nil | int, Nil | int) & ~(Nil, any) & ~(any, Nil) | 'b | 'a", "'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "any", "(Nil | int, Nil | int) & ~(Nil, any) & ~(any, Nil) | 'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "(Nil | int, Nil | int) & ~(Nil, any) & ~(any, Nil) | 'a", "any" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "Nil | (x1, x1) -> Nil | int | (x1, x1) & ~(Nil, any) & ~(any, Nil) | 'b where x1 = Nil | int",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "(Nil | (x1, x1) -> Nil | int | (x1, x1) & ~(Nil, any) & ~(any, Nil) | 'b) | 'a where x1 = Nil | int"
      ],
      [
        "(Nil | (x1, x1) -> Nil | int | (x1, x1) & ~(Nil, any) & ~(any, Nil) | 'b) | 'a where x1 = Nil | int",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "(~int -> bool(false)) & (int -> bool(true))", "'a -> ~bool(true)" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "tuple0 -> any", "'a -> ~int" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "tuple0 -> __ref({ _0 :? 'a })", "tuple0 -> 'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "__ref({ _0 :? 'a }) | 'b" ],
      [ "__ref({ _0 :? 'a }) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'b -> __ref({ _0 :? 'b })", "'a -> 'c" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [ "'c", "__ref({ _0 :? 'b | 'a }) | 'c" ],
      [ "__ref({ _0 :? 'b | 'a }) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "__ref({ _0 :? 'a })", "empty" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "tuple0 -> any", "tuple0 -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "__ref({ _0 :? 'a })", "any" ], [ "int", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "(__ref({ _0 :? 'b }), 'b) -> tuple0",
        "(__ref({ _0 :? 'a }), int) -> 'c"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "int | 'a" ], [ "int | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "(~int -> bool(false)) & (int -> bool(true))", "int -> 'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "bool(true) | 'a" ], [ "bool(true) | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "bool(true)", "~bool(true)" ] ] },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [ "__ref({ _0 :? 'c }) -> 'c", "__ref({ _0 :? 'b | 'a }) -> 'd" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'b | 'a" ], [ "'b | 'a", "'c" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'b | 'a" ], [ "'b | 'a", "'c" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'c | 'b | 'a" ], [ "'c | 'b | 'a", "'c" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "any", "'b | 'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b | 'a", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'b | 'a", "any" ], [ "int", "any" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "('b | 'a, int) -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "empty" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [ "__ref({ _0 :? 'b & int | 'a & int })", "any" ], [ "int", "any" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [
        "(__ref({ _0 :? 'c }), 'c) -> tuple0",
        "(__ref({ _0 :? 'b & int | 'a & int }), int) -> 'd"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "~'a & int | 'b" ], [ "~'a & int | 'b", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int" ], [ "int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "bool(true)", "bool(true)" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "__ref({ _0 :? int | 'a })", "any" ], [ "~int", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "(__ref({ _0 :? 'b }), 'b) -> tuple0",
        "(__ref({ _0 :? int | 'a }), ~int) -> 'c"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "~int | 'a" ], [ "~int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "~int", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "(~int -> bool(false)) & (int -> bool(true))", "~int -> 'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "bool(false) | 'a" ], [ "bool(false) | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "bool(false)", "~bool(true)" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "bool(false)", "bool(true)" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "tuple0", "any" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [ "__ref({ _0 :? 'a }) -> 'a", "__ref({ _0 :? any }) -> 'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [ "__ref({ _0 :? 'a }) -> 'a", "__ref({ _0 :? int }) -> 'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int" ], [ "int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int" ], [ "int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "any", "int" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "any", "any" ], [ "int", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a & int -> (any, int)", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "('a & int -> (any, int)) | 'b" ],
      [ "('a & int -> (any, int)) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'b -> __ref({ _0 :? 'b })", "'a -> 'c" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [ "'c", "__ref({ _0 :? 'b | 'a }) | 'c" ],
      [ "__ref({ _0 :? 'b | 'a }) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "__ref({ _0 :? 'a })", "empty" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "bool(true)", "~bool(true)" ] ] },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [ "__ref({ _0 :? 'c }) -> 'c", "__ref({ _0 :? 'b | 'a }) -> 'd" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'b | 'a" ], [ "'b | 'a", "'c" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'b | 'a" ], [ "'b | 'a", "'c" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'c | 'b | 'a" ], [ "'c | 'b | 'a", "'c" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "any", "'b | 'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b | 'a", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'b | 'a", "any" ], [ "1", "any" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "('b | 'a, 1) -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "empty" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [ "__ref({ _0 :? 'b & int | 'a & int })", "any" ], [ "int", "any" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [
        "(__ref({ _0 :? 'c }), 'c) -> tuple0",
        "(__ref({ _0 :? 'b & int | 'a & int }), int) -> 'd"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "~'a & int | 'b" ], [ "~'a & int | 'b", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int" ], [ "int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "__ref({ _0 :? int })", "any" ], [ "bool(false)", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "(__ref({ _0 :? 'a }), 'a) -> tuple0",
        "(__ref({ _0 :? int }), bool(false)) -> 'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "tuple0 -> __ref({ _0 :? 'a })", "tuple0 -> 'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "__ref({ _0 :? 'a }) | 'b" ],
      [ "__ref({ _0 :? 'a }) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'b -> __ref({ _0 :? 'b })", "'a -> 'c" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'b | 'a" ], [ "'b | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [ "'c", "__ref({ _0 :? 'b | 'a }) | 'c" ],
      [ "__ref({ _0 :? 'b | 'a }) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "__ref({ _0 :? 'a })", "empty" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "bool(true)", "~bool(true)" ] ] },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [ "__ref({ _0 :? 'c }) -> 'c", "__ref({ _0 :? 'b | 'a }) -> 'd" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'b | 'a" ], [ "'b | 'a", "'c" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'b | 'a" ], [ "'b | 'a", "'c" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'c | 'b | 'a" ], [ "'c | 'b | 'a", "'c" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "any", "'b | 'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b | 'a", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'b & int | 'a & int", "int" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'b & int | 'a & int", "~int" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ int" ], [ "'a \\ int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ int" ], [ "'a \\ int", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'b \\ int | 'a \\ int", "int" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "__ref({ _0 :? 'b })", "any" ], [ "'c \\ int | 'a \\ int", "any" ]
    ],
    "prio": [ "'a", "'b", "'c" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [
      [
        "(__ref({ _0 :? 'd }), 'd) -> tuple0",
        "(__ref({ _0 :? 'b }), 'c \\ int | 'a \\ int) -> 'e"
      ]
    ],
    "prio": [ "'a", "'b", "'c" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'a \\ int | 'b" ], [ "'a \\ int | 'b", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "'c & int | 'c & 'b | 'c & 'a" ],
      [ "'c & int | 'c & 'b | 'c & 'a", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'a \\ int | 'b" ], [ "'a \\ int | 'b", "'c" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "tuple0", "empty" ] ] },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'c & 'b & ~int | 'a \\ int", "any" ] ],
    "prio": [ "'a", "'b", "'c" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'c & 'b & ~int | 'a \\ int", "~int" ] ],
    "prio": [ "'a", "'b", "'c" ]
  },
  { "vars": [], "mono": [], "constr": [ [ "bool(true)", "bool(true)" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "empty", "any" ] ] },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [
        "__ref({ _0 :? 'c }) -> 'c", "__ref({ _0 :? 'a \\ int | 'b }) -> 'd"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'a \\ int | 'b" ], [ "'a \\ int | 'b", "'c" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'a \\ int | 'b" ], [ "'a \\ int | 'b", "'c" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "'a \\ int | 'c | 'b" ], [ "'a \\ int | 'c | 'b", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "any", "'a \\ int | 'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'a \\ int | 'b", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'b & int | 'a & int", "any" ], [ "1", "any" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "('b & int | 'a & int, 1) -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ int" ], [ "'a \\ int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ int" ], [ "'a \\ int", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "empty" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'b \\ int | 'a \\ int", "int" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [ "__ref({ _0 :? 'b | 'a })", "any" ], [ "bool(false)", "any" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [
        "(__ref({ _0 :? 'c }), 'c) -> tuple0",
        "(__ref({ _0 :? 'b | 'a }), bool(false)) -> 'd"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "~'a & bool(false) | 'b" ], [ "~'a & bool(false) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "bool(false) | 'b | 'a" ], [ "bool(false) | 'b | 'a", "'c" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "bool(false)", "any" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "bool(false)", "any" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "tuple0", "any" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "bool(false) | 'b \\ int | 'a \\ int", "int" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "__ref({ _0 :? 'b })", "any" ],
      [ "bool(false) | 'c \\ int | 'a \\ int", "any" ]
    ],
    "prio": [ "'a", "'b", "'c" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [
      [
        "(__ref({ _0 :? 'd }), 'd) -> tuple0",
        "(__ref({ _0 :? 'b }), bool(false) | 'c \\ int | 'a \\ int) -> 'e"
      ]
    ],
    "prio": [ "'a", "'b", "'c" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "bool(false) | 'a \\ int | 'b" ],
      [ "bool(false) | 'a \\ int | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "'c & (int | bool(false)) | 'c & 'b | 'c & 'a" ],
      [ "'c & (int | bool(false)) | 'c & 'b | 'c & 'a", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "bool(false) | 'a \\ int | 'b" ],
      [ "bool(false) | 'a \\ int | 'b", "'c" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "bool(false) | 'c & 'b & ~int | 'a \\ int", "any" ] ],
    "prio": [ "'a", "'b", "'c" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "bool(false) | 'c & 'b & ~int | 'a \\ int", "~int" ] ],
    "prio": [ "'a", "'b", "'c" ]
  },
  { "vars": [], "mono": [], "constr": [ [ "bool(true)", "bool(true)" ] ] },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [
      [
        "__ref({ _0 :? 'd }) -> 'd",
        "__ref({ _0 :? 'c & (int | bool(false)) | bool(false) | 'c & 'b | 'a }) -> 'e"
      ]
    ],
    "prio": [ "'a", "'b", "'c" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b", "'c", "'d" ],
    "constr": [
      [ "'d", "'c & (int | bool(false)) | bool(false) | 'c & 'b | 'a" ],
      [ "'c & (int | bool(false)) | bool(false) | 'c & 'b | 'a", "'d" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b", "'c", "'d" ],
    "constr": [
      [ "'d", "'c & (int | bool(false)) | bool(false) | 'c & 'b | 'a" ],
      [ "'c & (int | bool(false)) | bool(false) | 'c & 'b | 'a", "'d" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b", "'c", "'d" ],
    "constr": [
      [ "'d", "'c & (int | bool(false)) | bool(false) | 'd | 'c & 'b | 'a" ],
      [ "'c & (int | bool(false)) | bool(false) | 'd | 'c & 'b | 'a", "'d" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "any", "'c & (int | bool(false)) | bool(false) | 'c & 'b | 'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c & (int | bool(false)) | bool(false) | 'c & 'b | 'a", "any" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "__ref({ _0 :? bool(false) | 'a \\ int | 'b })", "any" ],
      [ "'c & (int | bool(false)) | bool(false) | 'c & 'b | 'a", "any" ]
    ],
    "prio": [ "'a", "'b", "'c" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [
      [
        "(__ref({ _0 :? 'd }), 'd) -> tuple0",
        "(__ref({ _0 :? bool(false) | 'a \\ int | 'b }), 'c & (int | bool(false)) | bool(false) | 'c & 'b | 'a) -> 'e"
      ]
    ],
    "prio": [ "'a", "'b", "'c" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'a & int | 'b" ], [ "'a & int | 'b", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "'c \\ int | 'c & 'b | 'c & 'a" ],
      [ "'c \\ int | 'c & 'b | 'c & 'a", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "bool(false) | 'b | 'a" ], [ "bool(false) | 'b | 'a", "'c" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "bool(false) | 'c & 'b | 'a", "any" ] ],
    "prio": [ "'a", "'b", "'c" ]
  },
  { "vars": [], "mono": [], "constr": [ [ "tuple0", "any" ] ] },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [
        "__ref({ _0 :? 'c }) -> 'c",
        "__ref({ _0 :? bool(false) | 'b | 'a }) -> 'd"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "bool(false) | 'b | 'a" ], [ "bool(false) | 'b | 'a", "'c" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "bool(false) | 'b | 'a" ], [ "bool(false) | 'b | 'a", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "bool(false) | 'c | 'b | 'a" ],
      [ "bool(false) | 'c | 'b | 'a", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "any", "bool(false) | 'b | 'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "bool(false) | 'b | 'a", "any" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "('a \\ int -> 'a \\ int | 'c) & ('a -> bool(false) | 'c | 'a)", "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "('a \\ int -> 'a \\ int | 'c) & ('a -> bool(false) | 'c | 'a) | 'b"
      ],
      [
        "('a \\ int -> 'a \\ int | 'c) & ('a -> bool(false) | 'c | 'a) | 'b",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> bool(true | false)", "'a -> ~bool(true)" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "('b -> bool(false)) & ('a -> bool(true | false))",
        "'c -> ~bool(true)"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(__array({ _0 :? 'c }), int) | (__dict({ _0 :? 'd ; _1 :? 'c }), 'd) -> 'c",
        "'b -> 'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "('b -> bool(false)) & ('a -> bool(true | false))", "any" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "__array({ _0 :? 'b | 'a })", "any" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "tuple0 -> __array({ _0 :? 'a })", "tuple0 -> 'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "__array({ _0 :? 'a }) | 'b" ],
      [ "__array({ _0 :? 'a }) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a -> __ref({ _0 :? 'a })", "0 -> 'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "0 | 'a" ], [ "0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "__ref({ _0 :? 0 | 'a }) | 'b" ],
      [ "__ref({ _0 :? 0 | 'a }) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "__ref({ _0 :? 'b }) -> 'b", "__ref({ _0 :? 0 | 'a }) -> 'c" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "0 | 'a" ], [ "0 | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "0 | 'a" ], [ "0 | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "0 | 'b | 'a" ], [ "0 | 'b | 'a", "'b" ] ]
  },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "any", "0 | 'a" ] ] },
  { "vars": [ "'a" ], "mono": [ "'a" ], "constr": [ [ "0 | 'a", "any" ] ] },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "__array({ _0 :? 'c }) -> int", "__array({ _0 :? 'b | 'a }) -> 'd" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'b | 'a" ], [ "'b | 'a", "'c" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "0 | 'a", "any" ], [ "int", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [ "(int, int) -> bool(true | false)", "(0 | 'a, int) -> 'b" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "bool(true | false)", "~bool(true)" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "__array({ _0 :? 'b | 'a })", "any" ], [ "0 | 'c & int", "any" ]
    ],
    "prio": [ "'a", "'b", "'c" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "(__array({ _0 :? 'd }), int) | (__dict({ _0 :? 'e ; _1 :? 'd }), 'e) -> 'd",
        "(__array({ _0 :? 'b | 'a }), 0 | 'c & int) -> 'f"
      ]
    ],
    "prio": [ "'a", "'b", "'c" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'b | 'a" ], [ "'b | 'a", "'c" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "any" ], [ "any", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'b | 'a" ], [ "'b | 'a", "'c" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'c | 'b | 'a" ], [ "'c | 'b | 'a", "'c" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "any", "'b | 'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b | 'a", "any" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "('b -> bool(false)) & ('a -> bool(true | false))", "'a \\ 'b -> 'c"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "bool(true | false)", "~bool(true)" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "__array({ _0 :? 'b }) -> 'b -> tuple0",
        "__array({ _0 :? 'a }) -> 'c"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'a" ], [ "'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "('a -> tuple0) | 'b" ], [ "('a -> tuple0) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'c -> tuple0", "'a \\ 'b -> 'd" ] ],
    "prio": [ "'a", "'b", "'c" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [ [ "'c", "'a \\ 'b | 'c" ], [ "'a \\ 'b | 'c", "'c" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "bool(true | false)", "bool(true)" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "tuple0", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "0 | 'a & int", "any" ], [ "1", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(0 | 'a & int, 1) -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [ "__ref({ _0 :? 0 | 'a & int })", "any" ], [ "int", "any" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "(__ref({ _0 :? 'b }), 'b) -> tuple0",
        "(__ref({ _0 :? 0 | 'a & int }), int) -> 'c"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int \\ 0 | 'a" ], [ "int \\ 0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int" ], [ "int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ] ] },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "('b -> bool(false)) & ('a -> bool(true | false))", "'b -> 'c" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "bool(false) | 'a" ], [ "bool(false) | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "bool(false)", "~bool(true)" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "bool(false)", "bool(true)" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "empty", "any" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ], [ "1", "any" ] ] },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(int, 1) -> 'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "__ref({ _0 :? int })", "any" ], [ "int", "any" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "(__ref({ _0 :? 'a }), 'a) -> tuple0",
        "(__ref({ _0 :? int }), int) -> 'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int" ], [ "int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "any" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "bool(true | false)", "bool(true)" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "tuple0", "any" ] ] },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "('b -> bool(false)) & ('a -> bool(true | false)) -> __array({ _0 :? 'b | 'a }) -> __array({ _0 :? 'a \\ 'b | 'd })",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [
        "'c",
        "(('b -> bool(false)) & ('a -> bool(true | false)) -> __array({ _0 :? 'b | 'a }) -> __array({ _0 :? 'a \\ 'b | 'd })) | 'c"
      ],
      [
        "(('b -> bool(false)) & ('a -> bool(true | false)) -> __array({ _0 :? 'b | 'a }) -> __array({ _0 :? 'a \\ 'b | 'd })) | 'c",
        "'c"
      ]
    ]
  },
  { "vars": [], "mono": [], "constr": [] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "tuple0 -> __array({ _0 :? 'a })", "tuple0 -> 'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "__array({ _0 :? 'a }) | 'b" ],
      [ "__array({ _0 :? 'a }) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "__array({ _0 :? 'b }) -> 'b -> tuple0",
        "__array({ _0 :? 'a }) -> 'c"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "'a" ], [ "'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "('a -> tuple0) | 'b" ], [ "('a -> tuple0) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a -> tuple0", "42 -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "42 | 'a" ], [ "42 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "__array({ _0 :? 'b }) -> 'b -> tuple0",
        "__array({ _0 :? 42 | 'a }) -> 'c"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'b", "42 | 'a" ], [ "42 | 'a", "'b" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "(42 | 'a -> tuple0) | 'b" ],
      [ "(42 | 'a -> tuple0) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "42 | 'a -> tuple0", "bool(false) -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "bool(false) | 'a" ], [ "bool(false) | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "__array({ _0 :? 'b }) -> 'b -> tuple0",
        "__array({ _0 :? 42 | bool(false) | 'a }) -> 'c"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "42 | bool(false) | 'a" ], [ "42 | bool(false) | 'a", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'b", "(42 | bool(false) | 'a -> tuple0) | 'b" ],
      [ "(42 | bool(false) | 'a -> tuple0) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "42 | bool(false) | 'a -> tuple0", "13 -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "13 | 'a" ], [ "13 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a", "~int" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ int" ], [ "'a \\ int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a \\ int", "int" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "'a", "int" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [
      [
        "('c -> bool(false)) & ('b -> bool(true | false)) -> __array({ _0 :? 'c | 'b }) -> __array({ _0 :? 'b \\ 'c | 'd })",
        "('a & int -> bool(true)) & ('a \\ int -> bool(false)) -> 'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'c \\ int | 'b | 'a" ], [ "'c \\ int | 'b | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ int" ], [ "'a \\ int", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'d" ],
    "constr": [
      [
        "'d",
        "(__array({ _0 :? 'b \\ int | 'a }) -> __array({ _0 :? 'a \\ 'b | 'a & int | 'c })) | 'd"
      ],
      [
        "(__array({ _0 :? 'b \\ int | 'a }) -> __array({ _0 :? 'a \\ 'b | 'a & int | 'c })) | 'd",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [
        "__array({ _0 :? 'a }) -> __array({ _0 :? 'a & int | 'c })",
        "__array({ _0 :? 13 | 42 | bool(false) | 'b }) -> 'd"
      ]
    ],
    "prio": [ "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'a", "13 | 42 | bool(false) | 'b" ],
      [ "13 | 42 | bool(false) | 'b", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'c" ],
    "constr": [
      [ "'c", "__array({ _0 :? 13 | 42 | 'a & int | 'b }) | 'c" ],
      [ "__array({ _0 :? 13 | 42 | 'a & int | 'b }) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "__array({ _0 :? 13 | 42 | 'a & int | 'b })", "any" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "__array({ _0 :? 13 | 42 | 'a & int | 'b })", "any" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [
        "__array({ _0 :? 'c }) -> 'c -> tuple0",
        "__array({ _0 :? 13 | 42 | 'a & int | 'b }) -> 'd"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "13 | 42 | 'a & int | 'b" ],
      [ "13 | 42 | 'a & int | 'b", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [ "'c", "(13 | 42 | 'a & int | 'b -> tuple0) | 'c" ],
      [ "(13 | 42 | 'a & int | 'b -> tuple0) | 'c", "'c" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "13 | 42 | 'a & int | 'b -> tuple0", "str(_abc) -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "str(_abc) | 'a" ], [ "str(_abc) | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "__array({ _0 :? 13 | 42 | str(_abc) | 'a & (int | str(_abc)) | 'b })",
        "__array({ _0 :? 13 | 42 | str(_abc) })"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ (int \\ (13 | 42))" ],
      [ "'a \\ (int \\ (13 | 42))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (13 | 42 | str(_abc))" ],
      [ "'a & (13 | 42 | str(_abc))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a & (~(str(_uminus) | str(_add)), any) & (~str(_uminus), ~tuple2)",
        "(str(_const), any) | (str(_uminus), any) | (str(_add), tuple2)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ ((~(str(_uminus) | str(_add)), any) & (~str(_uminus), ~tuple2) & ~(str(_const), any))"
      ],
      [
        "'a \\ ((~(str(_uminus) | str(_add)), any) & (~str(_uminus), ~tuple2) & ~(str(_const), any))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [ "'a & (~str(_uminus), ~tuple2) & (str(_const), any)", "any, 'b" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ ((~str(_uminus), ~tuple2) & (str(_const), any) & ~(any, 'b))"
      ],
      [
        "'a \\ ((~str(_uminus), ~tuple2) & (str(_const), any) & ~(any, 'b))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a & tuple2 & ~(~str(_uminus), ~tuple2) & ~(str(_uminus), any) & ~(str(_add), tuple2)",
        "(str(_const), any) | (str(_uminus), any) | (str(_add), tuple2)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (tuple2 & ~(~str(_uminus), ~tuple2) & ~(str(_const), any) & ~(str(_uminus), any) & ~(str(_add), tuple2))"
      ],
      [
        "'a \\ (tuple2 & ~(~str(_uminus), ~tuple2) & ~(str(_const), any) & ~(str(_uminus), any) & ~(str(_add), tuple2))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [ "'a & (str(_const), any) & ~(~str(_uminus), ~tuple2)", "any, 'b" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'a",
        "'a \\ ((str(_const), any) & ~(~str(_uminus), ~tuple2) & ~(any, 'b))"
      ],
      [
        "'a \\ ((str(_const), any) & ~(~str(_uminus), ~tuple2) & ~(any, 'b))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a & tuple2 & ~(~(str(_uminus) | str(_add)), any) & ~(str(_uminus), any) & ~(str(_add), tuple2)",
        "(str(_const), any) | (str(_uminus), any) | (str(_add), tuple2)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (tuple2 & ~(~(str(_uminus) | str(_add)), any) & ~(str(_uminus), any) & ~(str(_add), tuple2))"
      ],
      [
        "'a \\ (tuple2 & ~(~(str(_uminus) | str(_add)), any) & ~(str(_uminus), any) & ~(str(_add), tuple2))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a \\ tuple2",
        "(str(_const), any) | (str(_uminus), any) | (str(_add), tuple2)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & tuple2" ], [ "'a & tuple2", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a & (str(_add), tuple2)",
        "(str(_const), any) | (str(_uminus), any) | (str(_add), tuple2)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a & (str(_add), tuple2)", "any, 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ ((str(_add), tuple2) \\ (any, 'b))" ],
      [ "'a \\ ((str(_add), tuple2) \\ (any, 'b))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a & tuple2", "any, 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ (tuple2 \\ (any, 'b))" ],
      [ "'a \\ (tuple2 \\ (any, 'b))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [],
    "constr": [
      [
        "'a & (any, 'b \\ (tuple2 \\ (any, 'c))) & (str(_add), tuple2)",
        "any, 'd"
      ]
    ],
    "prio": [ "'a", "'b", "'c" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a", "'b", "'c" ],
    "constr": [
      [
        "'a",
        "'a \\ ((any, 'b \\ (tuple2 \\ (any, 'c))) & (str(_add), tuple2) & ~(any, 'd))"
      ],
      [
        "'a \\ ((any, 'b \\ (tuple2 \\ (any, 'c))) & (str(_add), tuple2) & ~(any, 'd))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'a & (any, 'b)", "'c, any" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [ "'a", "'a \\ ((any, 'b) \\ ('c, any))" ],
      [ "'a \\ ((any, 'b) \\ ('c, any))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'a", "'b -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'a", "'a & ('b -> 'c)" ], [ "'a & ('b -> 'c)", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [ [ "'a & ('c -> 'd)", "'b -> 'e" ] ],
    "prio": [ "'a", "'b", "'c", "'d" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'b", "'c", "'d" ],
    "constr": [
      [ "'a", "'a & (~('c -> 'd) | ('b -> 'e))" ],
      [ "'a & (~('c -> 'd) | ('b -> 'e))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a", "any" ], [ "'b", "any" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "('a, 'b) -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a & (str(_uminus), any)",
        "(str(_const), any) | (str(_uminus), any) | (str(_add), tuple2)"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "'a & (str(_uminus), any)", "any, 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ ((str(_uminus), any) \\ (any, 'b))" ],
      [ "'a \\ ((str(_uminus), any) \\ (any, 'b))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g" ],
    "mono": [],
    "constr": [ [ "'a & ('b -> 'e & int) & ('c -> 'd & int)", "'f -> 'g" ] ],
    "prio": [ "'a", "'b", "'c", "'d", "'e", "'f" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g" ],
    "mono": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "constr": [
      [ "'a", "'a & (~('c -> 'd & int) | ~('b -> 'e & int) | ('f -> 'g))" ],
      [ "'a & (~('c -> 'd & int) | ~('b -> 'e & int) | ('f -> 'g))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [ [ "0", "any" ], [ "'a", "any" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "(int, int) -> int", "(0, 'a) -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "empty" ] ] },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g", "'h", "'i", "'j" ],
    "mono": [],
    "constr": [
      [
        "'a & ((any, 'i) & (str(_uminus), any) | (any, 'd \\ (tuple2 & (~(any, 'e) | ~('f, any)))) & (str(_add), tuple2) | (any, 'c) & (str(_const), any)) -> int | 'c",
        "'b & ('i -> 'j & int) & ('e -> 'h & int) & ('f -> 'g & int)"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'f & ((any, x6) & (str(_uminus), any) | (any, x7) & (str(_add), tuple2) | (any, x8) & (str(_const), any)) | 'e & ((any, x6) & (str(_uminus), any) | (any, x7) & (str(_add), tuple2) | (any, x8) & (str(_const), any)) | 'd & ((any, x6) & (str(_uminus), any) | (any, x7) & (str(_add), tuple2) | (any, x8) & (str(_const), any)) | 'a where x1 = 'd & ((any, x6) & (str(_uminus), any) | (any, 'c \\ (tuple2 & (~(any, x1) | ~(x2, any)))) & (str(_add), tuple2) | (any, x8) & (str(_const), any)) and x2 = 'e & ((any, x6) & (str(_uminus), any) | (any, 'c \\ (tuple2 & (~(any, x1) | ~(x2, any)))) & (str(_add), tuple2) | (any, x8) & (str(_const), any)) and x3 = 'd & ((any, x6) & (str(_uminus), any) | (any, 'c \\ (tuple2 & (~(any, x3) | ~(x4, any)))) & (str(_add), tuple2) | (any, x8) & (str(_const), any)) and x4 = 'e & ((any, x6) & (str(_uminus), any) | (any, 'c \\ (tuple2 & (~(any, x3) | ~(x4, any)))) & (str(_add), tuple2) | (any, x8) & (str(_const), any)) and x5 = 'd & ((any, x6) & (str(_uminus), any) | (any, 'c \\ (tuple2 & (~(any, x5) | ~(x2, any)))) & (str(_add), tuple2) | (any, x8) & (str(_const), any)) and x6 = 'f & ((any, x6) & (str(_uminus), any) | (any, 'c \\ (tuple2 & (~(any, x5) | ~(x2, any)))) & (str(_add), tuple2) | (any, x8) & (str(_const), any)) and x7 = 'c \\ (tuple2 & (~(any, 'd & ((any, x6) & (str(_uminus), any) | (any, x7) & (str(_add), tuple2) | (any, x8) & (str(_const), any))) | ~(x4, any))) and x8 = 'b & int"
      ],
      [
        "'f & ((any, x4) & (str(_uminus), any) | (any, x8) & (str(_add), tuple2) | (any, x6) & (str(_const), any)) | 'e & ((any, x4) & (str(_uminus), any) | (any, x8) & (str(_add), tuple2) | (any, x6) & (str(_const), any)) | 'd & ((any, x4) & (str(_uminus), any) | (any, x8) & (str(_add), tuple2) | (any, x6) & (str(_const), any)) | 'a where x1 = 'd & ((any, x4) & (str(_uminus), any) | (any, 'c \\ (tuple2 & (~(any, x1) | ~(x2, any)))) & (str(_add), tuple2) | (any, x6) & (str(_const), any)) and x2 = 'e & ((any, x4) & (str(_uminus), any) | (any, 'c \\ (tuple2 & (~(any, x1) | ~(x2, any)))) & (str(_add), tuple2) | (any, x6) & (str(_const), any)) and x3 = 'd & ((any, x4) & (str(_uminus), any) | (any, 'c \\ (tuple2 & (~(any, x3) | ~(x2, any)))) & (str(_add), tuple2) | (any, x6) & (str(_const), any)) and x4 = 'f & ((any, x4) & (str(_uminus), any) | (any, 'c \\ (tuple2 & (~(any, x3) | ~(x2, any)))) & (str(_add), tuple2) | (any, x6) & (str(_const), any)) and x5 = 'd & ((any, x4) & (str(_uminus), any) | (any, 'c \\ (tuple2 & (~(any, x5) | ~(x7, any)))) & (str(_add), tuple2) | (any, x6) & (str(_const), any)) and x6 = 'b & int and x7 = 'e & ((any, x4) & (str(_uminus), any) | (any, 'c \\ (tuple2 & (~(any, x5) | ~(x7, any)))) & (str(_add), tuple2) | (any, x6) & (str(_const), any)) and x8 = 'c \\ (tuple2 & (~(any, 'd & ((any, x4) & (str(_uminus), any) | (any, x8) & (str(_add), tuple2) | (any, x6) & (str(_const), any))) | ~(x7, any)))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "('g & ((any, x9) & (str(_uminus), any) | (any, x6) & (str(_add), tuple2) | (any, x7) & (str(_const), any)) | 'f & ((any, x9) & (str(_uminus), any) | (any, x6) & (str(_add), tuple2) | (any, x7) & (str(_const), any)) | 'e & ((any, x9) & (str(_uminus), any) | (any, x6) & (str(_add), tuple2) | (any, x7) & (str(_const), any)) | 'a & ((any, x9) & (str(_uminus), any) | (any, x6) & (str(_add), tuple2) | (any, x7) & (str(_const), any)) -> int) | 'b where x1 = 'e & ((any, x9) & (str(_uminus), any) | (any, 'd \\ (tuple2 & (~(any, x1) | ~(x3, any)))) & (str(_add), tuple2) | (any, x7) & (str(_const), any)) and x2 = 'e & ((any, x9) & (str(_uminus), any) | (any, 'd \\ (tuple2 & (~(any, x2) | ~(x4, any)))) & (str(_add), tuple2) | (any, x7) & (str(_const), any)) and x3 = 'f & ((any, x9) & (str(_uminus), any) | (any, 'd \\ (tuple2 & (~(any, x1) | ~(x3, any)))) & (str(_add), tuple2) | (any, x7) & (str(_const), any)) and x4 = 'f & ((any, x9) & (str(_uminus), any) | (any, 'd \\ (tuple2 & (~(any, x2) | ~(x4, any)))) & (str(_add), tuple2) | (any, x7) & (str(_const), any)) and x5 = 'e & ((any, x9) & (str(_uminus), any) | (any, 'd \\ (tuple2 & (~(any, x5) | ~(x4, any)))) & (str(_add), tuple2) | (any, x7) & (str(_const), any)) and x6 = 'd \\ (tuple2 & (~(any, x5) | ~(x4, any))) and x7 = 'c & int and x8 = 'e & ((any, x9) & (str(_uminus), any) | (any, 'd \\ (tuple2 & (~(any, x8) | ~(x3, any)))) & (str(_add), tuple2) | (any, x7) & (str(_const), any)) and x9 = 'g & ((any, x9) & (str(_uminus), any) | (any, 'd \\ (tuple2 & (~(any, x8) | ~(x3, any)))) & (str(_add), tuple2) | (any, x7) & (str(_const), any))"
      ],
      [
        "('g & ((any, x4) & (str(_uminus), any) | (any, x8) & (str(_add), tuple2) | (any, x9) & (str(_const), any)) | 'f & ((any, x4) & (str(_uminus), any) | (any, x8) & (str(_add), tuple2) | (any, x9) & (str(_const), any)) | 'e & ((any, x4) & (str(_uminus), any) | (any, x8) & (str(_add), tuple2) | (any, x9) & (str(_const), any)) | 'a & ((any, x4) & (str(_uminus), any) | (any, x8) & (str(_add), tuple2) | (any, x9) & (str(_const), any)) -> int) | 'b where x1 = 'e & ((any, x4) & (str(_uminus), any) | (any, 'd \\ (tuple2 & (~(any, x1) | ~(x2, any)))) & (str(_add), tuple2) | (any, x9) & (str(_const), any)) and x2 = 'f & ((any, x4) & (str(_uminus), any) | (any, 'd \\ (tuple2 & (~(any, x1) | ~(x2, any)))) & (str(_add), tuple2) | (any, x9) & (str(_const), any)) and x3 = 'e & ((any, x4) & (str(_uminus), any) | (any, 'd \\ (tuple2 & (~(any, x3) | ~(x2, any)))) & (str(_add), tuple2) | (any, x9) & (str(_const), any)) and x4 = 'g & ((any, x4) & (str(_uminus), any) | (any, 'd \\ (tuple2 & (~(any, x3) | ~(x2, any)))) & (str(_add), tuple2) | (any, x9) & (str(_const), any)) and x5 = 'e & ((any, x4) & (str(_uminus), any) | (any, 'd \\ (tuple2 & (~(any, x5) | ~(x7, any)))) & (str(_add), tuple2) | (any, x9) & (str(_const), any)) and x6 = 'e & ((any, x4) & (str(_uminus), any) | (any, 'd \\ (tuple2 & (~(any, x6) | ~(x7, any)))) & (str(_add), tuple2) | (any, x9) & (str(_const), any)) and x7 = 'f & ((any, x4) & (str(_uminus), any) | (any, 'd \\ (tuple2 & (~(any, x5) | ~(x7, any)))) & (str(_add), tuple2) | (any, x9) & (str(_const), any)) and x8 = 'd \\ (tuple2 & (~(any, x6) | ~(x7, any))) and x9 = 'c & int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "x8 where x1 = 'c & ((any, x4) & (str(_uminus), any) | (any, 'b \\ (tuple2 & (~(any, x1) | ~(x3, any)))) & (str(_add), tuple2) | (any, x6) & (str(_const), any)) and x2 = 'c & ((any, x4) & (str(_uminus), any) | (any, 'b \\ (tuple2 & (~(any, x2) | ~(x3, any)))) & (str(_add), tuple2) | (any, x6) & (str(_const), any)) and x3 = 'd & ((any, x4) & (str(_uminus), any) | (any, 'b \\ (tuple2 & (~(any, x1) | ~(x3, any)))) & (str(_add), tuple2) | (any, x6) & (str(_const), any)) and x4 = 'e & ((any, x4) & (str(_uminus), any) | (any, 'b \\ (tuple2 & (~(any, x2) | ~(x3, any)))) & (str(_add), tuple2) | (any, x6) & (str(_const), any)) and x5 = 'c & ((any, x4) & (str(_uminus), any) | (any, 'b \\ (tuple2 & (~(any, x5) | ~(x7, any)))) & (str(_add), tuple2) | (any, x6) & (str(_const), any)) and x6 = 'a & int and x7 = 'd & ((any, x4) & (str(_uminus), any) | (any, 'b \\ (tuple2 & (~(any, x5) | ~(x7, any)))) & (str(_add), tuple2) | (any, x6) & (str(_const), any)) and x8 = 'c & ((any, x4) & (str(_uminus), any) | (any, 'b \\ (tuple2 & (~(any, x8) | ~(x7, any)))) & (str(_add), tuple2) | (any, x6) & (str(_const), any))"
      ],
      [
        "x8 where x1 = 'c & ((any, x4) & (str(_uminus), any) | (any, 'b \\ (tuple2 & (~(any, x1) | ~(x3, any)))) & (str(_add), tuple2) | (any, x7) & (str(_const), any)) and x2 = 'c & ((any, x4) & (str(_uminus), any) | (any, 'b \\ (tuple2 & (~(any, x2) | ~(x3, any)))) & (str(_add), tuple2) | (any, x7) & (str(_const), any)) and x3 = 'd & ((any, x4) & (str(_uminus), any) | (any, 'b \\ (tuple2 & (~(any, x2) | ~(x3, any)))) & (str(_add), tuple2) | (any, x7) & (str(_const), any)) and x4 = 'e & ((any, x4) & (str(_uminus), any) | (any, 'b \\ (tuple2 & (~(any, x1) | ~(x3, any)))) & (str(_add), tuple2) | (any, x7) & (str(_const), any)) and x5 = 'c & ((any, x4) & (str(_uminus), any) | (any, 'b \\ (tuple2 & (~(any, x5) | ~(x6, any)))) & (str(_add), tuple2) | (any, x7) & (str(_const), any)) and x6 = 'd & ((any, x4) & (str(_uminus), any) | (any, 'b \\ (tuple2 & (~(any, x5) | ~(x6, any)))) & (str(_add), tuple2) | (any, x7) & (str(_const), any)) and x7 = 'a & int and x8 = 'c & ((any, x4) & (str(_uminus), any) | (any, 'b \\ (tuple2 & (~(any, x8) | ~(x6, any)))) & (str(_add), tuple2) | (any, x7) & (str(_const), any))",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'d" ],
    "constr": [
      [
        "'d",
        "x7 where x1 = 'c & ((any, x5) & (str(_uminus), any) | (any, 'b \\ (tuple2 & (~(any, x1) | ~(x7, any)))) & (str(_add), tuple2) | (any, x6) & (str(_const), any)) and x2 = 'c & ((any, x5) & (str(_uminus), any) | (any, 'b \\ (tuple2 & (~(any, x2) | ~(x3, any)))) & (str(_add), tuple2) | (any, x6) & (str(_const), any)) and x3 = 'd & ((any, x5) & (str(_uminus), any) | (any, 'b \\ (tuple2 & (~(any, x2) | ~(x3, any)))) & (str(_add), tuple2) | (any, x6) & (str(_const), any)) and x4 = 'c & ((any, x5) & (str(_uminus), any) | (any, 'b \\ (tuple2 & (~(any, x4) | ~(x3, any)))) & (str(_add), tuple2) | (any, x6) & (str(_const), any)) and x5 = 'e & ((any, x5) & (str(_uminus), any) | (any, 'b \\ (tuple2 & (~(any, x4) | ~(x3, any)))) & (str(_add), tuple2) | (any, x6) & (str(_const), any)) and x6 = 'a & int and x7 = 'd & ((any, x5) & (str(_uminus), any) | (any, 'b \\ (tuple2 & (~(any, x1) | ~(x7, any)))) & (str(_add), tuple2) | (any, x6) & (str(_const), any))"
      ],
      [
        "x7 where x1 = 'c & ((any, x5) & (str(_uminus), any) | (any, 'b \\ (tuple2 & (~(any, x1) | ~(x2, any)))) & (str(_add), tuple2) | (any, x6) & (str(_const), any)) and x2 = 'd & ((any, x5) & (str(_uminus), any) | (any, 'b \\ (tuple2 & (~(any, x1) | ~(x2, any)))) & (str(_add), tuple2) | (any, x6) & (str(_const), any)) and x3 = 'c & ((any, x5) & (str(_uminus), any) | (any, 'b \\ (tuple2 & (~(any, x3) | ~(x2, any)))) & (str(_add), tuple2) | (any, x6) & (str(_const), any)) and x4 = 'c & ((any, x5) & (str(_uminus), any) | (any, 'b \\ (tuple2 & (~(any, x4) | ~(x7, any)))) & (str(_add), tuple2) | (any, x6) & (str(_const), any)) and x5 = 'e & ((any, x5) & (str(_uminus), any) | (any, 'b \\ (tuple2 & (~(any, x3) | ~(x2, any)))) & (str(_add), tuple2) | (any, x6) & (str(_const), any)) and x6 = 'a & int and x7 = 'd & ((any, x5) & (str(_uminus), any) | (any, 'b \\ (tuple2 & (~(any, x4) | ~(x7, any)))) & (str(_add), tuple2) | (any, x6) & (str(_const), any))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'e" ],
    "constr": [
      [
        "'e",
        "x5 where x1 = 'c & ((any, x5) & (str(_uminus), any) | (any, 'b \\ (tuple2 & (~(any, x1) | ~(x4, any)))) & (str(_add), tuple2) | (any, x3) & (str(_const), any)) and x2 = 'c & ((any, x5) & (str(_uminus), any) | (any, 'b \\ (tuple2 & (~(any, x2) | ~(x4, any)))) & (str(_add), tuple2) | (any, x3) & (str(_const), any)) and x3 = 'a & int and x4 = 'd & ((any, x5) & (str(_uminus), any) | (any, 'b \\ (tuple2 & (~(any, x1) | ~(x4, any)))) & (str(_add), tuple2) | (any, x3) & (str(_const), any)) and x5 = 'e & ((any, x5) & (str(_uminus), any) | (any, 'b \\ (tuple2 & (~(any, x2) | ~(x4, any)))) & (str(_add), tuple2) | (any, x3) & (str(_const), any))"
      ],
      [
        "x5 where x1 = 'c & ((any, x5) & (str(_uminus), any) | (any, 'b \\ (tuple2 & (~(any, x1) | ~(x3, any)))) & (str(_add), tuple2) | (any, x4) & (str(_const), any)) and x2 = 'c & ((any, x5) & (str(_uminus), any) | (any, 'b \\ (tuple2 & (~(any, x2) | ~(x3, any)))) & (str(_add), tuple2) | (any, x4) & (str(_const), any)) and x3 = 'd & ((any, x5) & (str(_uminus), any) | (any, 'b \\ (tuple2 & (~(any, x2) | ~(x3, any)))) & (str(_add), tuple2) | (any, x4) & (str(_const), any)) and x4 = 'a & int and x5 = 'e & ((any, x5) & (str(_uminus), any) | (any, 'b \\ (tuple2 & (~(any, x1) | ~(x3, any)))) & (str(_add), tuple2) | (any, x4) & (str(_const), any))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'d & ((any, x1) & (str(_uminus), any) | (any, x2) & (str(_const), any)) | 'c & ((any, x1) & (str(_uminus), any) | (any, x2) & (str(_const), any)) | 'a where x1 = 'd & ((any, x1) & (str(_uminus), any) | (any, x2) & (str(_const), any)) and x2 = 'b & int"
      ],
      [
        "'d & ((any, x2) & (str(_uminus), any) | (any, x1) & (str(_const), any)) | 'c & ((any, x2) & (str(_uminus), any) | (any, x1) & (str(_const), any)) | 'a where x1 = 'b & int and x2 = 'd & ((any, x2) & (str(_uminus), any) | (any, x1) & (str(_const), any))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "('e & ((any, x2) & (str(_uminus), any) | (any, x1) & (str(_const), any)) | 'd & ((any, x2) & (str(_uminus), any) | (any, x1) & (str(_const), any)) | 'a & ((any, x2) & (str(_uminus), any) | (any, x1) & (str(_const), any)) -> int) | 'b where x1 = 'c & int and x2 = 'e & ((any, x2) & (str(_uminus), any) | (any, x1) & (str(_const), any))"
      ],
      [
        "('e & ((any, x1) & (str(_uminus), any) | (any, x2) & (str(_const), any)) | 'd & ((any, x1) & (str(_uminus), any) | (any, x2) & (str(_const), any)) | 'a & ((any, x1) & (str(_uminus), any) | (any, x2) & (str(_const), any)) -> int) | 'b where x1 = 'e & ((any, x1) & (str(_uminus), any) | (any, x2) & (str(_const), any)) and x2 = 'c & int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "'b & ((any, x1) & (str(_uminus), any) | (any, 'a & int) & (str(_const), any)) where x1 = 'c & ((any, x1) & (str(_uminus), any) | (any, 'a & int) & (str(_const), any))"
      ],
      [
        "'b & ((any, x1) & (str(_uminus), any) | (any, 'a & int) & (str(_const), any)) where x1 = 'c & ((any, x1) & (str(_uminus), any) | (any, 'a & int) & (str(_const), any))",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "x1 where x1 = 'b & ((any, x1) & (str(_uminus), any) | (any, 'a & int) & (str(_const), any))"
      ],
      [
        "x1 where x1 = 'b & ((any, x1) & (str(_uminus), any) | (any, 'a & int) & (str(_const), any))",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'d & ((any, x1) & (str(_uminus), any) | (any, x2) & (str(_const), any)) | 'c & ((any, x1) & (str(_uminus), any) | (any, x2) & (str(_const), any)) | 'a where x1 = 'd & ((any, x1) & (str(_uminus), any) | (any, x2) & (str(_const), any)) and x2 = 'b & int"
      ],
      [
        "'d & ((any, x2) & (str(_uminus), any) | (any, x1) & (str(_const), any)) | 'c & ((any, x2) & (str(_uminus), any) | (any, x1) & (str(_const), any)) | 'a where x1 = 'b & int and x2 = 'd & ((any, x2) & (str(_uminus), any) | (any, x1) & (str(_const), any))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "('e & ((any, x1) & (str(_uminus), any) | (any, x2) & (str(_const), any)) | 'd & ((any, x1) & (str(_uminus), any) | (any, x2) & (str(_const), any)) | 'a & ((any, x1) & (str(_uminus), any) | (any, x2) & (str(_const), any)) -> int) | 'b where x1 = 'e & ((any, x1) & (str(_uminus), any) | (any, x2) & (str(_const), any)) and x2 = 'c & int"
      ],
      [
        "('e & ((any, x1) & (str(_uminus), any) | (any, x2) & (str(_const), any)) | 'd & ((any, x1) & (str(_uminus), any) | (any, x2) & (str(_const), any)) | 'a & ((any, x1) & (str(_uminus), any) | (any, x2) & (str(_const), any)) -> int) | 'b where x1 = 'e & ((any, x1) & (str(_uminus), any) | (any, x2) & (str(_const), any)) and x2 = 'c & int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "'b & ((any, x1) & (str(_uminus), any) | (any, 'a & int) & (str(_const), any)) where x1 = 'c & ((any, x1) & (str(_uminus), any) | (any, 'a & int) & (str(_const), any))"
      ],
      [
        "'b & ((any, x1) & (str(_uminus), any) | (any, 'a & int) & (str(_const), any)) where x1 = 'c & ((any, x1) & (str(_uminus), any) | (any, 'a & int) & (str(_const), any))",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "x1 where x1 = 'b & ((any, x1) & (str(_uminus), any) | (any, 'a & int) & (str(_const), any))"
      ],
      [
        "x1 where x1 = 'b & ((any, x1) & (str(_uminus), any) | (any, 'a & int) & (str(_const), any))",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'c & ((any, x1) & (str(_uminus), any) | (any, 'b & int) & (str(_const), any)) | 'a where x1 = 'c & ((any, x1) & (str(_uminus), any) | (any, 'b & int) & (str(_const), any))"
      ],
      [
        "'c & ((any, x1) & (str(_uminus), any) | (any, 'b & int) & (str(_const), any)) | 'a where x1 = 'c & ((any, x1) & (str(_uminus), any) | (any, 'b & int) & (str(_const), any))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "('d & ((any, x1) & (str(_uminus), any) | (any, x2) & (str(_const), any)) | 'a & ((any, x1) & (str(_uminus), any) | (any, x2) & (str(_const), any)) -> int) | 'b where x1 = 'd & ((any, x1) & (str(_uminus), any) | (any, x2) & (str(_const), any)) and x2 = 'c & int"
      ],
      [
        "('d & ((any, x1) & (str(_uminus), any) | (any, x2) & (str(_const), any)) | 'a & ((any, x1) & (str(_uminus), any) | (any, x2) & (str(_const), any)) -> int) | 'b where x1 = 'd & ((any, x1) & (str(_uminus), any) | (any, x2) & (str(_const), any)) and x2 = 'c & int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "x1 where x1 = 'b & ((any, x1) & (str(_uminus), any) | (any, 'a & int) & (str(_const), any))"
      ],
      [
        "x1 where x1 = 'b & ((any, x1) & (str(_uminus), any) | (any, 'a & int) & (str(_const), any))",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'e & ((any, x3) & (str(_add), tuple2) | (any, x4) & (str(_const), any)) | 'd & ((any, x3) & (str(_add), tuple2) | (any, x4) & (str(_const), any)) | 'a where x1 = 'd & ((any, 'c \\ (tuple2 & (~(any, x1) | ~(x2, any)))) & (str(_add), tuple2) | (any, x4) & (str(_const), any)) and x2 = 'e & ((any, 'c \\ (tuple2 & (~(any, x1) | ~(x2, any)))) & (str(_add), tuple2) | (any, x4) & (str(_const), any)) and x3 = 'c \\ (tuple2 & (~(any, 'd & ((any, x3) & (str(_add), tuple2) | (any, x4) & (str(_const), any))) | ~(x2, any))) and x4 = 'b & int"
      ],
      [
        "'e & ((any, x3) & (str(_add), tuple2) | (any, x4) & (str(_const), any)) | 'd & ((any, x3) & (str(_add), tuple2) | (any, x4) & (str(_const), any)) | 'a where x1 = 'd & ((any, 'c \\ (tuple2 & (~(any, x1) | ~(x2, any)))) & (str(_add), tuple2) | (any, x4) & (str(_const), any)) and x2 = 'e & ((any, 'c \\ (tuple2 & (~(any, x1) | ~(x2, any)))) & (str(_add), tuple2) | (any, x4) & (str(_const), any)) and x3 = 'c \\ (tuple2 & (~(any, 'd & ((any, x3) & (str(_add), tuple2) | (any, x4) & (str(_const), any))) | ~(x2, any))) and x4 = 'b & int",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "('f & ((any, x4) & (str(_add), tuple2) | (any, x5) & (str(_const), any)) | 'e & ((any, x4) & (str(_add), tuple2) | (any, x5) & (str(_const), any)) | 'a & ((any, x4) & (str(_add), tuple2) | (any, x5) & (str(_const), any)) -> int) | 'b where x1 = 'e & ((any, 'd \\ (tuple2 & (~(any, x1) | ~(x3, any)))) & (str(_add), tuple2) | (any, x5) & (str(_const), any)) and x2 = 'e & ((any, 'd \\ (tuple2 & (~(any, x2) | ~(x3, any)))) & (str(_add), tuple2) | (any, x5) & (str(_const), any)) and x3 = 'f & ((any, 'd \\ (tuple2 & (~(any, x1) | ~(x3, any)))) & (str(_add), tuple2) | (any, x5) & (str(_const), any)) and x4 = 'd \\ (tuple2 & (~(any, x2) | ~(x3, any))) and x5 = 'c & int"
      ],
      [
        "('f & ((any, x4) & (str(_add), tuple2) | (any, x5) & (str(_const), any)) | 'e & ((any, x4) & (str(_add), tuple2) | (any, x5) & (str(_const), any)) | 'a & ((any, x4) & (str(_add), tuple2) | (any, x5) & (str(_const), any)) -> int) | 'b where x1 = 'e & ((any, 'd \\ (tuple2 & (~(any, x1) | ~(x3, any)))) & (str(_add), tuple2) | (any, x5) & (str(_const), any)) and x2 = 'e & ((any, 'd \\ (tuple2 & (~(any, x2) | ~(x3, any)))) & (str(_add), tuple2) | (any, x5) & (str(_const), any)) and x3 = 'f & ((any, 'd \\ (tuple2 & (~(any, x1) | ~(x3, any)))) & (str(_add), tuple2) | (any, x5) & (str(_const), any)) and x4 = 'd \\ (tuple2 & (~(any, x2) | ~(x3, any))) and x5 = 'c & int",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "x4 where x1 = 'c & ((any, 'b \\ (tuple2 & (~(any, x1) | ~(x2, any)))) & (str(_add), tuple2) | (any, x3) & (str(_const), any)) and x2 = 'd & ((any, 'b \\ (tuple2 & (~(any, x1) | ~(x2, any)))) & (str(_add), tuple2) | (any, x3) & (str(_const), any)) and x3 = 'a & int and x4 = 'c & ((any, 'b \\ (tuple2 & (~(any, x4) | ~(x2, any)))) & (str(_add), tuple2) | (any, x3) & (str(_const), any))"
      ],
      [
        "x4 where x1 = 'c & ((any, 'b \\ (tuple2 & (~(any, x1) | ~(x2, any)))) & (str(_add), tuple2) | (any, x3) & (str(_const), any)) and x2 = 'd & ((any, 'b \\ (tuple2 & (~(any, x1) | ~(x2, any)))) & (str(_add), tuple2) | (any, x3) & (str(_const), any)) and x3 = 'a & int and x4 = 'c & ((any, 'b \\ (tuple2 & (~(any, x4) | ~(x2, any)))) & (str(_add), tuple2) | (any, x3) & (str(_const), any))",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'d" ],
    "constr": [
      [
        "'d",
        "x2 where x1 = 'c & ((any, 'b \\ (tuple2 & (~(any, x1) | ~(x2, any)))) & (str(_add), tuple2) | (any, 'a & int) & (str(_const), any)) and x2 = 'd & ((any, 'b \\ (tuple2 & (~(any, x1) | ~(x2, any)))) & (str(_add), tuple2) | (any, 'a & int) & (str(_const), any))"
      ],
      [
        "x2 where x1 = 'c & ((any, 'b \\ (tuple2 & (~(any, x1) | ~(x2, any)))) & (str(_add), tuple2) | (any, 'a & int) & (str(_const), any)) and x2 = 'd & ((any, 'b \\ (tuple2 & (~(any, x1) | ~(x2, any)))) & (str(_add), tuple2) | (any, 'a & int) & (str(_const), any))",
        "'d"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'c & (any, 'b & int) & (str(_const), any) | 'a" ],
      [ "'c & (any, 'b & int) & (str(_const), any) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "('d & (any, 'c & int) & (str(_const), any) | 'a & (any, 'c & int) & (str(_const), any) -> int) | 'b"
      ],
      [
        "('d & (any, 'c & int) & (str(_const), any) | 'a & (any, 'c & int) & (str(_const), any) -> int) | 'b",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "'b & (any, 'a & int) & (str(_const), any)" ],
      [ "'b & (any, 'a & int) & (str(_const), any)", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'c & (any, 'b & int) & (str(_const), any) | 'a" ],
      [ "'c & (any, 'b & int) & (str(_const), any) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "('d & (any, 'c & int) & (str(_const), any) | 'a & (any, 'c & int) & (str(_const), any) -> int) | 'b"
      ],
      [
        "('d & (any, 'c & int) & (str(_const), any) | 'a & (any, 'c & int) & (str(_const), any) -> int) | 'b",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "'b & (any, 'a & int) & (str(_const), any)" ],
      [ "'b & (any, 'a & int) & (str(_const), any)", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'b" ],
    "constr": [
      [ "'b", "('a & (any, 'c) & (str(_const), any) -> int | 'c) | 'b" ],
      [ "('a & (any, 'c) & (str(_const), any) -> int | 'c) | 'b", "'b" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(any, int) & (str(_const), any) -> int",
        "(any, 'a) & (str(_const), any) -> int | 'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(any, int) & (str(_const), any) -> int",
        "(any, 'a) & (str(_const), any) -> int | 'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(any, ~(tuple2 & (~(any, x4) | ~(x5, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) -> int where x1 = (any, ~(tuple2 & (~(any, x1) | ~(x5, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x2 = (any, ~(tuple2 & (~(any, x2) | ~(x3, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x3 = (any, ~(tuple2 & (~(any, x2) | ~(x3, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x4 = (any, ~(tuple2 & (~(any, x4) | ~(x3, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x5 = (any, ~(tuple2 & (~(any, x1) | ~(x5, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any)",
        "(any, 'a) & (str(_const), any) -> int | 'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(any, x1) & (str(_uminus), any) | (any, int) & (str(_const), any) -> int where x1 = (any, x1) & (str(_uminus), any) | (any, int) & (str(_const), any)",
        "(any, 'a) & (str(_const), any) -> int | 'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(any, x1) & (str(_uminus), any) | (any, int) & (str(_const), any) -> int where x1 = (any, x1) & (str(_uminus), any) | (any, int) & (str(_const), any)",
        "(any, 'a) & (str(_const), any) -> int | 'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(any, x1) & (str(_uminus), any) | (any, int) & (str(_const), any) -> int where x1 = (any, x1) & (str(_uminus), any) | (any, int) & (str(_const), any)",
        "(any, 'a) & (str(_const), any) -> int | 'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "(any, x17) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x12) | ~(x15, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) -> int where x1 = (any, x17) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x1) | ~(x2, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x2 = (any, x17) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x1) | ~(x2, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x3 = (any, x14) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x3) | ~(x15, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x4 = (any, x14) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x4) | ~(x5, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x5 = (any, x14) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x4) | ~(x5, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x6 = (any, x9) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x6) | ~(x8, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x7 = (any, x9) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x7) | ~(x8, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x8 = (any, x9) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x7) | ~(x8, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x9 = (any, x9) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x6) | ~(x8, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x10 = (any, x9) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x10) | ~(x11, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x11 = (any, x9) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x10) | ~(x11, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x12 = (any, x9) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x12) | ~(x11, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x13 = (any, x14) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x13) | ~(x5, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x14 = (any, x14) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x13) | ~(x5, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x15 = (any, x14) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x3) | ~(x15, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x16 = (any, x17) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x16) | ~(x2, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x17 = (any, x17) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x16) | ~(x2, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any)",
        "(any, 'a) & (str(_const), any) -> int | 'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "(any, 'a) & (str(_const), any) -> int | 'a",
        "(any, int) & (str(_const), any) -> int"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "(any, 'a) & (str(_const), any) -> int | 'a",
        "(any, int) & (str(_const), any) -> int"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "(any, 'a) & (str(_const), any) -> int | 'a",
        "(any, ~(tuple2 & (~(any, x4) | ~(x5, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) -> int where x1 = (any, ~(tuple2 & (~(any, x1) | ~(x5, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x2 = (any, ~(tuple2 & (~(any, x2) | ~(x3, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x3 = (any, ~(tuple2 & (~(any, x2) | ~(x3, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x4 = (any, ~(tuple2 & (~(any, x4) | ~(x3, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x5 = (any, ~(tuple2 & (~(any, x1) | ~(x5, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "(any, x1) & (str(_uminus), any) | (any, int) & (str(_const), any) -> int where x1 = (any, x1) & (str(_uminus), any) | (any, int) & (str(_const), any)",
        "(any, ~(tuple2 & (~(any, x4) | ~(x5, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) -> int where x1 = (any, ~(tuple2 & (~(any, x1) | ~(x5, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x2 = (any, ~(tuple2 & (~(any, x2) | ~(x3, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x3 = (any, ~(tuple2 & (~(any, x2) | ~(x3, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x4 = (any, ~(tuple2 & (~(any, x4) | ~(x3, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x5 = (any, ~(tuple2 & (~(any, x1) | ~(x5, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "(any, x1) & (str(_uminus), any) | (any, int) & (str(_const), any) -> int where x1 = (any, x1) & (str(_uminus), any) | (any, int) & (str(_const), any)",
        "(any, ~(tuple2 & (~(any, x4) | ~(x5, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) -> int where x1 = (any, ~(tuple2 & (~(any, x1) | ~(x5, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x2 = (any, ~(tuple2 & (~(any, x2) | ~(x3, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x3 = (any, ~(tuple2 & (~(any, x2) | ~(x3, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x4 = (any, ~(tuple2 & (~(any, x4) | ~(x3, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x5 = (any, ~(tuple2 & (~(any, x1) | ~(x5, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "(any, x1) & (str(_uminus), any) | (any, int) & (str(_const), any) -> int where x1 = (any, x1) & (str(_uminus), any) | (any, int) & (str(_const), any)",
        "(any, ~(tuple2 & (~(any, x4) | ~(x5, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) -> int where x1 = (any, ~(tuple2 & (~(any, x1) | ~(x5, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x2 = (any, ~(tuple2 & (~(any, x2) | ~(x3, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x3 = (any, ~(tuple2 & (~(any, x2) | ~(x3, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x4 = (any, ~(tuple2 & (~(any, x4) | ~(x3, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x5 = (any, ~(tuple2 & (~(any, x1) | ~(x5, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "(any, x17) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x12) | ~(x15, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) -> int where x1 = (any, x17) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x1) | ~(x2, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x2 = (any, x17) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x1) | ~(x2, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x3 = (any, x14) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x3) | ~(x15, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x4 = (any, x14) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x4) | ~(x5, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x5 = (any, x14) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x4) | ~(x5, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x6 = (any, x9) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x6) | ~(x8, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x7 = (any, x9) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x7) | ~(x8, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x8 = (any, x9) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x7) | ~(x8, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x9 = (any, x9) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x6) | ~(x8, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x10 = (any, x9) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x10) | ~(x11, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x11 = (any, x9) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x10) | ~(x11, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x12 = (any, x9) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x12) | ~(x11, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x13 = (any, x14) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x13) | ~(x5, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x14 = (any, x14) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x13) | ~(x5, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x15 = (any, x14) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x3) | ~(x15, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x16 = (any, x17) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x16) | ~(x2, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x17 = (any, x17) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x16) | ~(x2, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any)",
        "(any, ~(tuple2 & (~(any, x4) | ~(x5, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) -> int where x1 = (any, ~(tuple2 & (~(any, x1) | ~(x5, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x2 = (any, ~(tuple2 & (~(any, x2) | ~(x3, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x3 = (any, ~(tuple2 & (~(any, x2) | ~(x3, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x4 = (any, ~(tuple2 & (~(any, x4) | ~(x3, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x5 = (any, ~(tuple2 & (~(any, x1) | ~(x5, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any)"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "(any, 'a) & (str(_const), any) -> int | 'a",
        "(any, x1) & (str(_uminus), any) | (any, int) & (str(_const), any) -> int where x1 = (any, x1) & (str(_uminus), any) | (any, int) & (str(_const), any)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "(any, x1) & (str(_uminus), any) | (any, int) & (str(_const), any) -> int where x1 = (any, x1) & (str(_uminus), any) | (any, int) & (str(_const), any)",
        "(any, x1) & (str(_uminus), any) | (any, int) & (str(_const), any) -> int where x1 = (any, x1) & (str(_uminus), any) | (any, int) & (str(_const), any)"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "(any, 'a) & (str(_const), any) -> int | 'a",
        "(any, x1) & (str(_uminus), any) | (any, int) & (str(_const), any) -> int where x1 = (any, x1) & (str(_uminus), any) | (any, int) & (str(_const), any)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "(any, x1) & (str(_uminus), any) | (any, int) & (str(_const), any) -> int where x1 = (any, x1) & (str(_uminus), any) | (any, int) & (str(_const), any)",
        "(any, x1) & (str(_uminus), any) | (any, int) & (str(_const), any) -> int where x1 = (any, x1) & (str(_uminus), any) | (any, int) & (str(_const), any)"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "(any, 'a) & (str(_const), any) -> int | 'a",
        "(any, x1) & (str(_uminus), any) | (any, int) & (str(_const), any) -> int where x1 = (any, x1) & (str(_uminus), any) | (any, int) & (str(_const), any)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "(any, x17) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x12) | ~(x15, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) -> int where x1 = (any, x17) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x1) | ~(x2, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x2 = (any, x17) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x1) | ~(x2, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x3 = (any, x14) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x3) | ~(x15, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x4 = (any, x14) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x4) | ~(x5, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x5 = (any, x14) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x4) | ~(x5, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x6 = (any, x9) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x6) | ~(x8, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x7 = (any, x9) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x7) | ~(x8, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x8 = (any, x9) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x7) | ~(x8, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x9 = (any, x9) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x6) | ~(x8, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x10 = (any, x9) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x10) | ~(x11, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x11 = (any, x9) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x10) | ~(x11, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x12 = (any, x9) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x12) | ~(x11, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x13 = (any, x14) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x13) | ~(x5, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x14 = (any, x14) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x13) | ~(x5, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x15 = (any, x14) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x3) | ~(x15, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x16 = (any, x17) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x16) | ~(x2, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x17 = (any, x17) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x16) | ~(x2, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any)",
        "(any, x1) & (str(_uminus), any) | (any, int) & (str(_const), any) -> int where x1 = (any, x1) & (str(_uminus), any) | (any, int) & (str(_const), any)"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "(any, 'a) & (str(_const), any) -> int | 'a",
        "(any, x17) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x12) | ~(x15, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) -> int where x1 = (any, x17) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x1) | ~(x2, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x2 = (any, x17) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x1) | ~(x2, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x3 = (any, x14) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x3) | ~(x15, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x4 = (any, x14) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x4) | ~(x5, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x5 = (any, x14) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x4) | ~(x5, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x6 = (any, x9) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x6) | ~(x8, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x7 = (any, x9) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x7) | ~(x8, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x8 = (any, x9) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x7) | ~(x8, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x9 = (any, x9) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x6) | ~(x8, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x10 = (any, x9) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x10) | ~(x11, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x11 = (any, x9) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x10) | ~(x11, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x12 = (any, x9) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x12) | ~(x11, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x13 = (any, x14) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x13) | ~(x5, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x14 = (any, x14) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x13) | ~(x5, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x15 = (any, x14) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x3) | ~(x15, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x16 = (any, x17) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x16) | ~(x2, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any) and x17 = (any, x17) & (str(_uminus), any) | (any, ~(tuple2 & (~(any, x16) | ~(x2, any)))) & (str(_add), tuple2) | (any, int) & (str(_const), any)"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a \\ lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a & (lst(any, x1) | lst(tuple0)) where x1 = lst(tuple0 | (any, x1))"
      ],
      [
        "'a & (lst(any, x1) | lst(tuple0)) where x1 = lst(tuple0 | (any, x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(any, x1) where x1 = lst(tuple0 | (any, x1))",
        "lst(any, 'b & lst(x1)) where x1 = tuple0 | (any, lst(x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(any, lst(x1)) \\ lst(any, 'b & lst(x1))) where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "'a \\ (lst(any, lst(x1)) \\ lst(any, 'b & lst(x1))) where x1 = tuple0 | (any, lst(x1))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(any, 'b & lst(x1)) where x1 = tuple0 | (any, lst(x1))",
        "lst('c, x1) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(any, 'b & lst(x1)) \\ lst('c, x2)) where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2))"
      ],
      [
        "'a \\ (lst(any, 'b & lst(x1)) \\ lst('c, x2)) where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [ [ "'a", "'b -> 'c" ] ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [ [ "'a", "'a & ('b -> 'c)" ], [ "'a & ('b -> 'c)", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [],
    "constr": [ [ "'b", "'a & ('c -> 'd) -> 'e" ] ],
    "prio": [ "'a", "'b", "'c", "'d" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e" ],
    "mono": [ "'a", "'b", "'c", "'d" ],
    "constr": [
      [ "'b", "'b & ('a & ('c -> 'd) -> 'e)" ],
      [ "'b & ('a & ('c -> 'd) -> 'e)", "'b" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [],
    "constr": [
      [ "'b", "'a & lst(x1) -> 'c where x1 = tuple0 | (any, lst(x1))" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a", "'b" ],
    "constr": [
      [
        "'b", "'b & ('a & lst(x1) -> 'c) where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "'b & ('a & lst(x1) -> 'c) where x1 = tuple0 | (any, lst(x1))", "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [ "'a", "any" ], [ "'b", "x1 where x1 = lst(tuple0 | (any, x1))" ]
    ],
    "prio": [ "'a", "'b" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a & lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "'a & lst(tuple0)",
        "lst(any, x1) | lst(tuple0) where x1 = lst(tuple0 | (any, x1))"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g", "'h" ],
    "mono": [],
    "constr": [
      [
        "'b & ('e -> 'f) -> 'a & (lst('e, x3) & lst(any, 'd & lst(x1)) | lst(tuple0)) -> lst('f, 'h & lst(x2)) | lst(tuple0) where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, lst(x2)) and x3 = lst(tuple0 | (any, x3))",
        "'c & ('b & ('e -> 'f) -> 'g & ('d & lst(x1) -> 'h & lst(x2))) where x1 = tuple0 | (any, lst(x1)) and x2 = tuple0 | (any, lst(x2))"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'b & (lst(x2) & lst('c, x1) | lst(tuple0)) | 'a where x1 = lst(tuple0 | (any, x1)) and x2 = any, 'b & (lst(x2) & lst('c, x1) | lst(tuple0))"
      ],
      [
        "'b & (lst(x1) & lst('c, x2) | lst(tuple0)) | 'a where x1 = any, 'b & (lst(x1) & lst('c, x2) | lst(tuple0)) and x2 = lst(tuple0 | (any, x2))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f", "'g" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "('b & ('e -> 'f) -> 'd & (lst(any, x4) & lst('e, x2) | lst(tuple0)) | 'a & (lst(any, x4) & lst('e, x2) | lst(tuple0)) -> lst('f, lst(x5) | lst(tuple0) | 'g & lst(x6)) | lst(tuple0)) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = lst(tuple0 | (any, x3)) and x4 = 'd & (lst(any, x4) & lst('e, x3) | lst(tuple0)) and x5 = 'f, lst(x5) | lst(tuple0) | 'g & lst(x1) and x6 = tuple0 | (any, lst(x6))"
      ],
      [
        "('b & ('e -> 'f) -> 'd & (lst(any, x4) & lst('e, x2) | lst(tuple0)) | 'a & (lst(any, x4) & lst('e, x2) | lst(tuple0)) -> lst('f, lst(x6) | lst(tuple0) | 'g & lst(x5)) | lst(tuple0)) | 'c where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = lst(tuple0 | (any, x3)) and x4 = 'd & (lst(any, x4) & lst('e, x3) | lst(tuple0)) and x5 = tuple0 | (any, lst(x5)) and x6 = 'f, lst(x6) | lst(tuple0) | 'g & lst(x1)",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a \\ (lst(x1) & ~lst('b, x2) & ~lst(tuple0) | lst(x1) & ~lst(x3) & ~lst(tuple0)) where x1 = tuple0 | (any, lst(x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = any, 'a & (lst(x3) & lst('b, x2) | lst(tuple0))"
      ],
      [
        "'a \\ (lst(x2) & ~lst('b, x3) & ~lst(tuple0) | lst(x2) & ~lst(x1) & ~lst(tuple0)) where x1 = any, 'a & (lst(x1) & lst('b, x3) | lst(tuple0)) and x2 = tuple0 | (any, lst(x2)) and x3 = lst(tuple0 | (any, x3))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'e" ],
    "constr": [
      [
        "'e",
        "('b & (lst(any, x5) & lst('c, x6) | lst(tuple0)) | 'a & (lst(any, x5) & lst('c, x6) | lst(tuple0)) -> lst('d, lst(x2) | lst(tuple0) | 'f & lst(x3)) | lst(tuple0)) | 'e where x1 = tuple0 | (any, lst(x1)) and x2 = 'd, lst(x2) | lst(tuple0) | 'f & lst(x1) and x3 = tuple0 | (any, lst(x3)) and x4 = lst(tuple0 | (any, x4)) and x5 = 'b & (lst(any, x5) & lst('c, x4) | lst(tuple0)) and x6 = lst(tuple0 | (any, x6))"
      ],
      [
        "('b & (lst(any, x6) & lst('c, x4) | lst(tuple0)) | 'a & (lst(any, x6) & lst('c, x4) | lst(tuple0)) -> lst('d, lst(x2) | lst(tuple0) | 'f & lst(x3)) | lst(tuple0)) | 'e where x1 = tuple0 | (any, lst(x1)) and x2 = 'd, lst(x2) | lst(tuple0) | 'f & lst(x1) and x3 = tuple0 | (any, lst(x3)) and x4 = lst(tuple0 | (any, x4)) and x5 = lst(tuple0 | (any, x5)) and x6 = 'b & (lst(any, x6) & lst('c, x5) | lst(tuple0))",
        "'e"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "lst(x2) | lst(tuple0) | 'b where x1 = tuple0 | (any, lst(x1)) and x2 = 'a, lst(x2) | lst(tuple0) | 'b & lst(x1)"
      ],
      [
        "lst(x2) | lst(tuple0) | 'b where x1 = tuple0 | (any, lst(x1)) and x2 = 'a, lst(x2) | lst(tuple0) | 'b & lst(x1)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d", "'e", "'f" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "('b & ('d -> 'e) -> 'a & lst(tuple0) -> lst('e, 'f & lst(x1)) | lst(tuple0)) | 'c where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "('b & ('d -> 'e) -> 'a & lst(tuple0) -> lst('e, 'f & lst(x1)) | lst(tuple0)) | 'c where x1 = tuple0 | (any, lst(x1))",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))" ],
      [ "'a \\ lst(x1) where x1 = tuple0 | (any, lst(x1))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c", "'d" ],
    "mono": [ "'c" ],
    "constr": [
      [
        "'c",
        "('a & lst(tuple0) -> lst('b, 'd & lst(x1)) | lst(tuple0)) | 'c where x1 = tuple0 | (any, lst(x1))"
      ],
      [
        "('a & lst(tuple0) -> lst('b, 'd & lst(x1)) | lst(tuple0)) | 'c where x1 = tuple0 | (any, lst(x1))",
        "'c"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b", "'c" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ ('b -> 'c)" ], [ "'a \\ ('b -> 'c)", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "arrow | 'a" ], [ "arrow | 'a", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "arrow -> lst(tuple0) -> lst(tuple0)", "arrow" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "('a -> 'b) -> lst(any, x3) & lst('a, x1) | lst(tuple0) -> lst('b, x4) | lst(tuple0) where x1 = lst(tuple0 | (any, x1)) and x2 = lst(tuple0 | (any, x2)) and x3 = lst(any, x3) & lst('a, x2) | lst(tuple0) and x4 = lst('b, x4) | lst(tuple0)",
        "arrow -> lst(tuple0) -> lst(tuple0)"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "int -> int", "'a -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int", "empty" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [ "bool(true | false) -> bool(true | false)", "'a & int -> 'b" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ int" ], [ "'a \\ int", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "str(enum) -> str(enum)", "'a & int -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ int" ], [ "'a \\ int", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "chr((0..255)) -> chr((0..255))", "'a & int -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ int" ], [ "'a \\ int", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "tuple0 -> tuple0", "'a & int -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ int" ], [ "'a \\ int", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "Nil -> Nil", "'a & int -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ int" ], [ "'a \\ int", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "bool(true | false) -> bool(true | false)", "'a -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & bool(true | false)" ],
      [ "'a & bool(true | false)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "bool(true | false)", "empty" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [ "str(enum) -> str(enum)", "'a & bool(true | false) -> 'b" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ bool(true | false)" ],
      [ "'a \\ bool(true | false)", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [ "chr((0..255)) -> chr((0..255))", "'a & bool(true | false) -> 'b" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ bool(true | false)" ],
      [ "'a \\ bool(true | false)", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "tuple0 -> tuple0", "'a & bool(true | false) -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ bool(true | false)" ],
      [ "'a \\ bool(true | false)", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "Nil -> Nil", "'a & bool(true | false) -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ bool(true | false)" ],
      [ "'a \\ bool(true | false)", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "str(enum) -> str(enum)", "'a -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & str(enum)" ], [ "'a & str(enum)", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "str(enum) | 'a" ], [ "str(enum) | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "str(enum)", "empty" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [ "chr((0..255)) -> chr((0..255))", "'a & str(enum) -> 'b" ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ str(enum)" ], [ "'a \\ str(enum)", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "tuple0 -> tuple0", "'a & str(enum) -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ str(enum)" ], [ "'a \\ str(enum)", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "Nil -> Nil", "'a & str(enum) -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ str(enum)" ], [ "'a \\ str(enum)", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "chr((0..255)) -> chr((0..255))", "'a -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & chr((0..255))" ], [ "'a & chr((0..255))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "chr((0..255)) | 'a" ], [ "chr((0..255)) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "chr((0..255))", "empty" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "tuple0 -> tuple0", "'a & chr((0..255)) -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ chr((0..255))" ], [ "'a \\ chr((0..255))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "Nil -> Nil", "'a & chr((0..255)) -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a \\ chr((0..255))" ], [ "'a \\ chr((0..255))", "'a" ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "tuple0 -> tuple0", "'a -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & tuple0" ], [ "'a & tuple0", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "tuple0", "empty" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "Nil -> Nil", "'a & tuple0 -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a \\ tuple0" ], [ "'a \\ tuple0", "'a" ] ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [ [ "Nil -> Nil", "'a -> 'b" ] ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & Nil" ], [ "'a & Nil", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Nil | 'a" ], [ "Nil | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "empty" ] ] },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "('a & Nil -> Nil) & ('a & tuple0 -> tuple0) & ('a & chr((0..255)) -> chr((0..255))) & ('a & str(enum) -> str(enum)) & ('a & bool(true | false) -> bool(true | false)) & ('a & int -> int)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "('a & Nil -> Nil) & ('a & tuple0 -> tuple0) & ('a & chr((0..255)) -> chr((0..255))) & ('a & str(enum) -> str(enum)) & ('a & bool(true | false) -> bool(true | false)) & ('a & int -> int) | 'b"
      ],
      [
        "('a & Nil -> Nil) & ('a & tuple0 -> tuple0) & ('a & chr((0..255)) -> chr((0..255))) & ('a & str(enum) -> str(enum)) & ('a & bool(true | false) -> bool(true | false)) & ('a & int -> int) | 'b",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [],
    "constr": [
      [
        "(Nil -> Nil) & (tuple0 -> tuple0) & (chr((0..255)) -> chr((0..255))) & (str(enum) -> str(enum)) & (bool(true | false) -> bool(true | false)) & (int -> int)",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "(Nil -> Nil) & (tuple0 -> tuple0) & (chr((0..255)) -> chr((0..255))) & (str(enum) -> str(enum)) & (bool(true | false) -> bool(true | false)) & (int -> int) | 'a"
      ],
      [
        "(Nil -> Nil) & (tuple0 -> tuple0) & (chr((0..255)) -> chr((0..255))) & (str(enum) -> str(enum)) & (bool(true | false) -> bool(true | false)) & (int -> int) | 'a",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "(Nil -> Nil) & (tuple0 -> tuple0) & (chr((0..255)) -> chr((0..255))) & (str(enum) -> str(enum)) & (bool(true | false) -> bool(true | false)) & (int -> int)",
        "'a -> 'b"
      ]
    ],
    "prio": [ "'a" ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & int" ], [ "'a & int", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "int | 'a" ], [ "int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & bool(true | false)" ],
      [ "'a & bool(true | false)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | 'a" ],
      [ "bool(true | false) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (int | bool(true | false))" ],
      [ "'a & (int | bool(true | false))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "int | bool(true | false) | 'a" ],
      [ "int | bool(true | false) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & str(enum)" ], [ "'a & str(enum)", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "str(enum) | 'a" ], [ "str(enum) | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (int | str(enum))" ], [ "'a & (int | str(enum))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "int | str(enum) | 'a" ], [ "int | str(enum) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (bool(true | false) | str(enum))" ],
      [ "'a & (bool(true | false) | str(enum))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | str(enum) | 'a" ],
      [ "bool(true | false) | str(enum) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (int | bool(true | false) | str(enum))" ],
      [ "'a & (int | bool(true | false) | str(enum))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "int | bool(true | false) | str(enum) | 'a" ],
      [ "int | bool(true | false) | str(enum) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & chr((0..255))" ], [ "'a & chr((0..255))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "chr((0..255)) | 'a" ], [ "chr((0..255)) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (int | chr((0..255)))" ],
      [ "'a & (int | chr((0..255)))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "int | chr((0..255)) | 'a" ],
      [ "int | chr((0..255)) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (bool(true | false) | chr((0..255)))" ],
      [ "'a & (bool(true | false) | chr((0..255)))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | chr((0..255)) | 'a" ],
      [ "bool(true | false) | chr((0..255)) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (int | bool(true | false) | chr((0..255)))" ],
      [ "'a & (int | bool(true | false) | chr((0..255)))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "int | bool(true | false) | chr((0..255)) | 'a" ],
      [ "int | bool(true | false) | chr((0..255)) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (chr((0..255)) | str(enum))" ],
      [ "'a & (chr((0..255)) | str(enum))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "chr((0..255)) | str(enum) | 'a" ],
      [ "chr((0..255)) | str(enum) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (int | chr((0..255)) | str(enum))" ],
      [ "'a & (int | chr((0..255)) | str(enum))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "int | chr((0..255)) | str(enum) | 'a" ],
      [ "int | chr((0..255)) | str(enum) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (bool(true | false) | chr((0..255)) | str(enum))" ],
      [ "'a & (bool(true | false) | chr((0..255)) | str(enum))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | chr((0..255)) | str(enum) | 'a" ],
      [ "bool(true | false) | chr((0..255)) | str(enum) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (int | bool(true | false) | chr((0..255)) | str(enum))" ],
      [ "'a & (int | bool(true | false) | chr((0..255)) | str(enum))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "int | bool(true | false) | chr((0..255)) | str(enum) | 'a" ],
      [ "int | bool(true | false) | chr((0..255)) | str(enum) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & tuple0" ], [ "'a & tuple0", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "tuple0 | 'a" ], [ "tuple0 | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (int | tuple0)" ], [ "'a & (int | tuple0)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "int | tuple0 | 'a" ], [ "int | tuple0 | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (bool(true | false) | tuple0)" ],
      [ "'a & (bool(true | false) | tuple0)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | tuple0 | 'a" ],
      [ "bool(true | false) | tuple0 | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (int | bool(true | false) | tuple0)" ],
      [ "'a & (int | bool(true | false) | tuple0)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "int | bool(true | false) | tuple0 | 'a" ],
      [ "int | bool(true | false) | tuple0 | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (str(enum) | tuple0)" ],
      [ "'a & (str(enum) | tuple0)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "str(enum) | tuple0 | 'a" ],
      [ "str(enum) | tuple0 | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (int | str(enum) | tuple0)" ],
      [ "'a & (int | str(enum) | tuple0)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "int | str(enum) | tuple0 | 'a" ],
      [ "int | str(enum) | tuple0 | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (bool(true | false) | str(enum) | tuple0)" ],
      [ "'a & (bool(true | false) | str(enum) | tuple0)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | str(enum) | tuple0 | 'a" ],
      [ "bool(true | false) | str(enum) | tuple0 | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (int | bool(true | false) | str(enum) | tuple0)" ],
      [ "'a & (int | bool(true | false) | str(enum) | tuple0)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "int | bool(true | false) | str(enum) | tuple0 | 'a" ],
      [ "int | bool(true | false) | str(enum) | tuple0 | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (chr((0..255)) | tuple0)" ],
      [ "'a & (chr((0..255)) | tuple0)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "chr((0..255)) | tuple0 | 'a" ],
      [ "chr((0..255)) | tuple0 | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (int | chr((0..255)) | tuple0)" ],
      [ "'a & (int | chr((0..255)) | tuple0)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "int | chr((0..255)) | tuple0 | 'a" ],
      [ "int | chr((0..255)) | tuple0 | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (bool(true | false) | chr((0..255)) | tuple0)" ],
      [ "'a & (bool(true | false) | chr((0..255)) | tuple0)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "bool(true | false) | chr((0..255)) | tuple0 | 'a" ],
      [ "bool(true | false) | chr((0..255)) | tuple0 | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (int | bool(true | false) | chr((0..255)) | tuple0)" ],
      [ "'a & (int | bool(true | false) | chr((0..255)) | tuple0)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "int | bool(true | false) | chr((0..255)) | tuple0 | 'a" ],
      [ "int | bool(true | false) | chr((0..255)) | tuple0 | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (chr((0..255)) | str(enum) | tuple0)" ],
      [ "'a & (chr((0..255)) | str(enum) | tuple0)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "chr((0..255)) | str(enum) | tuple0 | 'a" ],
      [ "chr((0..255)) | str(enum) | tuple0 | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (int | chr((0..255)) | str(enum) | tuple0)" ],
      [ "'a & (int | chr((0..255)) | str(enum) | tuple0)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "int | chr((0..255)) | str(enum) | tuple0 | 'a" ],
      [ "int | chr((0..255)) | str(enum) | tuple0 | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a & (bool(true | false) | chr((0..255)) | str(enum) | tuple0)"
      ],
      [
        "'a & (bool(true | false) | chr((0..255)) | str(enum) | tuple0)",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a", "bool(true | false) | chr((0..255)) | str(enum) | tuple0 | 'a"
      ],
      [
        "bool(true | false) | chr((0..255)) | str(enum) | tuple0 | 'a", "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a & (int | bool(true | false) | chr((0..255)) | str(enum) | tuple0)"
      ],
      [
        "'a & (int | bool(true | false) | chr((0..255)) | str(enum) | tuple0)",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "int | bool(true | false) | chr((0..255)) | str(enum) | tuple0 | 'a"
      ],
      [
        "int | bool(true | false) | chr((0..255)) | str(enum) | tuple0 | 'a",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & Nil" ], [ "'a & Nil", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Nil | 'a" ], [ "Nil | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "'a & (Nil | int)" ], [ "'a & (Nil | int)", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "Nil | int | 'a" ], [ "Nil | int | 'a", "'a" ] ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (Nil | bool(true | false))" ],
      [ "'a & (Nil | bool(true | false))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "Nil | bool(true | false) | 'a" ],
      [ "Nil | bool(true | false) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (Nil | int | bool(true | false))" ],
      [ "'a & (Nil | int | bool(true | false))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "Nil | int | bool(true | false) | 'a" ],
      [ "Nil | int | bool(true | false) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (Nil | str(enum))" ], [ "'a & (Nil | str(enum))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "Nil | str(enum) | 'a" ], [ "Nil | str(enum) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (Nil | int | str(enum))" ],
      [ "'a & (Nil | int | str(enum))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "Nil | int | str(enum) | 'a" ],
      [ "Nil | int | str(enum) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (Nil | bool(true | false) | str(enum))" ],
      [ "'a & (Nil | bool(true | false) | str(enum))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "Nil | bool(true | false) | str(enum) | 'a" ],
      [ "Nil | bool(true | false) | str(enum) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (Nil | int | bool(true | false) | str(enum))" ],
      [ "'a & (Nil | int | bool(true | false) | str(enum))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "Nil | int | bool(true | false) | str(enum) | 'a" ],
      [ "Nil | int | bool(true | false) | str(enum) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (Nil | chr((0..255)))" ],
      [ "'a & (Nil | chr((0..255)))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "Nil | chr((0..255)) | 'a" ],
      [ "Nil | chr((0..255)) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (Nil | int | chr((0..255)))" ],
      [ "'a & (Nil | int | chr((0..255)))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "Nil | int | chr((0..255)) | 'a" ],
      [ "Nil | int | chr((0..255)) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (Nil | bool(true | false) | chr((0..255)))" ],
      [ "'a & (Nil | bool(true | false) | chr((0..255)))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "Nil | bool(true | false) | chr((0..255)) | 'a" ],
      [ "Nil | bool(true | false) | chr((0..255)) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (Nil | int | bool(true | false) | chr((0..255)))" ],
      [ "'a & (Nil | int | bool(true | false) | chr((0..255)))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "Nil | int | bool(true | false) | chr((0..255)) | 'a" ],
      [ "Nil | int | bool(true | false) | chr((0..255)) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (Nil | chr((0..255)) | str(enum))" ],
      [ "'a & (Nil | chr((0..255)) | str(enum))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "Nil | chr((0..255)) | str(enum) | 'a" ],
      [ "Nil | chr((0..255)) | str(enum) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (Nil | int | chr((0..255)) | str(enum))" ],
      [ "'a & (Nil | int | chr((0..255)) | str(enum))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "Nil | int | chr((0..255)) | str(enum) | 'a" ],
      [ "Nil | int | chr((0..255)) | str(enum) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (Nil | bool(true | false) | chr((0..255)) | str(enum))" ],
      [ "'a & (Nil | bool(true | false) | chr((0..255)) | str(enum))", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "Nil | bool(true | false) | chr((0..255)) | str(enum) | 'a" ],
      [ "Nil | bool(true | false) | chr((0..255)) | str(enum) | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a & (Nil | int | bool(true | false) | chr((0..255)) | str(enum))"
      ],
      [
        "'a & (Nil | int | bool(true | false) | chr((0..255)) | str(enum))",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | 'a"
      ],
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | 'a",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (Nil | tuple0)" ], [ "'a & (Nil | tuple0)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "Nil | tuple0 | 'a" ], [ "Nil | tuple0 | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (Nil | int | tuple0)" ],
      [ "'a & (Nil | int | tuple0)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "Nil | int | tuple0 | 'a" ],
      [ "Nil | int | tuple0 | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (Nil | bool(true | false) | tuple0)" ],
      [ "'a & (Nil | bool(true | false) | tuple0)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "Nil | bool(true | false) | tuple0 | 'a" ],
      [ "Nil | bool(true | false) | tuple0 | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (Nil | int | bool(true | false) | tuple0)" ],
      [ "'a & (Nil | int | bool(true | false) | tuple0)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "Nil | int | bool(true | false) | tuple0 | 'a" ],
      [ "Nil | int | bool(true | false) | tuple0 | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (Nil | str(enum) | tuple0)" ],
      [ "'a & (Nil | str(enum) | tuple0)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "Nil | str(enum) | tuple0 | 'a" ],
      [ "Nil | str(enum) | tuple0 | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (Nil | int | str(enum) | tuple0)" ],
      [ "'a & (Nil | int | str(enum) | tuple0)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "Nil | int | str(enum) | tuple0 | 'a" ],
      [ "Nil | int | str(enum) | tuple0 | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (Nil | bool(true | false) | str(enum) | tuple0)" ],
      [ "'a & (Nil | bool(true | false) | str(enum) | tuple0)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "Nil | bool(true | false) | str(enum) | tuple0 | 'a" ],
      [ "Nil | bool(true | false) | str(enum) | tuple0 | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (Nil | int | bool(true | false) | str(enum) | tuple0)" ],
      [ "'a & (Nil | int | bool(true | false) | str(enum) | tuple0)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "Nil | int | bool(true | false) | str(enum) | tuple0 | 'a" ],
      [ "Nil | int | bool(true | false) | str(enum) | tuple0 | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (Nil | chr((0..255)) | tuple0)" ],
      [ "'a & (Nil | chr((0..255)) | tuple0)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "Nil | chr((0..255)) | tuple0 | 'a" ],
      [ "Nil | chr((0..255)) | tuple0 | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (Nil | int | chr((0..255)) | tuple0)" ],
      [ "'a & (Nil | int | chr((0..255)) | tuple0)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "Nil | int | chr((0..255)) | tuple0 | 'a" ],
      [ "Nil | int | chr((0..255)) | tuple0 | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (Nil | bool(true | false) | chr((0..255)) | tuple0)" ],
      [ "'a & (Nil | bool(true | false) | chr((0..255)) | tuple0)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "Nil | bool(true | false) | chr((0..255)) | tuple0 | 'a" ],
      [ "Nil | bool(true | false) | chr((0..255)) | tuple0 | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a & (Nil | int | bool(true | false) | chr((0..255)) | tuple0)"
      ],
      [
        "'a & (Nil | int | bool(true | false) | chr((0..255)) | tuple0)",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a", "Nil | int | bool(true | false) | chr((0..255)) | tuple0 | 'a"
      ],
      [
        "Nil | int | bool(true | false) | chr((0..255)) | tuple0 | 'a", "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (Nil | chr((0..255)) | str(enum) | tuple0)" ],
      [ "'a & (Nil | chr((0..255)) | str(enum) | tuple0)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "Nil | chr((0..255)) | str(enum) | tuple0 | 'a" ],
      [ "Nil | chr((0..255)) | str(enum) | tuple0 | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "'a & (Nil | int | chr((0..255)) | str(enum) | tuple0)" ],
      [ "'a & (Nil | int | chr((0..255)) | str(enum) | tuple0)", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [ "'a", "Nil | int | chr((0..255)) | str(enum) | tuple0 | 'a" ],
      [ "Nil | int | chr((0..255)) | str(enum) | tuple0 | 'a", "'a" ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a & (Nil | bool(true | false) | chr((0..255)) | str(enum) | tuple0)"
      ],
      [
        "'a & (Nil | bool(true | false) | chr((0..255)) | str(enum) | tuple0)",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "Nil | bool(true | false) | chr((0..255)) | str(enum) | tuple0 | 'a"
      ],
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum) | tuple0 | 'a",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "'a & (Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0)"
      ],
      [
        "'a & (Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0)",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [
      [
        "'a",
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0 | 'a"
      ],
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0 | 'a",
        "'a"
      ]
    ]
  },
  {
    "vars": [ "'a" ],
    "mono": [ "'a" ],
    "constr": [ [ "'a", "empty" ], [ "empty", "'a" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "empty"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "empty"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | chr((0..255)) | str(enum) | tuple0", "empty" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | chr((0..255)) | str(enum) | tuple0", "empty" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | bool(true | false) | chr((0..255)) | tuple0", "empty" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | bool(true | false) | chr((0..255)) | tuple0", "empty" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | chr((0..255)) | tuple0", "empty" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | chr((0..255)) | tuple0", "empty" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | bool(true | false) | str(enum) | tuple0", "empty" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | bool(true | false) | str(enum) | tuple0", "empty" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | str(enum) | tuple0", "empty" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | str(enum) | tuple0", "empty" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | bool(true | false) | tuple0", "empty" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | bool(true | false) | tuple0", "empty" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil | int | tuple0", "empty" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "Nil | tuple0", "empty" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum)", "empty"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | bool(true | false) | chr((0..255)) | str(enum)", "empty" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | chr((0..255)) | str(enum)", "empty" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | chr((0..255)) | str(enum)", "empty" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | bool(true | false) | chr((0..255))", "empty" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | bool(true | false) | chr((0..255))", "empty" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | chr((0..255))", "empty" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | chr((0..255))", "empty" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | bool(true | false) | str(enum)", "empty" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | bool(true | false) | str(enum)", "empty" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | str(enum)", "empty" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil | str(enum)", "empty" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | bool(true | false)", "empty" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | bool(true | false)", "empty" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil | int", "empty" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "Nil", "empty" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "empty"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "bool(true | false) | chr((0..255)) | str(enum) | tuple0", "empty" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int | chr((0..255)) | str(enum) | tuple0", "empty" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "chr((0..255)) | str(enum) | tuple0", "empty" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "int | bool(true | false) | chr((0..255)) | tuple0", "empty" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "bool(true | false) | chr((0..255)) | tuple0", "empty" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int | chr((0..255)) | tuple0", "empty" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "chr((0..255)) | tuple0", "empty" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "int | bool(true | false) | str(enum) | tuple0", "empty" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "bool(true | false) | str(enum) | tuple0", "empty" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int | str(enum) | tuple0", "empty" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "str(enum) | tuple0", "empty" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int | bool(true | false) | tuple0", "empty" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "bool(true | false) | tuple0", "empty" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int | tuple0", "empty" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "tuple0", "empty" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "int | bool(true | false) | chr((0..255)) | str(enum)", "empty" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "bool(true | false) | chr((0..255)) | str(enum)", "empty" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int | chr((0..255)) | str(enum)", "empty" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "chr((0..255)) | str(enum)", "empty" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int | bool(true | false) | chr((0..255))", "empty" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "bool(true | false) | chr((0..255))", "empty" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int | chr((0..255))", "empty" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "chr((0..255))", "empty" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int | bool(true | false) | str(enum)", "empty" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "bool(true | false) | str(enum)", "empty" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int | str(enum)", "empty" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "str(enum)", "empty" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int | bool(true | false)", "empty" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "bool(true | false)", "empty" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "int", "empty" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | bool(true | false) | chr((0..255)) | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | int | chr((0..255)) | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | chr((0..255)) | str(enum) | tuple0",
        "Nil | chr((0..255)) | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | chr((0..255)) | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | chr((0..255)) | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | int | bool(true | false) | chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | tuple0",
        "Nil | bool(true | false) | chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | bool(true | false) | chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | bool(true | false) | chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | tuple0",
        "Nil | int | chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | chr((0..255)) | str(enum) | tuple0",
        "Nil | int | chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | int | chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | chr((0..255)) | tuple0", "Nil | chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | tuple0",
        "Nil | chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | tuple0",
        "Nil | chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | chr((0..255)) | str(enum) | tuple0",
        "Nil | chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | chr((0..255)) | str(enum) | tuple0",
        "Nil | chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | int | bool(true | false) | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | str(enum) | tuple0",
        "Nil | bool(true | false) | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | bool(true | false) | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | bool(true | false) | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | str(enum) | tuple0",
        "Nil | int | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | chr((0..255)) | str(enum) | tuple0",
        "Nil | int | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | int | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | str(enum) | tuple0", "Nil | str(enum) | tuple0" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | str(enum) | tuple0",
        "Nil | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | str(enum) | tuple0",
        "Nil | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | chr((0..255)) | str(enum) | tuple0",
        "Nil | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | chr((0..255)) | str(enum) | tuple0",
        "Nil | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | str(enum) | tuple0",
        "Nil | int | bool(true | false) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | tuple0",
        "Nil | int | bool(true | false) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | int | bool(true | false) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | tuple0",
        "Nil | bool(true | false) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | str(enum) | tuple0",
        "Nil | bool(true | false) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | str(enum) | tuple0",
        "Nil | bool(true | false) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | tuple0",
        "Nil | bool(true | false) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | tuple0",
        "Nil | bool(true | false) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | bool(true | false) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | bool(true | false) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | bool(true | false) | tuple0", "Nil | int | tuple0" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | str(enum) | tuple0", "Nil | int | tuple0" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | str(enum) | tuple0",
        "Nil | int | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | chr((0..255)) | tuple0", "Nil | int | tuple0" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | tuple0",
        "Nil | int | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | chr((0..255)) | str(enum) | tuple0",
        "Nil | int | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | int | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | tuple0", "Nil | tuple0" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | bool(true | false) | tuple0", "Nil | tuple0" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | bool(true | false) | tuple0", "Nil | tuple0" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | str(enum) | tuple0", "Nil | tuple0" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | str(enum) | tuple0", "Nil | tuple0" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | bool(true | false) | str(enum) | tuple0", "Nil | tuple0" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | str(enum) | tuple0", "Nil | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | chr((0..255)) | tuple0", "Nil | tuple0" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | chr((0..255)) | tuple0", "Nil | tuple0" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | bool(true | false) | chr((0..255)) | tuple0", "Nil | tuple0" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | tuple0",
        "Nil | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | chr((0..255)) | str(enum) | tuple0", "Nil | tuple0" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | chr((0..255)) | str(enum) | tuple0", "Nil | tuple0" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum)",
        "Nil | bool(true | false) | chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | bool(true | false) | chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | bool(true | false) | chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum)",
        "Nil | int | chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | chr((0..255)) | str(enum) | tuple0",
        "Nil | int | chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | int | chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | chr((0..255)) | str(enum)",
        "Nil | chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum)",
        "Nil | chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum)",
        "Nil | chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | chr((0..255)) | str(enum) | tuple0",
        "Nil | chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | chr((0..255)) | str(enum) | tuple0",
        "Nil | chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum)",
        "Nil | int | bool(true | false) | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | tuple0",
        "Nil | int | bool(true | false) | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | int | bool(true | false) | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255))",
        "Nil | bool(true | false) | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum)",
        "Nil | bool(true | false) | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum)",
        "Nil | bool(true | false) | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | tuple0",
        "Nil | bool(true | false) | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | tuple0",
        "Nil | bool(true | false) | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | bool(true | false) | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | bool(true | false) | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255))",
        "Nil | int | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | chr((0..255)) | str(enum)", "Nil | int | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum)",
        "Nil | int | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | chr((0..255)) | tuple0", "Nil | int | chr((0..255))" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | tuple0",
        "Nil | int | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | chr((0..255)) | str(enum) | tuple0",
        "Nil | int | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | int | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | chr((0..255))", "Nil | chr((0..255))" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | bool(true | false) | chr((0..255))", "Nil | chr((0..255))" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255))",
        "Nil | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | chr((0..255)) | str(enum)", "Nil | chr((0..255))" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | chr((0..255)) | str(enum)", "Nil | chr((0..255))" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum)",
        "Nil | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum)",
        "Nil | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | chr((0..255)) | tuple0", "Nil | chr((0..255))" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | chr((0..255)) | tuple0", "Nil | chr((0..255))" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | tuple0",
        "Nil | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | tuple0",
        "Nil | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | chr((0..255)) | str(enum) | tuple0", "Nil | chr((0..255))" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | chr((0..255)) | str(enum) | tuple0",
        "Nil | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum)",
        "Nil | int | bool(true | false) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | str(enum) | tuple0",
        "Nil | int | bool(true | false) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | int | bool(true | false) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | str(enum)",
        "Nil | bool(true | false) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum)",
        "Nil | bool(true | false) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum)",
        "Nil | bool(true | false) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | str(enum) | tuple0",
        "Nil | bool(true | false) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | str(enum) | tuple0",
        "Nil | bool(true | false) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | bool(true | false) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | bool(true | false) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | str(enum)", "Nil | int | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | chr((0..255)) | str(enum)", "Nil | int | str(enum)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum)",
        "Nil | int | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | str(enum) | tuple0", "Nil | int | str(enum)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | str(enum) | tuple0",
        "Nil | int | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | chr((0..255)) | str(enum) | tuple0",
        "Nil | int | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | int | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | str(enum)", "Nil | str(enum)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | bool(true | false) | str(enum)", "Nil | str(enum)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | bool(true | false) | str(enum)", "Nil | str(enum)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | chr((0..255)) | str(enum)", "Nil | str(enum)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | chr((0..255)) | str(enum)", "Nil | str(enum)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum)",
        "Nil | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum)",
        "Nil | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | str(enum) | tuple0", "Nil | str(enum)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | str(enum) | tuple0", "Nil | str(enum)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | bool(true | false) | str(enum) | tuple0", "Nil | str(enum)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | str(enum) | tuple0",
        "Nil | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | chr((0..255)) | str(enum) | tuple0", "Nil | str(enum)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | chr((0..255)) | str(enum) | tuple0", "Nil | str(enum)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | str(enum)",
        "Nil | int | bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255))",
        "Nil | int | bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum)",
        "Nil | int | bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | tuple0",
        "Nil | int | bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | str(enum) | tuple0",
        "Nil | int | bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | tuple0",
        "Nil | int | bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | int | bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | bool(true | false)", "Nil | bool(true | false)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | bool(true | false) | str(enum)", "Nil | bool(true | false)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | str(enum)",
        "Nil | bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255))",
        "Nil | bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255))",
        "Nil | bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum)",
        "Nil | bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum)",
        "Nil | bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | bool(true | false) | tuple0", "Nil | bool(true | false)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | tuple0", "Nil | bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | str(enum) | tuple0",
        "Nil | bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | str(enum) | tuple0",
        "Nil | bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | tuple0",
        "Nil | bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | tuple0",
        "Nil | bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | bool(true | false)", "Nil | int" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | str(enum)", "Nil | int" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | bool(true | false) | str(enum)", "Nil | int" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | chr((0..255))", "Nil | int" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | bool(true | false) | chr((0..255))", "Nil | int" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | chr((0..255)) | str(enum)", "Nil | int" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum)",
        "Nil | int"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | tuple0", "Nil | int" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | bool(true | false) | tuple0", "Nil | int" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | str(enum) | tuple0", "Nil | int" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | bool(true | false) | str(enum) | tuple0", "Nil | int" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | chr((0..255)) | tuple0", "Nil | int" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | tuple0",
        "Nil | int"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | chr((0..255)) | str(enum) | tuple0", "Nil | int" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil | int"
      ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil | int", "Nil" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | bool(true | false)", "Nil" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | bool(true | false)", "Nil" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil | str(enum)", "Nil" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | str(enum)", "Nil" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | bool(true | false) | str(enum)", "Nil" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | bool(true | false) | str(enum)", "Nil" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil | chr((0..255))", "Nil" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | chr((0..255))", "Nil" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | bool(true | false) | chr((0..255))", "Nil" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | bool(true | false) | chr((0..255))", "Nil" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | chr((0..255)) | str(enum)", "Nil" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | chr((0..255)) | str(enum)", "Nil" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | bool(true | false) | chr((0..255)) | str(enum)", "Nil" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | bool(true | false) | chr((0..255)) | str(enum)", "Nil" ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil | tuple0", "Nil" ] ] },
  { "vars": [], "mono": [], "constr": [ [ "Nil | int | tuple0", "Nil" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | bool(true | false) | tuple0", "Nil" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | bool(true | false) | tuple0", "Nil" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | str(enum) | tuple0", "Nil" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | str(enum) | tuple0", "Nil" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | bool(true | false) | str(enum) | tuple0", "Nil" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | bool(true | false) | str(enum) | tuple0", "Nil" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | chr((0..255)) | tuple0", "Nil" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | chr((0..255)) | tuple0", "Nil" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | bool(true | false) | chr((0..255)) | tuple0", "Nil" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | bool(true | false) | chr((0..255)) | tuple0", "Nil" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | chr((0..255)) | str(enum) | tuple0", "Nil" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | chr((0..255)) | str(enum) | tuple0", "Nil" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "Nil"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "int | bool(true | false) | chr((0..255)) | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "bool(true | false) | chr((0..255)) | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "bool(true | false) | chr((0..255)) | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "bool(true | false) | chr((0..255)) | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "int | chr((0..255)) | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | chr((0..255)) | str(enum) | tuple0",
        "int | chr((0..255)) | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "int | chr((0..255)) | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | chr((0..255)) | str(enum) | tuple0",
        "chr((0..255)) | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "chr((0..255)) | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "chr((0..255)) | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | chr((0..255)) | str(enum) | tuple0",
        "chr((0..255)) | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | chr((0..255)) | str(enum) | tuple0",
        "chr((0..255)) | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "chr((0..255)) | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "chr((0..255)) | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "int | bool(true | false) | chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | tuple0",
        "int | bool(true | false) | chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "int | bool(true | false) | chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | tuple0",
        "bool(true | false) | chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "bool(true | false) | chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "bool(true | false) | chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | tuple0",
        "bool(true | false) | chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | tuple0",
        "bool(true | false) | chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "bool(true | false) | chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "bool(true | false) | chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | tuple0",
        "int | chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | chr((0..255)) | str(enum) | tuple0",
        "int | chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "int | chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | chr((0..255)) | tuple0", "int | chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | tuple0",
        "int | chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | chr((0..255)) | str(enum) | tuple0",
        "int | chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "int | chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "int | chr((0..255)) | tuple0", "chr((0..255)) | tuple0" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "bool(true | false) | chr((0..255)) | tuple0",
        "chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | tuple0",
        "chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "chr((0..255)) | str(enum) | tuple0", "chr((0..255)) | tuple0" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | chr((0..255)) | str(enum) | tuple0", "chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | chr((0..255)) | tuple0", "chr((0..255)) | tuple0" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | chr((0..255)) | tuple0", "chr((0..255)) | tuple0" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | tuple0",
        "chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | tuple0",
        "chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | chr((0..255)) | str(enum) | tuple0", "chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | chr((0..255)) | str(enum) | tuple0",
        "chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "chr((0..255)) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "int | bool(true | false) | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | str(enum) | tuple0",
        "int | bool(true | false) | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "int | bool(true | false) | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | str(enum) | tuple0",
        "bool(true | false) | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "bool(true | false) | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "bool(true | false) | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | str(enum) | tuple0",
        "bool(true | false) | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | str(enum) | tuple0",
        "bool(true | false) | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "bool(true | false) | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "bool(true | false) | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | str(enum) | tuple0",
        "int | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | chr((0..255)) | str(enum) | tuple0",
        "int | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "int | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | str(enum) | tuple0", "int | str(enum) | tuple0" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | str(enum) | tuple0",
        "int | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | chr((0..255)) | str(enum) | tuple0",
        "int | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "int | str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int | str(enum) | tuple0", "str(enum) | tuple0" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "bool(true | false) | str(enum) | tuple0", "str(enum) | tuple0" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | str(enum) | tuple0", "str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "chr((0..255)) | str(enum) | tuple0", "str(enum) | tuple0" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "int | chr((0..255)) | str(enum) | tuple0", "str(enum) | tuple0" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | str(enum) | tuple0", "str(enum) | tuple0" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | str(enum) | tuple0", "str(enum) | tuple0" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | str(enum) | tuple0", "str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | str(enum) | tuple0",
        "str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | chr((0..255)) | str(enum) | tuple0", "str(enum) | tuple0" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | chr((0..255)) | str(enum) | tuple0",
        "str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "str(enum) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | str(enum) | tuple0",
        "int | bool(true | false) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | tuple0",
        "int | bool(true | false) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "int | bool(true | false) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | tuple0",
        "int | bool(true | false) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | str(enum) | tuple0",
        "int | bool(true | false) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | tuple0",
        "int | bool(true | false) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "int | bool(true | false) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "int | bool(true | false) | tuple0", "bool(true | false) | tuple0" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "bool(true | false) | str(enum) | tuple0",
        "bool(true | false) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | str(enum) | tuple0",
        "bool(true | false) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "bool(true | false) | chr((0..255)) | tuple0",
        "bool(true | false) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | tuple0",
        "bool(true | false) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "bool(true | false) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "bool(true | false) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | bool(true | false) | tuple0", "bool(true | false) | tuple0" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | tuple0",
        "bool(true | false) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | str(enum) | tuple0",
        "bool(true | false) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | str(enum) | tuple0",
        "bool(true | false) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | tuple0",
        "bool(true | false) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | tuple0",
        "bool(true | false) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "bool(true | false) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "bool(true | false) | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int | bool(true | false) | tuple0", "int | tuple0" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int | str(enum) | tuple0", "int | tuple0" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "int | bool(true | false) | str(enum) | tuple0", "int | tuple0" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int | chr((0..255)) | tuple0", "int | tuple0" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "int | bool(true | false) | chr((0..255)) | tuple0", "int | tuple0" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "int | chr((0..255)) | str(enum) | tuple0", "int | tuple0" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "int | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | tuple0", "int | tuple0" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | bool(true | false) | tuple0", "int | tuple0" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | str(enum) | tuple0", "int | tuple0" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | str(enum) | tuple0", "int | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | chr((0..255)) | tuple0", "int | tuple0" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | tuple0",
        "int | tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | chr((0..255)) | str(enum) | tuple0", "int | tuple0" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "int | tuple0"
      ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int | tuple0", "tuple0" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "bool(true | false) | tuple0", "tuple0" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int | bool(true | false) | tuple0", "tuple0" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "str(enum) | tuple0", "tuple0" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int | str(enum) | tuple0", "tuple0" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "bool(true | false) | str(enum) | tuple0", "tuple0" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "int | bool(true | false) | str(enum) | tuple0", "tuple0" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "chr((0..255)) | tuple0", "tuple0" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int | chr((0..255)) | tuple0", "tuple0" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "bool(true | false) | chr((0..255)) | tuple0", "tuple0" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "int | bool(true | false) | chr((0..255)) | tuple0", "tuple0" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "chr((0..255)) | str(enum) | tuple0", "tuple0" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int | chr((0..255)) | str(enum) | tuple0", "tuple0" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "bool(true | false) | chr((0..255)) | str(enum) | tuple0", "tuple0" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "tuple0"
      ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil | tuple0", "tuple0" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | tuple0", "tuple0" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | bool(true | false) | tuple0", "tuple0" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | bool(true | false) | tuple0", "tuple0" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | str(enum) | tuple0", "tuple0" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | str(enum) | tuple0", "tuple0" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | bool(true | false) | str(enum) | tuple0", "tuple0" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | bool(true | false) | str(enum) | tuple0", "tuple0" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | chr((0..255)) | tuple0", "tuple0" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | chr((0..255)) | tuple0", "tuple0" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | bool(true | false) | chr((0..255)) | tuple0", "tuple0" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | bool(true | false) | chr((0..255)) | tuple0", "tuple0" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | chr((0..255)) | str(enum) | tuple0", "tuple0" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | chr((0..255)) | str(enum) | tuple0", "tuple0" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "tuple0"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "int | bool(true | false) | chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum)",
        "int | bool(true | false) | chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "int | bool(true | false) | chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum)",
        "bool(true | false) | chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "bool(true | false) | chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "bool(true | false) | chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum)",
        "bool(true | false) | chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum)",
        "bool(true | false) | chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "bool(true | false) | chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "bool(true | false) | chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum)",
        "int | chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | chr((0..255)) | str(enum) | tuple0",
        "int | chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "int | chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | chr((0..255)) | str(enum)",
        "int | chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum)",
        "int | chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | chr((0..255)) | str(enum) | tuple0",
        "int | chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "int | chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "int | chr((0..255)) | str(enum)", "chr((0..255)) | str(enum)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "bool(true | false) | chr((0..255)) | str(enum)",
        "chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum)",
        "chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "chr((0..255)) | str(enum) | tuple0", "chr((0..255)) | str(enum)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | chr((0..255)) | str(enum) | tuple0",
        "chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | chr((0..255)) | str(enum)", "chr((0..255)) | str(enum)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | chr((0..255)) | str(enum)", "chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum)",
        "chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum)",
        "chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | chr((0..255)) | str(enum) | tuple0",
        "chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | chr((0..255)) | str(enum) | tuple0",
        "chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "chr((0..255)) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum)",
        "int | bool(true | false) | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | tuple0",
        "int | bool(true | false) | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "int | bool(true | false) | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255))",
        "int | bool(true | false) | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum)",
        "int | bool(true | false) | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | tuple0",
        "int | bool(true | false) | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "int | bool(true | false) | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255))",
        "bool(true | false) | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "bool(true | false) | chr((0..255)) | str(enum)",
        "bool(true | false) | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum)",
        "bool(true | false) | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "bool(true | false) | chr((0..255)) | tuple0",
        "bool(true | false) | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | tuple0",
        "bool(true | false) | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "bool(true | false) | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "bool(true | false) | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255))",
        "bool(true | false) | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255))",
        "bool(true | false) | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum)",
        "bool(true | false) | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum)",
        "bool(true | false) | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | tuple0",
        "bool(true | false) | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | tuple0",
        "bool(true | false) | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "bool(true | false) | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "bool(true | false) | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "int | bool(true | false) | chr((0..255))", "int | chr((0..255))" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "int | chr((0..255)) | str(enum)", "int | chr((0..255))" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum)",
        "int | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int | chr((0..255)) | tuple0", "int | chr((0..255))" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | tuple0",
        "int | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "int | chr((0..255)) | str(enum) | tuple0", "int | chr((0..255))" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "int | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | chr((0..255))", "int | chr((0..255))" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255))",
        "int | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | chr((0..255)) | str(enum)", "int | chr((0..255))" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum)",
        "int | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | chr((0..255)) | tuple0", "int | chr((0..255))" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | tuple0",
        "int | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | chr((0..255)) | str(enum) | tuple0",
        "int | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "int | chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int | chr((0..255))", "chr((0..255))" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "bool(true | false) | chr((0..255))", "chr((0..255))" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "int | bool(true | false) | chr((0..255))", "chr((0..255))" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "chr((0..255)) | str(enum)", "chr((0..255))" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int | chr((0..255)) | str(enum)", "chr((0..255))" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "bool(true | false) | chr((0..255)) | str(enum)", "chr((0..255))" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum)",
        "chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "chr((0..255)) | tuple0", "chr((0..255))" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int | chr((0..255)) | tuple0", "chr((0..255))" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "bool(true | false) | chr((0..255)) | tuple0", "chr((0..255))" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | tuple0", "chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "chr((0..255)) | str(enum) | tuple0", "chr((0..255))" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "int | chr((0..255)) | str(enum) | tuple0", "chr((0..255))" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | chr((0..255))", "chr((0..255))" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | chr((0..255))", "chr((0..255))" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | bool(true | false) | chr((0..255))", "chr((0..255))" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | bool(true | false) | chr((0..255))", "chr((0..255))" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | chr((0..255)) | str(enum)", "chr((0..255))" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | chr((0..255)) | str(enum)", "chr((0..255))" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum)",
        "chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum)",
        "chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | chr((0..255)) | tuple0", "chr((0..255))" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | chr((0..255)) | tuple0", "chr((0..255))" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | tuple0", "chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | tuple0",
        "chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | chr((0..255)) | str(enum) | tuple0", "chr((0..255))" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | chr((0..255)) | str(enum) | tuple0", "chr((0..255))" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "chr((0..255))"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum)",
        "int | bool(true | false) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | str(enum) | tuple0",
        "int | bool(true | false) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "int | bool(true | false) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | str(enum)",
        "int | bool(true | false) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum)",
        "int | bool(true | false) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | str(enum) | tuple0",
        "int | bool(true | false) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "int | bool(true | false) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | str(enum)",
        "bool(true | false) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "bool(true | false) | chr((0..255)) | str(enum)",
        "bool(true | false) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum)",
        "bool(true | false) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "bool(true | false) | str(enum) | tuple0",
        "bool(true | false) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | str(enum) | tuple0",
        "bool(true | false) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "bool(true | false) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "bool(true | false) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | str(enum)",
        "bool(true | false) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | str(enum)",
        "bool(true | false) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum)",
        "bool(true | false) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum)",
        "bool(true | false) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | str(enum) | tuple0",
        "bool(true | false) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | str(enum) | tuple0",
        "bool(true | false) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "bool(true | false) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "bool(true | false) | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "int | bool(true | false) | str(enum)", "int | str(enum)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int | chr((0..255)) | str(enum)", "int | str(enum)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum)",
        "int | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int | str(enum) | tuple0", "int | str(enum)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "int | bool(true | false) | str(enum) | tuple0", "int | str(enum)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "int | chr((0..255)) | str(enum) | tuple0", "int | str(enum)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "int | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | str(enum)", "int | str(enum)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | bool(true | false) | str(enum)", "int | str(enum)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | chr((0..255)) | str(enum)", "int | str(enum)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum)",
        "int | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | str(enum) | tuple0", "int | str(enum)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | str(enum) | tuple0",
        "int | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | chr((0..255)) | str(enum) | tuple0", "int | str(enum)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "int | str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int | str(enum)", "str(enum)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "bool(true | false) | str(enum)", "str(enum)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int | bool(true | false) | str(enum)", "str(enum)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "chr((0..255)) | str(enum)", "str(enum)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int | chr((0..255)) | str(enum)", "str(enum)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "bool(true | false) | chr((0..255)) | str(enum)", "str(enum)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "int | bool(true | false) | chr((0..255)) | str(enum)", "str(enum)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "str(enum) | tuple0", "str(enum)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int | str(enum) | tuple0", "str(enum)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "bool(true | false) | str(enum) | tuple0", "str(enum)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "int | bool(true | false) | str(enum) | tuple0", "str(enum)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "chr((0..255)) | str(enum) | tuple0", "str(enum)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int | chr((0..255)) | str(enum) | tuple0", "str(enum)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | str(enum)", "str(enum)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | str(enum)", "str(enum)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | bool(true | false) | str(enum)", "str(enum)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | bool(true | false) | str(enum)", "str(enum)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | chr((0..255)) | str(enum)", "str(enum)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | chr((0..255)) | str(enum)", "str(enum)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | bool(true | false) | chr((0..255)) | str(enum)", "str(enum)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum)",
        "str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | str(enum) | tuple0", "str(enum)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | str(enum) | tuple0", "str(enum)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | bool(true | false) | str(enum) | tuple0", "str(enum)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | bool(true | false) | str(enum) | tuple0", "str(enum)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | chr((0..255)) | str(enum) | tuple0", "str(enum)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | chr((0..255)) | str(enum) | tuple0", "str(enum)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "str(enum)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "int | bool(true | false) | str(enum)", "int | bool(true | false)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255))",
        "int | bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum)",
        "int | bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "int | bool(true | false) | tuple0", "int | bool(true | false)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | str(enum) | tuple0",
        "int | bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | tuple0",
        "int | bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "int | bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | bool(true | false)", "int | bool(true | false)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | str(enum)",
        "int | bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255))",
        "int | bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum)",
        "int | bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | tuple0", "int | bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | str(enum) | tuple0",
        "int | bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | tuple0",
        "int | bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "int | bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int | bool(true | false)", "bool(true | false)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "bool(true | false) | str(enum)", "bool(true | false)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "int | bool(true | false) | str(enum)", "bool(true | false)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "bool(true | false) | chr((0..255))", "bool(true | false)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "int | bool(true | false) | chr((0..255))", "bool(true | false)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "bool(true | false) | chr((0..255)) | str(enum)",
        "bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum)",
        "bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "bool(true | false) | tuple0", "bool(true | false)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "int | bool(true | false) | tuple0", "bool(true | false)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "bool(true | false) | str(enum) | tuple0", "bool(true | false)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | str(enum) | tuple0", "bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "bool(true | false) | chr((0..255)) | tuple0", "bool(true | false)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | tuple0",
        "bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | bool(true | false)", "bool(true | false)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | bool(true | false)", "bool(true | false)" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | bool(true | false) | str(enum)", "bool(true | false)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | bool(true | false) | str(enum)", "bool(true | false)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | bool(true | false) | chr((0..255))", "bool(true | false)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255))",
        "bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum)",
        "bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum)",
        "bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | bool(true | false) | tuple0", "bool(true | false)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | bool(true | false) | tuple0", "bool(true | false)" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | str(enum) | tuple0", "bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | str(enum) | tuple0",
        "bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | tuple0",
        "bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | tuple0",
        "bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "bool(true | false)"
      ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int | bool(true | false)", "int" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int | str(enum)", "int" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int | bool(true | false) | str(enum)", "int" ] ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int | chr((0..255))", "int" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int | bool(true | false) | chr((0..255))", "int" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int | chr((0..255)) | str(enum)", "int" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "int | bool(true | false) | chr((0..255)) | str(enum)", "int" ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "int | tuple0", "int" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int | bool(true | false) | tuple0", "int" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int | str(enum) | tuple0", "int" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int | bool(true | false) | str(enum) | tuple0", "int" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int | chr((0..255)) | tuple0", "int" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "int | bool(true | false) | chr((0..255)) | tuple0", "int" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "int | chr((0..255)) | str(enum) | tuple0", "int" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "int"
      ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil | int", "int" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | bool(true | false)", "int" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | str(enum)", "int" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | bool(true | false) | str(enum)", "int" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | chr((0..255))", "int" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | bool(true | false) | chr((0..255))", "int" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | chr((0..255)) | str(enum)", "int" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | bool(true | false) | chr((0..255)) | str(enum)", "int" ]
    ]
  },
  { "vars": [], "mono": [], "constr": [ [ "Nil | int | tuple0", "int" ] ] },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | bool(true | false) | tuple0", "int" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | str(enum) | tuple0", "int" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | bool(true | false) | str(enum) | tuple0", "int" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | chr((0..255)) | tuple0", "int" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [ "Nil | int | bool(true | false) | chr((0..255)) | tuple0", "int" ]
    ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [ [ "Nil | int | chr((0..255)) | str(enum) | tuple0", "int" ] ]
  },
  {
    "vars": [],
    "mono": [],
    "constr": [
      [
        "Nil | int | bool(true | false) | chr((0..255)) | str(enum) | tuple0",
        "int"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [],
    "constr": [
      [
        "('a & int -> int) & ('a & bool(true | false) -> bool(true | false)) & ('a & str(enum) -> str(enum)) & ('a & chr((0..255)) -> chr((0..255))) & ('a & tuple0 -> tuple0) & ('a & Nil -> Nil)",
        "'b"
      ]
    ]
  },
  {
    "vars": [ "'a", "'b" ],
    "mono": [ "'b" ],
    "constr": [
      [
        "'b",
        "('a & int -> int) & ('a & bool(true | false) -> bool(true | false)) & ('a & str(enum) -> str(enum)) & ('a & chr((0..255)) -> chr((0..255))) & ('a & tuple0 -> tuple0) & ('a & Nil -> Nil) | 'b"
      ],
      [
        "('a & int -> int) & ('a & bool(true | false) -> bool(true | false)) & ('a & str(enum) -> str(enum)) & ('a & chr((0..255)) -> chr((0..255))) & ('a & tuple0 -> tuple0) & ('a & Nil -> Nil) | 'b",
        "'b"
      ]
    ]
  }
]